{"version":3,"file":"xy.js","mappings":"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","sources":["webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChart.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartDefaultTheme.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYCursor.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Axis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisBullet.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabel.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisLabelRadial.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRenderer.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererX.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisRendererY.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/AxisTick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/GaplessDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/Grid.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/ValueAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/BaseColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/Candlestick.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/CandlestickSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/ColumnSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/LineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/XYSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/XYChartScrollbar.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/CategoryDateAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/axes/DurationAxis.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLC.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/OHLCSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedYLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXLineSeries.ts","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/step.js","webpack://@amcharts/amcharts5/./src/.internal/charts/xy/series/StepLineSeries.ts","webpack://@amcharts/amcharts5/./tmp/webpack/xy.js","webpack://@amcharts/amcharts5/./node_modules/d3-shape/src/curve/cardinal.js"],"sourcesContent":["import type { Axis } from \"./axes/Axis\";\nimport type { XYCursor } from \"./XYCursor\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"./series/XYSeries\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";;\nimport type { Scrollbar } from \"../../core/render/Scrollbar\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\nimport { XYChartDefaultTheme } from \"./XYChartDefaultTheme\";\nimport { Container } from \"../../core/render/Container\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { ListAutoDispose } from \"../../core/util/List\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Color } from \"../../core/util/Color\";\nimport { Button } from \"../../core/render/Button\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $order from \"../../core/util/Order\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { CategoryAxis } from \"./axes/CategoryAxis\";\nimport type { DateAxis } from \"./axes/DateAxis\";\n\nexport interface IXYChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * horizontal scrollbar.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/} for more info\n\t */\n\tscrollbarX?: Scrollbar;\n\n\t/**\n\t * Vertical scrollbar.\n\t *\n\t */\n\tscrollbarY?: Scrollbar;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart horizontally\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If this is set to `true`, users will be able to pan the chart vertically\n\t * by dragging plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Panning} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned horizontally while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelX?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates what happens when mouse wheel is spinned vertically while over\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t */\n\twheelY?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"panX\" | \"panY\" | \"panXY\" | \"none\";\n\n\t/**\n\t * Indicates the relative \"speed\" of the mouse wheel.\n\t *\n\t * @default 0.25\n\t */\n\twheelStep?: number;\n\n\t/**\n\t * Chart's cursor.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n\t */\n\tcursor?: XYCursor;\n\n\t/**\n\t * If not set (default), cursor will show tooltips for all data items in the\n\t * same category/date.\n\t *\n\t * If set, cursor will select closest data item to pointer (mouse or touch) and\n\t * show tooltip for it.\n\t *\n\t * It will also show tooltips for all data items that are within X pixels\n\t * range (as set in `maxTooltipDistance`).\n\t *\n\t * Tooltips for data items farther then X pixels, will not be shown.\n\t *\n\t * NOTE: set it to `-1` to ensure only one tooltip is displayed, even if there\n\t * are multiple data items in the same place.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t */\n\tmaxTooltipDistance?: number;\n\n\t/**\n\t * Indicates how the distance should be measured when assessing distance\n\t * between tooltips as set in `maxTooltipDistance`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#tooltips} for more info\n\t * @since 5.2.6\n\t */\n\tmaxTooltipDistanceBy?: \"xy\" | \"x\" | \"y\";\n\n\t/**\n\t * If set to `false` the chart will not check for overlapping of multiple\n\t * tooltips, and will not arrange them to not overlap.\n\t *\n\t * Will work only if chart has an `XYCursor` enabled.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#ooltips} for more info\n\t * @default true\n\t */\n\tarrangeTooltips?: boolean\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart horizontally.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomX?: boolean;\n\n\t/**\n\t * If set to `true`, using pinch gesture on the chart's plot area will zoom\n\t * chart vertically.\n\t *\n\t * NOTE: this setting is not supported in a [[RadarChart]].\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pinch_zoom} for more info\n\t * @since 5.1.8\n\t * @default false\n\t */\n\tpinchZoomY?: boolean;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * horizontal zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionX?: number;\n\n\t/**\n\t * If set, will use this relative position as a \"center\" for mouse wheel\n\t * vertical zooming instead of actual cursor position.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Mouse_wheel_behavior} for more info\n\t * @since 5.2.11\n\t */\n\twheelZoomPositionY?: number;\n\n}\n\nexport interface IXYChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * A list of [[Series]] that currently have their tooltip being displayed.\n\t */\n\ttooltipSeries?: Array<XYSeries>\n\n\t/**\n\t * Array of other [[XYChart]] objects that cursors should be synced with.\n\t *\n\t * Note: cursors will be synced across the vertically stacked charts only.\n\t */\n\totherCharts?: Array<XYChart>\n\n}\n\n\nexport interface IXYChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when panning starts.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanstarted: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when panning ends.\n\t *\n\t * @since 5.0.4\n\t */\n\tpanended: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a chart and released without moving.\n\t *\n\t * `panended` event will still kick in after that.\n\t *\n\t * @since 5.2.19\n\t */\n\tpancancelled: {\n\t\toriginalEvent: IPointerEvent\n\t};\n\n\t/**\n\t * Invoked when wheel caused zoom ends.\n\t *\n\t * @since 5.0.4\n\t */\n\twheelended: {};\n\n}\n\n/**\n * Creates an XY chart.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/} for more info\n * @important\n */\nexport class XYChart extends SerialChart {\n\n\tpublic static className: string = \"XYChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([XYChart.className]);\n\n\tdeclare public _settings: IXYChartSettings;\n\tdeclare public _privateSettings: IXYChartPrivate;\n\tdeclare public _seriesType: XYSeries;\n\tdeclare public _events: IXYChartEvents;\n\n\t/**\n\t * A list of horizontal axes.\n\t */\n\tpublic readonly xAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A list of vertical axes.\n\t */\n\tpublic readonly yAxes: ListAutoDispose<Axis<AxisRenderer>> = new ListAutoDispose();\n\n\t/**\n\t * A [[Container]] located on top of the chart, used to store top horizontal\n\t * axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle the chart, used to store vertical axes\n\t * and plot area container.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly yAxesAndPlotContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located on bottom of the chart, used to store bottom\n\t * horizontal axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly bottomAxesContainer: Container = this.chartContainer.children.push(Container.new(this._root, { width: p100, layout: this._root.verticalLayout }));\n\n\t/**\n\t * A [[Container]] located on left of the chart, used to store left-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly leftAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store plotContainer and topPlotContainer\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotsContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { width: p100, height: p100, maskContent: false }));\n\n\t/**\n\t * A [[Container]] located in the middle of the chart, used to store actual\n\t * plots (series).\n\t *\n\t * NOTE: `plotContainer` will automatically have its `background` preset. If\n\t * you need to modify background or outline for chart's plot area, you can\n\t * use `plotContainer.get(\"background\")` for that.*\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly plotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] used for any elements that need to be displayed over\n\t * regular `plotContainer`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topPlotContainer: Container = this.plotsContainer.children.push(Container.new(this._root, { width: p100, height: p100 }));\n\n\t/**\n\t * A [[Container]] axis grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = this.plotContainer.children.push(Container.new(this._root, { width: p100, height: p100, isMeasured: false }));\n\n\t/**\n\t * A [[Container]] axis background grid elements are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100, isMeasured: false });\n\n\t/**\n\t * A [[Container]] located on right of the chart, used to store right-hand\n\t * vertical axes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/xy-chart-containers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly rightAxesContainer: Container = this.yAxesAndPlotContainer.children.push(Container.new(this._root, { height: p100, layout: this._root.horizontalLayout }));\n\n\t/**\n\t * A [[Container]] axis headers are stored in.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default Container.new()\n\t */\n\tpublic readonly axisHeadersContainer: Container = this.plotContainer.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A button that is shown when chart is not fully zoomed out.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Zoom_out_button} for more info\n\t * @default Button.new()\n\t */\n\tpublic readonly zoomOutButton: Button = this.topPlotContainer.children.push(Button.new(this._root, {\n\t\tthemeTags: [\"zoom\"],\n\t\ticon: Graphics.new(this._root, {\n\t\t\tthemeTags: [\"button\", \"icon\"]\n\t\t})\n\t}));\n\n\tpublic _movePoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tpublic _otherCharts?: Array<XYChart>;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\n\tprotected _downStartX?: number;\n\tprotected _downEndX?: number;\n\n\tprotected _downStartY?: number;\n\tprotected _downEndY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(XYChartDefaultTheme.new(this._root));\n\n\t\tsuper._afterNew();\n\n\t\tthis._disposers.push(this.xAxes);\n\t\tthis._disposers.push(this.yAxes);\n\n\t\tconst root = this._root;\n\n\t\tlet verticalLayout = this._root.verticalLayout;\n\n\t\tconst zoomOutButton = this.zoomOutButton;\n\t\tzoomOutButton.events.on(\"click\", () => {\n\t\t\tthis.zoomOut();\n\t\t})\n\t\tzoomOutButton.hide(0);\n\t\tzoomOutButton.states.lookup(\"default\")!.set(\"opacity\", 1);\n\n\t\tthis.chartContainer.set(\"layout\", verticalLayout);\n\n\t\tconst plotContainer = this.plotContainer;\n\t\tplotContainer.children.push(this.seriesContainer);\n\n\t\tthis._disposers.push(this._processAxis(this.xAxes, this.bottomAxesContainer));\n\t\tthis._disposers.push(this._processAxis(this.yAxes, this.leftAxesContainer));\n\n\n\t\tplotContainer.children.push(this.topGridContainer);\n\t\tplotContainer.children.push(this.bulletsContainer);\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tplotContainer.set(\"interactive\", true);\n\t\tplotContainer.set(\"interactiveChildren\", false);\n\t\tplotContainer.set(\"background\", Rectangle.new(root, {\n\t\t\tthemeTags: [\"xy\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handlePlotDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handlePlotUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handlePlotMove(event);\n\t\t}));\n\n\t\tthis._maskGrid();\n\t\tthis._setUpTouch();\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"pinchZoomX\") || this.isDirty(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.plotContainer._display.cancelTouch) {\n\t\t\tthis.plotContainer._display.cancelTouch = (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\tprotected _maskGrid() {\n\t\tthis.gridContainer.set(\"maskContent\", true);\n\t\tthis.topGridContainer.set(\"maskContent\", true);\n\t}\n\n\tprotected _removeSeries(series: this[\"_seriesType\"]) {\n\t\tseries._unstack();\n\n\t\tif (series._posXDp) {\n\t\t\tseries._posXDp.dispose();\n\t\t}\n\n\t\tif (series._posYDp) {\n\t\t\tseries._posYDp.dispose();\n\t\t}\n\n\t\tseries.set(\"baseAxis\", undefined);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tif (xAxis) {\n\t\t\t$array.remove(xAxis.series, series);\n\t\t\txAxis.markDirtyExtremes();\n\t\t}\n\t\tconst yAxis = series.get(\"yAxis\");\n\t\tif (yAxis) {\n\t\t\t$array.remove(yAxis.series, series);\n\t\t\tyAxis.markDirtyExtremes();\n\t\t}\n\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst snapToSeries = cursor.get(\"snapToSeries\");\n\t\t\tif (snapToSeries) {\n\t\t\t\t$array.remove(snapToSeries, series);\n\t\t\t}\n\t\t}\n\n\t\tsuper._removeSeries(series);\n\t}\n\n\t/**\n\t * This method is invoked when mouse wheel is used over chart's plot\n\t * container, and handles zooming/pan.\n\t *\n\t * You can invoke this method manually, if you need to mimic chart's wheel\n\t * behavior over other elements of the chart.\n\t */\n\tpublic handleWheel(event: { originalEvent: WheelEvent, point: IPoint, target: Container }) {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst wheelEvent = event.originalEvent;\n\n\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t// some page element is over the chart.\n\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\twheelEvent.preventDefault();\n\t\t}\n\t\telse {\n\t\t\treturn;\n\t\t}\n\n\t\tconst plotPoint = plotContainer.toLocal(event.point);\n\t\tconst wheelStep = this.get(\"wheelStep\", 0.2);\n\n\t\tconst shiftY = wheelEvent.deltaY / 100;\n\t\tconst shiftX = wheelEvent.deltaX / 100;\n\n\t\tconst wheelZoomPositionX = this.get(\"wheelZoomPositionX\");\n\t\tconst wheelZoomPositionY = this.get(\"wheelZoomPositionY\");\n\n\t\tif ((wheelX === \"zoomX\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomX\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.x / plotContainer.width());\n\n\t\t\t\t\tif (wheelZoomPositionX != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionX;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"zoomY\" || wheelX === \"zoomXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftX * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftX * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"zoomY\" || wheelY === \"zoomXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"zoomY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet position = axis.fixPosition(plotPoint.y / plotContainer.height());\n\n\t\t\t\t\tif (wheelZoomPositionY != null) {\n\t\t\t\t\t\tposition = wheelZoomPositionY;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newStart = start - wheelStep * (end - start) * shiftY * position;\n\t\t\t\t\tlet newEnd = end + wheelStep * (end - start) * shiftY * (1 - position);\n\n\t\t\t\t\tif (1 / (newEnd - newStart) < axis.getPrivate(\"maxZoomFactor\", Infinity) / axis.get(\"minZoomCount\", 1)) {\n\t\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\n\t\tif ((wheelX === \"panX\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panX\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelX === \"panY\" || wheelX === \"panXY\") && shiftX != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftX;\n\t\t\t\t\tlet newStart = start + delta;\n\t\t\t\t\tlet newEnd = end + delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tif ((wheelY === \"panY\" || wheelY === \"panXY\") && shiftY != 0) {\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\tlet start = axis.get(\"start\")!;\n\t\t\t\t\tlet end = axis.get(\"end\")!;\n\n\t\t\t\t\tlet delta = this._getWheelSign(axis) * wheelStep * (end - start) * shiftY;\n\t\t\t\t\tlet newStart = start - delta;\n\t\t\t\t\tlet newEnd = end - delta;\n\n\t\t\t\t\tlet se = this._fixWheel(newStart, newEnd);\n\t\t\t\t\tnewStart = se[0];\n\t\t\t\t\tnewEnd = se[1];\n\n\t\t\t\t\tthis._handleWheelAnimation(axis.zoom(newStart, newEnd));\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _handleSetWheel() {\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (wheelX !== \"none\" || wheelY !== \"none\") {\n\t\t\tthis._wheelDp = plotContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\t\t\t\tif ((wheelX !== \"none\" && Math.abs(wheelEvent.deltaX) != 0) || (wheelY !== \"none\" && Math.abs(wheelEvent.deltaY) != 0)) {\n\t\t\t\t\tthis.handleWheel(event);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getWheelSign(axis: Axis<AxisRenderer>) {\n\t\tlet sign = 1;\n\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\tsign = -1;\n\t\t}\n\n\t\treturn sign\n\t}\n\n\tprotected _fixWheel(start: number, end: number): [number, number] {\n\t\tconst diff = end - start;\n\t\tif (start < 0) {\n\t\t\tstart = 0;\n\t\t\tend = start + diff;\n\t\t}\n\t\tif (end > 1) {\n\t\t\tend = 1;\n\t\t\tstart = end - diff;\n\t\t}\n\n\t\treturn [start, end];\n\t}\n\n\tprotected _handlePlotDown(event: ISpritePointerEvent) {\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tif (originalEvent.button == 2) {\n\t\t\treturn;\n\t\t}\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst pointerId = originalEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 0) {\n\t\t\t\t\tconst xAxis = this.xAxes.getIndex(0);\n\t\t\t\t\tconst yAxis = this.yAxes.getIndex(0);\n\n\n\t\t\t\t\tif (xAxis) {\n\t\t\t\t\t\tthis._downStartX = xAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndX = xAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yAxis) {\n\t\t\t\t\t\tthis._downStartY = yAxis.get(\"start\", 0);\n\t\t\t\t\t\tthis._downEndY = yAxis.get(\"end\", 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\tif (local.x >= 0 && local.y >= 0 && local.x <= plotContainer.width() && local.y <= this.height()) {\n\t\t\t\t//this._downPoint = local;\n\t\t\t\tthis._downPoint = { x: originalEvent.clientX, y: originalEvent.clientY };\n\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\t\tif (panX) {\n\t\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (panY) {\n\t\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\t\taxis._panStart = axis.get(\"start\")!;\n\t\t\t\t\t\taxis._panEnd = axis.get(\"end\")!;\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panstarted\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelAnimation(animation?: Animation<any>) {\n\t\tif (animation) {\n\t\t\tanimation.events.on(\"stopped\", () => {\n\t\t\t\tthis._dispatchWheelAnimation();\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis._dispatchWheelAnimation();\n\t\t}\n\t}\n\n\tprotected _dispatchWheelAnimation() {\n\t\tconst eventType = \"wheelended\";\n\t\tif (this.events.isEnabled(eventType)) {\n\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this });\n\t\t}\n\t}\n\n\tprotected _handlePlotUp(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._downPoint;\n\t\tif (downPoint) {\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\t\tlet local = this.plotContainer.toLocal(event.point);\n\t\t\t\tif (local.x == downPoint.x && local.y == downPoint.y) {\n\t\t\t\t\tconst eventType = \"pancancelled\";\n\t\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst eventType = \"panended\";\n\t\t\t\tif (this.events.isEnabled(eventType)) {\n\t\t\t\t\tthis.events.dispatch(eventType, { type: eventType, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// TODO: handle multitouch\n\t\tthis._downPoint = undefined;\n\t\tthis.xAxes.each((xAxis) => {\n\t\t\txAxis._isPanning = false;\n\t\t})\n\t\tthis.yAxes.each((yAxis) => {\n\t\t\tyAxis._isPanning = false;\n\t\t})\n\t}\n\n\tprotected _handlePlotMove(event: ISpritePointerEvent) {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tif (this.get(\"pinchZoomX\") || this.get(\"pinchZoomY\")) {\n\t\t\tconst touchEvent = event.originalEvent as any;\n\t\t\tconst pointerId = touchEvent.pointerId;\n\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet downPoint = this._downPoint!;\n\n\t\tif (downPoint) {\n\n\t\t\tdownPoint = plotContainer.toLocal(this._root.documentPointToRoot(downPoint));\n\t\t\tlet local = plotContainer.toLocal(event.point);\n\n\t\t\tconst panX = this.get(\"panX\");\n\t\t\tconst panY = this.get(\"panY\");\n\n\t\t\tif (panX) {\n\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panX\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaX = difference * (downPoint.x - local.x) / plotContainer.width();\n\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaX *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart + deltaX;\n\t\t\t\t\t\tlet end = panEnd + deltaX;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tscrollbarX.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (panY) {\n\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.disableType(\"rangechanged\");\n\t\t\t\t}\n\n\t\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\t\tif (axis.get(\"panY\")) {\n\t\t\t\t\t\taxis._isPanning = true;\n\t\t\t\t\t\t//const maxDeviation = axis.get(\"maxDeviation\", 0);\n\n\t\t\t\t\t\tlet panStart = axis._panStart;\n\t\t\t\t\t\tlet panEnd = axis._panEnd;\n\t\t\t\t\t\tlet difference = (panEnd - panStart);\n\t\t\t\t\t\tlet deltaY = difference * (downPoint.y - local.y) / plotContainer.height();\n\t\t\t\t\t\tif (axis.get(\"renderer\").get(\"inversed\")) {\n\t\t\t\t\t\t\tdeltaY *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet start = panStart - deltaY;\n\t\t\t\t\t\tlet end = panEnd - deltaY;\n\n\t\t\t\t\t\tif (end - start < 1 + axis.get(\"maxDeviation\", 1) * 2) {\n\t\t\t\t\t\t\taxis.set(\"start\", start);\n\t\t\t\t\t\t\taxis.set(\"end\", end);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tscrollbarY.events.enableType(\"rangechanged\");\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst plotContainer = this.plotContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(plotContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst w = plotContainer.width();\n\t\t\tconst h = plotContainer.height();\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tmovePoint0 = plotContainer.toLocal(movePoint0)\n\t\t\t\tmovePoint1 = plotContainer.toLocal(movePoint1)\n\n\t\t\t\tdownPoint0 = plotContainer.toLocal(downPoint0)\n\t\t\t\tdownPoint1 = plotContainer.toLocal(downPoint1)\n\n\t\t\t\tif (this.get(\"pinchZoomX\")) {\n\t\t\t\t\tconst downStartX = this._downStartX;\n\t\t\t\t\tconst downEndX = this._downEndX;\n\n\t\t\t\t\tif (downStartX != null && downEndX != null) {\n\n\t\t\t\t\t\tif (downPoint0.x > downPoint1.x) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartX + (downPoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet downPos1 = downStartX + (downPoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet movePos0 = downStartX + (movePoint0.x / w) * (downEndX - downStartX);\n\t\t\t\t\t\tlet movePos1 = downStartX + (movePoint1.x / w) * (downEndX - downStartX);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartX * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndX * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.xAxes.each((xAxis) => {\n\t\t\t\t\t\t\tlet sa = xAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = xAxis.fixPosition(e);\n\n\t\t\t\t\t\t\txAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.get(\"pinchZoomY\")) {\n\t\t\t\t\tconst downStartY = this._downStartY;\n\t\t\t\t\tconst downEndY = this._downEndY;\n\n\t\t\t\t\tif (downStartY != null && downEndY != null) {\n\n\t\t\t\t\t\tif (downPoint0.y < downPoint1.y) {\n\t\t\t\t\t\t\t[downPoint0, downPoint1] = [downPoint1, downPoint0];\n\t\t\t\t\t\t\t[movePoint0, movePoint1] = [movePoint1, movePoint0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet downPos0 = downStartY + (1 - downPoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet downPos1 = downStartY + (1 - downPoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet movePos0 = downStartY + (1 - movePoint0.y / h) * (downEndY - downStartY);\n\t\t\t\t\t\tlet movePos1 = downStartY + (1 - movePoint1.y / h) * (downEndY - downStartY);\n\n\t\t\t\t\t\tlet initialDistance = Math.max(0.001, downPos1 - downPos0);\n\t\t\t\t\t\tlet currentDistance = Math.max(0.001, movePos1 - movePos0);\n\n\t\t\t\t\t\tlet d = initialDistance / currentDistance;\n\n\t\t\t\t\t\tlet s = downStartY * d + downPos0 - movePos0 * d;\n\t\t\t\t\t\tlet e = downEndY * d + downPos1 - movePos1 * d;\n\n\t\t\t\t\t\tthis.yAxes.each((yAxis) => {\n\n\t\t\t\t\t\t\tlet sa = yAxis.fixPosition(s);\n\t\t\t\t\t\t\tlet ea = yAxis.fixPosition(e);\n\n\t\t\t\t\t\t\tyAxis.zoom(sa, ea, 0);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _handleCursorPosition() {\n\t\tconst cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tconst cursorPoint = cursor.getPrivate(\"point\");\n\n\t\t\tlet snapToSeries = cursor.get(\"snapToSeries\");\n\n\t\t\tif (cursor._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tif (snapToSeries && cursorPoint) {\n\t\t\t\tconst snapToSeriesBy = cursor.get(\"snapToSeriesBy\");\n\t\t\t\tconst dataItems: Array<DataItem<IXYSeriesDataItem>> = [];\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tif (!series.isHidden() && !series.isHiding()) {\n\t\t\t\t\t\tif (snapToSeriesBy != \"x!\" && snapToSeriesBy != \"y!\") {\n\t\t\t\t\t\t\tconst startIndex = series.startIndex();\n\t\t\t\t\t\t\tconst endIndex = series.endIndex();\n\t\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\tif (dataItem && !dataItem.isHidden()) {\n\t\t\t\t\t\t\t\t\tdataItems.push(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst tooltipDataItem = series.get(\"tooltipDataItem\");\n\t\t\t\t\t\t\tif (tooltipDataItem) {\n\t\t\t\t\t\t\t\tdataItems.push(tooltipDataItem);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet minDistance = Infinity;\n\t\t\t\tlet closestItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tconst point = dataItem.get(\"point\");\n\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\tlet distance = 0;\n\t\t\t\t\t\tif (snapToSeriesBy == \"x\" || snapToSeriesBy == \"x!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.x - point.x);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (snapToSeriesBy == \"y\" || snapToSeriesBy == \"y!\") {\n\t\t\t\t\t\t\tdistance = Math.abs(cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdistance = Math.hypot(cursorPoint.x - point.x, cursorPoint.y - point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\tclosestItem = dataItem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(snapToSeries, (series) => {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tif (closestItem) {\n\t\t\t\t\tlet series = closestItem.component as XYSeries;\n\t\t\t\t\tseries.showDataItemTooltip(closestItem);\n\t\t\t\t\tconst point = closestItem.get(\"point\");\n\t\t\t\t\tif (point) {\n\t\t\t\t\t\t// removing x and y to solve #72225\n\t\t\t\t\t\tcursor.handleMove(series.toGlobal({ x: point.x - series.x(), y: point.y - series.y() }), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateCursor() {\n\t\tlet cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tcursor.updateCursor();\n\t\t}\n\t}\n\n\tprotected _addCursor(cursor: XYCursor) {\n\t\tthis.plotContainer.children.push(cursor);\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis.series.each((series) => {\n\t\t\tthis._colorize(series);\n\t\t})\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\n\t\tif (this.isDirty(\"cursor\")) {\n\t\t\tconst previous = this._prevSettings.cursor;\n\t\t\tconst cursor = this.get(\"cursor\")!;\n\t\t\tif (cursor !== previous) {\n\t\t\t\tthis._disposeProperty(\"cursor\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (cursor) {\n\t\t\t\t\tcursor._setChart(this);\n\t\t\t\t\tthis._addCursor(cursor);\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"cursor\", cursor.events.on(\"selectended\", () => {\n\t\t\t\t\t\tthis._handleCursorSelectEnd();\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t\t//this.setRaw(\"cursor\", cursor) // to reset previous value\n\t\t\t\tthis._prevSettings.cursor = cursor;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarX\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarX;\n\t\t\tconst scrollbarX = this.get(\"scrollbarX\")!;\n\t\t\tif (scrollbarX !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarX\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarX) {\n\t\t\t\t\tif (!scrollbarX.parent) {\n\t\t\t\t\t\tthis.topAxesContainer.children.push(scrollbarX);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarX\", scrollbarX.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.xAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarX.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.xAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\n\t\t\t\tthis._prevSettings.scrollbarX = scrollbarX;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"scrollbarY\")) {\n\t\t\tconst previous = this._prevSettings.scrollbarY;\n\t\t\tconst scrollbarY = this.get(\"scrollbarY\")!;\n\t\t\tif (scrollbarY !== previous) {\n\t\t\t\tthis._disposeProperty(\"scrollbarY\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (scrollbarY) {\n\t\t\t\t\tif (!scrollbarY.parent) {\n\t\t\t\t\t\tthis.rightAxesContainer.children.push(scrollbarY);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._pushPropertyDisposer(\"scrollbarY\", scrollbarY.events.on(\"rangechanged\", (e) => {\n\t\t\t\t\t\tthis._handleScrollbar(this.yAxes, e.start, e.end, e.grip);\n\t\t\t\t\t}))\n\n\t\t\t\t\t// Used to populate `ariaLabel` with meaningful values\n\t\t\t\t\tscrollbarY.setPrivate(\"positionTextFunction\", (position: number) => {\n\t\t\t\t\t\tconst axis = this.yAxes.getIndex(0);\n\t\t\t\t\t\treturn axis ? axis.getTooltipText(position, false) || \"\" : \"\";\n\t\t\t\t\t});\n\n\t\t\t\t}\n\t\t\t\tthis._prevSettings.scrollbarY = scrollbarY;\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _processSeries(series: this[\"_seriesType\"]) {\n\t\tsuper._processSeries(series);\n\n\t\tconst xAxis = series.get(\"xAxis\");\n\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t$array.move(xAxis.series, series);\n\t\t$array.move(yAxis.series, series);\n\n\t\tseries._posXDp = series.addDisposer(xAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tseries._posXDp = series.addDisposer(yAxis.events.on(\"positionchanged\", () => {\n\t\t\tseries._fixPosition();\n\t\t}))\n\n\t\tif (!series.get(\"baseAxis\")) {\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") || yAxis.isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\t\tseries.set(\"baseAxis\", yAxis);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tseries.set(\"baseAxis\", xAxis);\n\t\t\t}\n\t\t}\n\n\t\tif (series.get(\"stacked\")) {\n\t\t\tseries._markDirtyKey(\"stacked\");\n\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\tdataItem.set(\"stackToItemY\", undefined);\n\t\t\t\tdataItem.set(\"stackToItemX\", undefined);\n\t\t\t})\n\t\t}\n\t\tseries._markDirtyAxes();\n\t\tyAxis.markDirtyExtremes();\n\t\txAxis.markDirtyExtremes();\n\n\t\tthis._colorize(series);\n\t}\n\n\tprotected _colorize(series: this[\"_seriesType\"]) {\n\t\tconst colorSet = this.get(\"colors\")!;\n\t\tif (colorSet) {\n\t\t\tif (series.get(\"fill\") == null) {\n\t\t\t\tconst color = colorSet.next();\n\n\t\t\t\tseries._setSoft(\"stroke\", color);\n\t\t\t\tseries._setSoft(\"fill\", color);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleCursorSelectEnd() {\n\t\tconst cursor = this.get(\"cursor\")!;\n\t\tconst behavior = cursor.get(\"behavior\");\n\n\t\tconst downPositionX = cursor.getPrivate(\"downPositionX\", 0);\n\t\tconst downPositionY = cursor.getPrivate(\"downPositionY\", 0);\n\n\t\tconst positionX = Math.min(1, Math.max(0, cursor.getPrivate(\"positionX\", 0.5)));\n\t\tconst positionY = Math.min(1, Math.max(0, cursor.getPrivate(\"positionY\", 0.5)));\n\n\t\tthis.xAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionX);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionX);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\") {\n\t\t\t\tlet position0 = axis.toAxisPosition(downPositionY);\n\t\t\t\tlet position1 = axis.toAxisPosition(positionY);\n\t\t\t\taxis.zoom(position0, position1);\n\t\t\t}\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t})\n\t}\n\n\tprotected _handleScrollbar(axes: ListAutoDispose<Axis<any>>, start: number, end: number, priority?: \"start\" | \"end\") {\n\n\t\taxes.each((axis) => {\n\n\t\t\tlet axisStart = axis.fixPosition(start);\n\t\t\tlet axisEnd = axis.fixPosition(end);\n\n\t\t\tlet zoomAnimation = axis.zoom(axisStart, axisEnd, undefined, priority);\n\n\t\t\tconst updateScrollbar = \"updateScrollbar\";\n\t\t\taxis.setPrivateRaw(updateScrollbar, false);\n\n\t\t\tif (zoomAnimation) {\n\t\t\t\tzoomAnimation.events.on(\"stopped\", () => {\n\t\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.setPrivateRaw(updateScrollbar, true);\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _processAxis<R extends AxisRenderer>(axes: ListAutoDispose<Axis<R>>, container: Container): IDisposer {\n\t\treturn axes.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axis) => {\n\t\t\t\t\tthis._removeAxis(axis);\n\t\t\t\t})\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tcontainer.children.push(change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tcontainer.children.setIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tcontainer.children.insertIndex(change.index, change.newValue);\n\t\t\t\tchange.newValue.processChart(this);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxis(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tcontainer.children.moveValue(change.value, change.newIndex);\n\t\t\t\tchange.value.processChart(this);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IListEvent type\");\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _removeAxis(axis: Axis<AxisRenderer>) {\n\t\tif (!axis.isDisposed()) {\n\t\t\tconst axisParent = axis.parent\n\t\t\tif (axisParent) {\n\t\t\t\taxisParent.children.removeValue(axis);\n\t\t\t}\n\n\t\t\tconst gridContainer = axis.gridContainer;\n\t\t\tconst gridParent = gridContainer.parent;\n\t\t\tif (gridParent) {\n\t\t\t\tgridParent.children.removeValue(gridContainer);\n\t\t\t}\n\n\t\t\tconst topGridContainer = axis.topGridContainer;\n\t\t\tconst topGridParent = topGridContainer.parent;\n\t\t\tif (topGridParent) {\n\t\t\t\ttopGridParent.children.removeValue(topGridContainer);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChartLayout() {\n\t\tconst left = this.leftAxesContainer.width();\n\t\tconst right = this.rightAxesContainer.width();\n\n\t\tconst bottomAxesContainer = this.bottomAxesContainer;\n\t\tbottomAxesContainer.set(\"paddingLeft\", left);\n\t\tbottomAxesContainer.set(\"paddingRight\", right);\n\n\t\tconst topAxesContainer = this.topAxesContainer;\n\t\ttopAxesContainer.set(\"paddingLeft\", left);\n\t\ttopAxesContainer.set(\"paddingRight\", right);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis(axis: Axis<AxisRenderer>) {\n\t\tvar cursor = this.get(\"cursor\");\n\t\tif (cursor) {\n\t\t\tthis.addDisposer(axis.on(\"start\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\n\t\t\tthis.addDisposer(axis.on(\"end\", () => {\n\t\t\t\tthis._updateCursor();\n\t\t\t}))\n\t\t}\n\t}\n\n\n\tpublic _handleAxisSelection(axis: Axis<any>, force?: boolean) {\n\n\t\tlet start = axis.fixPosition(axis.get(\"start\", 0));\n\t\tlet end = axis.fixPosition(axis.get(\"end\", 1));\n\n\t\tif (start > end) {\n\t\t\t[start, end] = [end, start];\n\t\t}\n\n\t\tif (this.xAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarX = this.get(\"scrollbarX\");\n\n\t\t\t\tif (scrollbarX && (!scrollbarX.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarX.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarX.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarX.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.yAxes.indexOf(axis) != -1) {\n\t\t\tif (force || axis.getPrivate(\"updateScrollbar\")) {\n\t\t\t\tlet scrollbarY = this.get(\"scrollbarY\");\n\n\t\t\t\tif (scrollbarY && (!scrollbarY.getPrivate(\"isBusy\") || force)) {\n\t\t\t\t\tscrollbarY.setRaw(\"start\", start);\n\t\t\t\t\tscrollbarY.setRaw(\"end\", end);\n\t\t\t\t\tscrollbarY.updateGrips();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._handleZoomOut();\n\t}\n\n\tprotected _handleZoomOut() {\n\t\tlet zoomOutButton = this.zoomOutButton;\n\t\tif (zoomOutButton && zoomOutButton.parent) {\n\t\t\tlet visible = false;\n\t\t\tthis.xAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.yAxes.each((axis) => {\n\t\t\t\tif (axis.get(\"start\") != 0 || axis.get(\"end\") != 1) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (visible) {\n\t\t\t\tif (zoomOutButton.isHidden()) {\n\t\t\t\t\tzoomOutButton.show();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tzoomOutButton.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if point is within plot area.\n\t *\n\t * @param   point  Reference point\n\t * @return         Is within plot area?\n\t */\n\tpublic inPlot(point: IPoint): boolean {\n\t\tconst plotContainer = this.plotContainer;\n\t\tconst otherCharts = this.getPrivate(\"otherCharts\", this._otherCharts);\n\t\tconst global = plotContainer.toGlobal(point);\n\n\t\tif (point.x >= -0.5 && point.y >= -0.5 && point.x <= plotContainer.width() + 0.5 && point.y <= plotContainer.height() + 0.5) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherCharts) {\n\n\t\t\tfor (let i = otherCharts.length - 1; i >= 0; i--) {\n\t\t\t\tconst chart = otherCharts[i];\n\n\t\t\t\tif (chart != this) {\n\t\t\t\t\tconst chartPlotContainer = chart.plotContainer;\n\t\t\t\t\tconst documentPoint = this._root.rootPointToDocument(global);\n\t\t\t\t\tconst chartRoot = chart._root.documentPointToRoot(documentPoint);\n\t\t\t\t\tconst local = chartPlotContainer.toLocal(chartRoot);\n\t\t\t\t\tif (local.x >= -0.1 && local.y >= -0.1 && local.x <= chartPlotContainer.width() + 0.1 && local.y <= chartPlotContainer.height() + 0.1) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic arrangeTooltips() {\n\t\tconst plotContainer = this.plotContainer;\n\n\t\tconst w = plotContainer.width();\n\t\tconst h = plotContainer.height();\n\n\t\tconst hh = this.height();\n\n\t\tlet plotT = plotContainer._display.toGlobal({ x: 0, y: 0 });\n\t\tlet plotB = plotContainer._display.toGlobal({ x: w, y: h });\n\n\t\tconst tooltips: Array<Tooltip> = [];\n\t\tlet sum = 0;\n\n\t\tlet minDistance = Infinity;\n\t\tlet movePoint = this._movePoint;\n\t\tlet maxTooltipDistance = this.get(\"maxTooltipDistance\");\n\t\tlet maxTooltipDistanceBy = this.get(\"maxTooltipDistanceBy\", \"xy\");\n\t\tlet closest: XYSeries;\n\t\tlet closestPoint: IPoint;\n\n\t\tif ($type.isNumber(maxTooltipDistance)) {\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (!series.isHidden()) {\n\t\t\t\t\tconst tooltip = series.get(\"tooltip\");\n\t\t\t\t\tif (tooltip) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point) {\n\t\t\t\t\t\t\tlet distance = Math.hypot(movePoint.x - point.x, movePoint.y - point.y);\n\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.x - point.x);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\tdistance = Math.abs(movePoint.y - point.y);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (distance < minDistance) {\n\t\t\t\t\t\t\t\tminDistance = distance;\n\t\t\t\t\t\t\t\tclosest = series;\n\t\t\t\t\t\t\t\tclosestPoint = point;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tconst tooltipSeries: Array<XYSeries> = [];\n\n\t\tthis.series.each((series) => {\n\t\t\tconst tooltip = series.get(\"tooltip\")!;\n\n\t\t\tif (tooltip && !tooltip.get(\"forceHidden\")) {\n\t\t\t\tlet hidden = false;\n\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\tif (point) {\n\t\t\t\t\tif (maxTooltipDistance >= 0) {\n\t\t\t\t\t\tlet point = tooltip.get(\"pointTo\")!;\n\t\t\t\t\t\tif (point && closestPoint) {\n\t\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\t\tlet distance = Math.hypot(closestPoint.x - point.x, closestPoint.y - point.y);\n\t\t\t\t\t\t\t\tif (maxTooltipDistanceBy == \"x\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.x - point.x);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (maxTooltipDistanceBy == \"y\") {\n\t\t\t\t\t\t\t\t\tdistance = Math.abs(closestPoint.y - point.y);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (distance > maxTooltipDistance) {\n\t\t\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (maxTooltipDistance == -1) {\n\t\t\t\t\t\tif (series != closest) {\n\t\t\t\t\t\t\thidden = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!this.inPlot(this._tooltipToLocal(point)) || !tooltip.dataItem) {\n\t\t\t\t\t\thidden = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!hidden) {\n\t\t\t\t\t\t\tsum += point.y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hidden || series.isHidden() || series.isHiding()) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show();\n\t\t\t\t\t\ttooltips.push(tooltip);\n\n\t\t\t\t\t\ttooltipSeries.push(series);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.setPrivate(\"tooltipSeries\", tooltipSeries);\n\n\t\tif (this.get(\"arrangeTooltips\")) {\n\n\t\t\tconst tooltipContainer = this._root.tooltipContainer;\n\n\t\t\tconst count = tooltips.length;\n\t\t\tconst average = sum / count;\n\n\t\t\tif (average > h / 2 + plotT.y) {\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(b.get(\"pointTo\")!.y, a.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = plotB.y;\n\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\ttooltip.setPrivate(\"customData\", { left: plotT.x, top: plotT.y, right: plotB.x, bottom: prevY })\n\t\t\t\t\tprevY = Math.min(prevY - height, tooltip._fy - height);\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tif (prevY < 0) {\n\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = prevY;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - prevY;\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - prevY;\n\t\t\t\t\t\t\tif (top < prevBottom) {\n\t\t\t\t\t\t\t\ttop = prevBottom;\n\t\t\t\t\t\t\t\tbottom = top + tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bounds.bottom - prevY + tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltips.reverse();\n\t\t\t\ttooltips.sort((a, b) => $order.compareNumber(a.get(\"pointTo\")!.y, b.get(\"pointTo\")!.y));\n\n\t\t\t\tlet prevY = 0;\n\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\tlet height = tooltip.height();\n\t\t\t\t\tlet centerY = tooltip.get(\"centerY\");\n\t\t\t\t\tif (centerY instanceof Percent) {\n\t\t\t\t\t\theight *= centerY.value;\n\t\t\t\t\t}\n\t\t\t\t\theight += tooltip.get(\"marginBottom\", 0);\n\n\t\t\t\t\ttooltip.set(\"bounds\", { left: plotT.x, top: prevY, right: plotB.x, bottom: Math.max(plotT.y + hh, prevY + height) })\n\t\t\t\t\tif (tooltip.parent == tooltipContainer) {\n\t\t\t\t\t\ttooltipContainer.children.moveValue(tooltip, 0);\n\t\t\t\t\t}\n\t\t\t\t\tprevY = Math.max(prevY + height, tooltip._fy + height);\n\t\t\t\t})\n\n\t\t\t\tif (prevY > hh) {\n\t\t\t\t\ttooltips.reverse();\n\t\t\t\t\tlet prevBottom = hh;\n\n\t\t\t\t\t$array.each(tooltips, (tooltip) => {\n\t\t\t\t\t\tlet bounds = tooltip.get(\"bounds\");\n\t\t\t\t\t\tif (bounds) {\n\t\t\t\t\t\t\tlet top = bounds.top - (hh - prevY);\n\t\t\t\t\t\t\tlet bottom = bounds.bottom - (hh - prevY);\n\t\t\t\t\t\t\tif (bottom > prevBottom) {\n\t\t\t\t\t\t\t\tbottom = prevBottom\n\t\t\t\t\t\t\t\ttop = bottom - tooltip.height();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttooltip.set(\"bounds\", { left: bounds.left, top: top, right: bounds.right, bottom: bottom })\n\t\t\t\t\t\t\tprevBottom = bottom - tooltip.height() - tooltip.get(\"marginBottom\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _tooltipToLocal(point: IPoint): IPoint {\n\t\treturn this.plotContainer.toLocal(point);\n\t}\n\n\t/**\n\t * Fully zooms out the chart.\n\t */\n\tpublic zoomOut() {\n\t\tthis.xAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\n\t\tthis.yAxes.each((axis) => {\n\t\t\taxis.setPrivate(\"updateScrollbar\", true);\n\t\t\taxis.zoom(0, 1);\n\t\t})\n\t}\n\n}\n","import type { ITimeInterval } from \"../../core/util/Time\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IValueAxisDataItem, ValueAxis } from \"./axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\r\nimport type { DateAxis } from \"./axes/DateAxis\";\r\nimport type { ICategoryAxisDataItem } from \"./axes/CategoryAxis\";\r\nimport type { IGaplessDateAxisDataItem } from \"./axes/GaplessDateAxis\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p50, p100 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $time from \"../../core/util/Time\";\r\nimport * as $type from \"../../core/util/Type\";\r\nimport * as $math from \"../../core/util/Math\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class XYChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst language = this._root.language;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/xy\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tpaddingLeft: 20,\r\n\t\t\tpaddingRight: 20,\r\n\t\t\tpaddingTop: 16,\r\n\t\t\tpaddingBottom: 16,\r\n\t\t\tpanX: false,\r\n\t\t\tpanY: false,\r\n\t\t\twheelStep: 0.25,\r\n\t\t\tarrangeTooltips: true,\r\n\t\t\tpinchZoomX: false,\r\n\t\t\tpinchZoomY: false\r\n\t\t});\r\n\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tlegendLabelText: \"{name}\"\r\n\t\t})\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: XYChartScrollbar\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYChart\", [\"scrollbar\", \"chart\"]).setAll({\r\n\t\t\tpaddingBottom: 0,\r\n\t\t\tpaddingLeft: 0,\r\n\t\t\tpaddingTop: 0,\r\n\t\t\tpaddingRight: 0,\r\n\t\t\tcolors: ColorSet.new(this._root, {\r\n\t\t\t\tsaturation: 0\r\n\t\t\t})\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"scrollbar\", \"overlay\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.5\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"background\");\r\n\t\t}\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).setAll({\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tfocusable: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"thumb\"]).states.create(\"hover\", { fillOpacity: 0.4 });\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"xy\", \"scrollbar\", \"chart\", \"background\", \"resize\", \"button\"]).setAll({\r\n\t\t\tcornerRadiusBL: 40,\r\n\t\t\tcornerRadiusBR: 40,\r\n\t\t\tcornerRadiusTL: 40,\r\n\t\t\tcornerRadiusTR: 40\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererX\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\", [\"xy\", \"chart\", \"scrollbar\"]).setAll({\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tinside: true,\r\n\t\t\tminGridDistance: 5\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5,\r\n\t\t\tcenterY: p100,\r\n\t\t\tminPosition: 0.01,\r\n\t\t\tmaxPosition: 0.99,\r\n\t\t\tfontSize: \"0.8em\"\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"category\"]).setAll({\r\n\t\t\ttext: \"{category}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"x\", \"opposite\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"inside\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\r\n\t\tr(\"AxisLabel\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"y\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t// Class: Grid\r\n\t\tr(\"Grid\", [\"xy\", \"scrollbar\", \"x\"]).setAll({\r\n\t\t\topacity: 0.5\r\n\t\t});\r\n\r\n\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Cursor\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYCursor\").setAll({\r\n\t\t\tbehavior: \"none\",\r\n\t\t\tlayer: 30,\r\n\t\t\texportable: false,\r\n\t\t\tsnapToSeriesBy: \"xy\",\r\n\t\t\tmoveThreshold: 1\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"x\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use left and right arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\", [\"cursor\", \"y\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.8,\r\n\t\t\t\tstrokeDasharray: [2, 2],\r\n\t\t\t\tariaLabel: language.translate(\"Use up and down arrows to move selection\")\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"cursor\", \"selection\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.15,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Axes\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Axis\").setAll({\r\n\t\t\tstart: 0,\r\n\t\t\tend: 1,\r\n\t\t\tminZoomCount: 1,\r\n\t\t\tmaxZoomCount: Infinity,\r\n\t\t\tmaxZoomFactor: 1000,\r\n\t\t\tmaxDeviation: 0.1,\r\n\t\t\tsnapTooltip: true,\r\n\t\t\ttooltipLocation: 0.5,\r\n\t\t\tpanX: true,\r\n\t\t\tpanY: true,\r\n\t\t\tzoomX: true,\r\n\t\t\tzoomY: true,\r\n\t\t\tfixAxisSize: true\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\").setAll({\r\n\t\t\tlocation: 0.5,\r\n\t\t\tmultiLocation: 0,\r\n\t\t\tcenterX: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingTop: 3,\r\n\t\t\tpaddingBottom: 3,\r\n\t\t\tpaddingLeft: 5,\r\n\t\t\tpaddingRight: 5\r\n\t\t});\r\n\r\n\t\t// The following is deprecated following text measuring updates in 5.0.5\r\n\t\t// r(\"AxisLabel\", [\"y\"]).setAll({\r\n\t\t// \ttextAlign: \"right\"\r\n\t\t// });\r\n\r\n\t\t// r(\"AxisLabel\", [\"y\", \"opposite\"]).setAll({\r\n\t\t// \ttextAlign: \"left\"\r\n\t\t// });\r\n\r\n\t\tr(\"Container\", [\"axis\", \"header\"]).setAll({\r\n\t\t\tlayer: 30\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"header\", \"background\"]).setAll({\r\n\t\t\tcrisp: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisRenderer\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"AxisRendererX\").setAll({\r\n\t\t\tminGridDistance: 120,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\twidth: p100\r\n\t\t});\r\n\r\n\t\tr(\"AxisRendererY\").setAll({\r\n\t\t\tminGridDistance: 40,\r\n\t\t\topposite: false,\r\n\t\t\tinversed: false,\r\n\t\t\tcellStartLocation: 0,\r\n\t\t\tcellEndLocation: 1,\r\n\t\t\theight: p100\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"axis\", \"thumb\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\r\n\t\t\trule.states.create(\"hover\", { fillOpacity: 0.1 })\r\n\t\t}\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"x\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\"\r\n\t\t});\r\n\r\n\t\tr(\"Rectangle\", [\"axis\", \"thumb\", \"y\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ns-resize\"\r\n\t\t});\r\n\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Grid\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0,\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tcrisp: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Grid\", [\"base\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.3\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"axis\", \"fill\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tvisible: false,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tfillOpacity: 0.05,\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"alternativeBackground\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"axis\", \"fill\", \"range\"]).setAll({\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\t// hides all elements of series axis range\r\n\t\tr(\"Graphics\", [\"series\", \"fill\", \"range\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tisMeasured: true\r\n\t\t});\r\n\r\n\t\tr(\"Grid\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\tr(\"AxisTick\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\t\t\t\r\n\t\t});\r\n\r\n\t\tr(\"AxisLabel\", [\"series\", \"range\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"AxisTick\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tlocation: 0.5,\r\n\t\t\t\tmultiLocation: 0,\r\n\t\t\t\tstrokeOpacity: 1,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tvisible: false\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"CategoryAxis\").setAll({\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tfillRule: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst gridIntervals: Array<ITimeInterval> = [\r\n\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 5 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 50 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t{ timeUnit: \"millisecond\", count: 500 },\r\n\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t{ timeUnit: \"second\", count: 5 },\r\n\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t{ timeUnit: \"second\", count: 30 },\r\n\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t{ timeUnit: \"minute\", count: 5 },\r\n\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t{ timeUnit: \"minute\", count: 15 },\r\n\t\t\t{ timeUnit: \"minute\", count: 30 },\r\n\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t{ timeUnit: \"hour\", count: 3 },\r\n\t\t\t{ timeUnit: \"hour\", count: 6 },\r\n\t\t\t{ timeUnit: \"hour\", count: 12 },\r\n\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t{ timeUnit: \"day\", count: 2 },\r\n\t\t\t{ timeUnit: \"day\", count: 3 },\r\n\t\t\t{ timeUnit: \"day\", count: 4 },\r\n\t\t\t{ timeUnit: \"day\", count: 5 },\r\n\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t{ timeUnit: \"month\", count: 2 },\r\n\t\t\t{ timeUnit: \"month\", count: 3 },\r\n\t\t\t{ timeUnit: \"month\", count: 6 },\r\n\t\t\t{ timeUnit: \"year\", count: 1 },\r\n\t\t\t{ timeUnit: \"year\", count: 2 },\r\n\t\t\t{ timeUnit: \"year\", count: 5 },\r\n\t\t\t{ timeUnit: \"year\", count: 10 },\r\n\t\t\t{ timeUnit: \"year\", count: 50 },\r\n\t\t\t{ timeUnit: \"year\", count: 100 },\r\n\t\t\t{ timeUnit: \"year\", count: 200 },\r\n\t\t\t{ timeUnit: \"year\", count: 500 },\r\n\t\t\t{ timeUnit: \"year\", count: 1000 },\r\n\t\t\t{ timeUnit: \"year\", count: 2000 },\r\n\t\t\t{ timeUnit: \"year\", count: 5000 },\r\n\t\t\t{ timeUnit: \"year\", count: 10000 },\r\n\t\t\t{ timeUnit: \"year\", count: 100000 }\r\n\t\t];\r\n\r\n\t\tconst dateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst periodChangeDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond\"),\r\n\t\t\t\"second\": language.translate(\"_date_second\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute\"),\r\n\t\t\t\"hour\": language.translate(\"_date_day\"),\r\n\t\t\t\"day\": language.translate(\"_date_day\"),\r\n\t\t\t\"week\": language.translate(\"_date_day\"),\r\n\t\t\t\"month\": language.translate(\"_date_month\") + \" \" + language.translate(\"_date_year\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tconst tooltipDateFormats = {\r\n\t\t\t\"millisecond\": language.translate(\"_date_millisecond_full\"),\r\n\t\t\t\"second\": language.translate(\"_date_second_full\"),\r\n\t\t\t\"minute\": language.translate(\"_date_minute_full\"),\r\n\t\t\t\"hour\": language.translate(\"_date_hour_full\"),\r\n\t\t\t\"day\": language.translate(\"_date_day_full\"),\r\n\t\t\t\"week\": language.translate(\"_date_week_full\"),\r\n\t\t\t\"month\": language.translate(\"_date_month_full\"),\r\n\t\t\t\"year\": language.translate(\"_date_year\")\r\n\t\t};\r\n\r\n\t\tr(\"CategoryDateAxis\").setAll({\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats)\r\n\t\t});\r\n\r\n\t\tr(\"DateAxis\").setAll({\r\n\t\t\tmaxZoomFactor: null,\r\n\t\t\tstrictMinMax: true,\r\n\t\t\tstartLocation: 0,\r\n\t\t\tendLocation: 1,\r\n\t\t\tmarkUnitChange: true,\r\n\t\t\tgroupData: false,\r\n\t\t\tgroupCount: 500,\r\n\t\t\tgridIntervals: $array.copy(gridIntervals),\r\n\t\t\tdateFormats: $object.copy(dateFormats),\r\n\t\t\tperiodChangeDateFormats: $object.copy(periodChangeDateFormats),\r\n\t\t\ttooltipDateFormats: tooltipDateFormats,\r\n\r\n\t\t\tgroupIntervals: [\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"millisecond\", count: 100 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"second\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"minute\", count: 10 },\r\n\t\t\t\t{ timeUnit: \"hour\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"day\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"week\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"month\", count: 1 },\r\n\t\t\t\t{ timeUnit: \"year\", count: 1 }\r\n\t\t\t],\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <DateAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst endValue = dataItem.get(\"endValue\");\r\n\t\t\t\t\tconst intervalDuration = axis.intervalDuration();\r\n\t\t\t\t\tconst baseInterval = axis.getPrivate(\"baseInterval\");\r\n\t\t\t\t\tconst gridInterval = axis.getPrivate(\"gridInterval\", baseInterval);\r\n\r\n\r\n\t\t\t\t\tlet min = axis.getPrivate(\"min\", 0);\r\n\t\t\t\t\tmin = $time.round(new Date(min), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\t\tif (value != null && endValue != null) {\r\n\t\t\t\t\t\tconst val = Math.round(Math.round((value - min) / intervalDuration)) / 2;\r\n\r\n\t\t\t\t\t\tif (val == Math.round(val)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"GaplessDateAxis\").setAll({\r\n\t\t\tfillRule: (dataItem: DataItem<IGaplessDateAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\r\n\t\t\t\t\tconst index = dataItem.get(\"index\")\r\n\t\t\t\t\tlet visible = false;\r\n\t\t\t\t\tif (!$type.isNumber(index) || index % 2 == 0) {\r\n\t\t\t\t\t\tvisible = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\taxisFill.setPrivate(\"visible\", visible);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tr(\"ValueAxis\").setAll({\r\n\r\n\t\t\tbaseValue: 0,\r\n\t\t\tlogarithmic: false,\r\n\t\t\tstrictMinMax: false,\r\n\t\t\tautoZoom: true,\r\n\r\n\t\t\tfillRule: (dataItem: DataItem<IValueAxisDataItem>) => {\r\n\t\t\t\tconst axisFill = dataItem.get(\"axisFill\");\r\n\t\t\t\tif (axisFill) {\r\n\t\t\t\t\tconst axis = <ValueAxis<AxisRenderer>>dataItem.component;\r\n\t\t\t\t\tconst value = dataItem.get(\"value\");\r\n\t\t\t\t\tconst step = axis.getPrivate(\"step\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(step)) {\r\n\t\t\t\t\t\tif ($math.round(value / step / 2, 5) == Math.round(value / step / 2)) {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\taxisFill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"DurationAxis\").setAll({\r\n\t\t\tbaseUnit: \"second\"\r\n\t\t})\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/xy: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"XYSeries\").setAll({\r\n\t\t\tmaskBullets: true,\r\n\t\t\tstackToNegative: true,\r\n\r\n\t\t\tlocationX: 0.5,\r\n\t\t\tlocationY: 0.5,\r\n\r\n\t\t\tsnapTooltip: false,\r\n\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\",\r\n\r\n\t\t\tseriesTooltipTarget: \"series\"\r\n\t\t});\r\n\r\n\t\tr(\"BaseColumnSeries\").setAll({\r\n\t\t\tadjustBulletPosition: true\r\n\t\t});\r\n\r\n\t\tr(\"ColumnSeries\").setAll({\r\n\t\t\tclustered: true\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"series\", \"column\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(70),\r\n\t\t\theight: percent(70),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"LineSeries\").setAll({\r\n\t\t\tconnect: true,\r\n\t\t\tautoGapCount: 1.1,\r\n\t\t\tstackToNegative: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"stroke\"]).setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"series\", \"fill\"]).setAll({\r\n\t\t\tvisible: false,\r\n\t\t\tfillOpacity: 0,\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tstrokeWidth: 0,\r\n\t\t\tstrokeOpacity: 0,\r\n\t\t\tisMeasured: false\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, h / 2);\r\n\t\t\t\t\tdisplay.lineTo(w, h / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).setAll({\r\n\t\t\tdraw: (display: any, sprite: any) => {\r\n\t\t\t\tconst parent = sprite.parent;\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tconst h = parent.height();\r\n\t\t\t\t\tconst w = parent.width();\r\n\t\t\t\t\tdisplay.moveTo(0, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, 0);\r\n\t\t\t\t\tdisplay.lineTo(w, h);\r\n\t\t\t\t\tdisplay.lineTo(0, h);\r\n\t\t\t\t\tdisplay.lineTo(0, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]).states.create(\"disabled\", {});\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"disabled\");\r\n\t\t}\r\n\r\n\t\tr(\"SmoothedXYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedXLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"SmoothedYLineSeries\").setAll({\r\n\t\t\ttension: 0.5\r\n\t\t});\r\n\r\n\t\tr(\"Candlestick\").setAll({\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tisMeasured: false,\r\n\t\t\twidth: percent(50),\r\n\t\t\theight: percent(50),\r\n\t\t\tstrokeWidth: 1,\r\n\t\t\tstrokeOpacity: 1,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBR: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tfillOpacity: 1,\r\n\t\t\trole: \"figure\"\r\n\t\t});\r\n\r\n\t\tr(\"OHLC\").setAll({\r\n\t\t\twidth: percent(80),\r\n\t\t\theight: percent(80)\r\n\t\t});\r\n\r\n\t\tr(\"CandlestickSeries\").setAll({\r\n\t\t\tlowValueXGrouped: \"low\",\r\n\t\t\tlowValueYGrouped: \"low\",\r\n\t\t\thighValueXGrouped: \"high\",\r\n\t\t\thighValueYGrouped: \"high\",\r\n\t\t\topenValueXGrouped: \"open\",\r\n\t\t\topenValueYGrouped: \"open\",\r\n\t\t\tvalueXGrouped: \"close\",\r\n\t\t\tvalueYGrouped: \"close\"\r\n\t\t})\r\n\r\n\t\t// These rules can be used for regular columns, too\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"riseFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\"]).states.create(\"dropFromOpen\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\t\t// Hollow\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromOpen\", { fillOpacity: 0 });\r\n\t\tr(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromOpen\", { fillOpacity: 1 });\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"riseFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"positive\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"positive\");\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Rectangle\", [\"column\", \"autocolor\", \"pro\"]).states.create(\"dropFromPrevious\", {});\r\n\t\t\tsetColor(rule, \"fill\", ic, \"negative\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"negative\");\r\n\t\t}\r\n\r\n\r\n\t\t// AXIS RANGE GRIP\r\n\t\t{\r\n\t\t\tconst rule = r(\"RoundedRectangle\", [\"rangegrip\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tfillOpacity: 0,\r\n\t\t\t\tstrokeWidth:1,\r\n\t\t\t\twidth: 12,\r\n\t\t\t\theight: 12\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"rangegrip\", \"button\", \"icon\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tinteractive: false,\r\n\t\t\t\tcrisp: true,\r\n\t\t\t\tstrokeOpacity: 0.5,\r\n\t\t\t\tdraw: (display: any) => {\r\n\t\t\t\t\tdisplay.moveTo(0, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(0, 12.5);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdisplay.moveTo(2, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(2, 12.5);\r\n\r\n\t\t\t\t\tdisplay.moveTo(4, 0.5);\r\n\t\t\t\t\tdisplay.lineTo(4, 12.5);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"secondaryButtonText\");\r\n\t\t}\r\n\r\n\t\tr(\"Button\", [\"rangegrip\"]).setAll({\r\n\t\t\tdraggable:true,\r\n\t\t\tpaddingTop:0,\r\n\t\t\tpaddingBottom:0\r\n\t\t})\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\"]).setAll({\r\n\t\t\trotation: 90,\r\n\t\t\tcursorOverStyle: \"ns-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\"]).setAll({\r\n\t\t\tcursorOverStyle: \"ew-resize\",\r\n\t\t\tcenterX: p50\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"left\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"vertical\", \"right\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"top\"]).setAll({\r\n\t\t\tcenterY: 0\r\n\t\t});\r\n\r\n\t\tr(\"Button\", [\"rangegrip\", \"horizontal\", \"bottom\"]).setAll({\r\n\t\t\tcenterY: p100\r\n\t\t});\t\t\r\n\r\n\t}\r\n}\r\n","import type { IPoint } from \"../../core/util/IPoint\";\nimport type { XYChart } from \"./XYChart\"\nimport type { XYSeries } from \"./series/XYSeries\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\nimport type { Axis } from \"./axes/Axis\";\nimport type { AxisRenderer } from \"./axes/AxisRenderer\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\n\nimport { Container, IContainerSettings, IContainerPrivate, IContainerEvents } from \"../../core/render/Container\";\nimport { p100 } from \"../../core/util/Percent\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Grid } from \"./axes/Grid\";\n//import { Animations } from \"../core/util/Animation\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\nimport type { IPointerEvent } from \"../../core/render/backend/Renderer\";\n\nexport interface IXYCursorSettings extends IContainerSettings {\n\n\t/**\n\t * Cursor's X axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\txAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * Cursor's Y axis.\n\t *\n\t * If set, cursor will snap to that axis' cells.\n\t */\n\tyAxis?: Axis<AxisRenderer>;\n\n\t/**\n\t * What should cursor do when dragged across plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#Behavior} for more info\n\t * @default \"none\"\n\t */\n\tbehavior?: \"zoomX\" | \"zoomY\" | \"zoomXY\" | \"selectX\" | \"selectY\" | \"selectXY\" | \"none\";\n\n\t/**\n\t * Cursor's horizontal position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionX` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Cursor's vertical position relative to plot area.\n\t *\n\t * If this setting is set, cursor will not react to mouse/touch and will just\n\t * sit at specified position until `positionY` is reset to `undefined`.\n\t *\n\t * `0` - left, `1` - right.\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * If set to `true`, cursor will not be hidden when mouse cursor moves out\n\t * of the plot area.\n\t *\n\t * @default false\n\t */\n\talwaysShow?: boolean;\n\n\t/**\n\t * A list of series to snap cursor to.\n\t *\n\t * If set, the cursor will always snap to the closest data item of listed\n\t * series.\n\t */\n\tsnapToSeries?: Array<XYSeries>;\n\n\t/**\n\t * Defines in which direction to look when searching for the nearest data\n\t * item to snap to.\n\t *\n\t * Possible values: `\"xy\"` (default), `\"x\"`, and `\"y\"`.\n\t *\n\t * @since 5.0.6\n\t * @default \"xy\"\n\t */\n\tsnapToSeriesBy?: \"xy\" | \"x\" | \"y\" | \"x!\" | \"y!\";\n\n\t/**\n\t * An array of other [[XYCursor]] objects to sync this cursor with.\n\t *\n\t * If set will automatically move synced cursors to the same position within\n\t * their respective axes as the this cursor assumin same XY coordinates of\n\t * the pointer.\n\t *\n\t * NOTE: Syncing is performed using actual X/Y coordinates of the point of\n\t * mouse cursor's position or touch. It means that they will not sync by axis\n\t * positions, but rather by screen coordinates. For example vertical lines\n\t * will not sync across horizontally laid out charts, and vice versa.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/#syncing-cursors} for more info\n\t * @since 5.1.4\n\t */\n\tsyncWith?: Array<XYCursor>;\n\n\t/**\n\t * Minimum distance in pixels between down and up points.\n\t *\n\t * If a distance is less than the value of `moveThreshold`, the zoom or\n\t * selection won't happen.\n\t *\n\t * @since 5.2.20\n\t * @default 1\n\t */\n\tmoveThreshold?: number\n\n}\n\n\nexport interface IXYCursorPrivate extends IContainerPrivate {\n\n\t/**\n\t * Current X/Y coordinates of the cursor.\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * Current horizontal position relative to the plot area (0-1).\n\t */\n\tpositionX?: number;\n\n\t/**\n\t * Current vertical position relative to the plot area (0-1).\n\t */\n\tpositionY?: number;\n\n\t/**\n\t * Horizontal cursor position on the moment when selection started.\n\t */\n\tdownPositionX?: number;\n\n\t/**\n\t * Vertical cursor position on the moment when selection started.\n\t */\n\tdownPositionY?: number;\n\n\t/**\n\t * Last global point to which cursor moved\n\t */\n\tlastPoint?: IPoint;\n}\n\nexport interface IXYCursorEvents extends IContainerEvents {\n\n\t/**\n\t * Kicks in when cursor selection ends.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectended: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor selection starts.\n\t *\n\t * Only when `behavior` is set.\n\t */\n\tselectstarted: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Kicks in when cursor's position over plot area changes.\n\t */\n\tcursormoved: {\n\t\tpoint: IPoint,\n\t\ttarget: XYCursor,\n\t\toriginalEvent?: IPointerEvent\n\t};\n\n\t/**\n\t * Kicks in when cursor's is hidden when user rolls-out of the plot area\n\t */\n\tcursorhidden: {\n\t\ttarget: XYCursor\n\t};\n\n\t/**\n\t * Invoked if pointer is pressed down on a plot area and released without\n\t * moving (only when behavior is `\"selectX\"`).\n\t *\n\t * @since 5.4.7\n\t */\n\tselectcancelled: {\n\t\toriginalEvent: IPointerEvent,\n\t\ttarget: XYCursor\n\t};\n\n}\n\n/**\n * Creates a chart cursor for an [[XYChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/} for more info\n * @important\n */\nexport class XYCursor extends Container {\n\tpublic static className: string = \"XYCursor\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([XYCursor.className]);\n\n\tdeclare public _settings: IXYCursorSettings;\n\tdeclare public _privateSettings: IXYCursorPrivate;\n\tdeclare public _events: IXYCursorEvents;\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineX: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"x\"]\n\t}));\n\n\t/**\n\t * A [[Grid]] elment that used for horizontal line of the cursor crosshair.\n\t *\n\t * @default Grid.new()\n\t */\n\tpublic readonly lineY: Grid = this.children.push(Grid.new(this._root, {\n\t\tthemeTags: [\"y\"]\n\t}));\n\n\t/**\n\t * An element that represents current selection.\n\t *\n\t * @default Graphics.new()\n\t */\n\tpublic readonly selection: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"selection\", \"cursor\"], layer: 30\n\t}));\n\n\tprotected _movePoint: IPoint | undefined;\n\tprotected _lastPoint: IPoint = { x: 0, y: 0 };\n\n\tprotected _tooltipX: boolean = false;\n\tprotected _tooltipY: boolean = false;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _toX?: number;\n\tprotected _toY?: number;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"xy\", \"cursor\"]);\n\t\tsuper._afterNew();\n\t\tthis.setAll({ \"width\": p100, height: p100, isMeasured: true, position: \"absolute\" });\n\t\tthis.states.create(\"hidden\", { visible: true, opacity: 0 });\n\t\tthis._drawLines();\n\t\tthis.setPrivateRaw(\"visible\", false);\n\n\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\tthis.setPrivate(\"visible\", true)\n\t\t}, 500));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleXLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"positionchanged\", () => {\n\t\t\tthis._handleYLine();\n\t\t}));\n\n\t\tthis._disposers.push(this.lineX.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineX.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tthis._disposers.push(this.lineY.events.on(\"focus\", (ev) => this._handleLineFocus(ev.target)));\n\t\tthis._disposers.push(this.lineY.events.on(\"blur\", (ev) => this._handleLineBlur(ev.target)));\n\n\t\tif ($utils.supports(\"keyboardevents\")) {\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\n\t\t\t\tthis._handleLineMove(ev.keyCode);\n\t\t\t}));\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.plotContainer._display.cancelTouch = this.get(\"behavior\") != \"none\" ? true : false;\n\t\t}\n\t}\n\n\tprotected _handleXLine() {\n\t\tlet x = this.lineX.x();\n\t\tlet visible = true;\n\t\tif (x < 0 || x > this.width()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineX.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleYLine() {\n\t\tlet y = this.lineY.y();\n\t\tlet visible = true;\n\t\tif (y < 0 || y > this.height()) {\n\t\t\tvisible = false;\n\t\t}\n\t\tthis.lineY.setPrivate(\"visible\", visible);\n\t}\n\n\tprotected _handleLineMove(keyCode: number) {\n\t\tlet dir: any = \"\";\n\t\tlet position = 0;\n\t\tlet increment = 0.1;\n\t\tconst chart = this.chart;\n\n\t\tif (this._root.focused(this.lineX)) {\n\t\t\tif (chart && chart.xAxes.length) {\n\t\t\t\tincrement = chart.xAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionX\", 0);\n\t\t\tdir = \"positionX\";\n\t\t\tif (keyCode == 37) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 39) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\t\telse if (this._root.focused(this.lineY)) {\n\t\t\tif (chart && chart.yAxes.length) {\n\t\t\t\tincrement = chart.yAxes.getIndex(0)!.getCellWidthPosition();\n\t\t\t}\n\t\t\tposition = this.getPrivate(\"positionY\", 0);\n\t\t\tdir = \"positionY\";\n\t\t\tif (keyCode == 38) {\n\t\t\t\tposition -= increment;\n\t\t\t}\n\t\t\telse if (keyCode == 40) {\n\t\t\t\tposition += increment;\n\t\t\t}\n\t\t}\n\n\t\tif (position < 0) {\n\t\t\tposition = 0;\n\t\t}\n\t\telse if (position > 1) {\n\t\t\tposition = 1;\n\t\t}\n\n\t\tif (dir != \"\") {\n\t\t\tthis.set(dir, position);\n\t\t}\n\t}\n\n\tprotected _handleLineFocus(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: this.getPrivate(\"positionX\"),\n\t\t\tpositionY: this.getPrivate(\"positionY\"),\n\t\t\talwaysShow: true\n\t\t});\n\t}\n\n\tprotected _handleLineBlur(_line: Grid) {\n\t\tthis.setAll({\n\t\t\tpositionX: undefined,\n\t\t\tpositionY: undefined,\n\t\t\talwaysShow: false\n\t\t});\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"xAxis\")) {\n\t\t\tthis._tooltipX = false;\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\n\t\t\tif (xAxis) {\n\t\t\t\tconst tooltip = xAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipX = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateXLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"yAxis\")) {\n\t\t\tthis._tooltipY = false;\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\tif (yAxis) {\n\t\t\t\tconst tooltip = yAxis.get(\"tooltip\");\n\t\t\t\tif (tooltip) {\n\t\t\t\t\tthis._tooltipY = true;\n\t\t\t\t\tthis._disposers.push(\n\t\t\t\t\t\ttooltip.on(\"pointTo\", () => {\n\t\t\t\t\t\t\tthis._updateYLine(tooltip);\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleSyncWith() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst syncWith = this.get(\"syncWith\");\n\t\t\tconst otherCharts: Array<XYChart> = [];\n\t\t\tif (syncWith) {\n\t\t\t\t$array.each(syncWith, (cursor) => {\n\t\t\t\t\tconst chart = cursor.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\totherCharts.push(chart)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\tchart._otherCharts = otherCharts;\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\t\tthis._handleSyncWith();\n\n\t\tif (this.isDirty(\"positionX\") || this.isDirty(\"positionY\")) {\n\t\t\tconst positionX = this.get(\"positionX\");\n\t\t\tconst positionY = this.get(\"positionY\");\n\n\t\t\tif (positionX == null && positionY == null) {\n\t\t\t\tthis.hide(0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t\t\tthis.handleMove();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet x = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).x, 2);\n\t\tif (this._toX != x) {\n\t\t\tthis.lineX.animate({ key: \"x\", to: x, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toX = x;\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet y = $math.round(this._display.toLocal(tooltip.get(\"pointTo\", { x: 0, y: 0 })).y, 2);\n\t\tif (this._toY != y) {\n\t\t\tthis.lineY.animate({ key: \"y\", to: y, duration: tooltip.get(\"animationDuration\", 0), easing: tooltip.get(\"animationEasing\") });\n\t\t\tthis._toY = y;\n\t\t}\n\t}\n\n\tprotected _drawLines() {\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, this.height());\n\t\t})\n\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(this.width(), 0);\n\t\t})\n\t}\n\n\tpublic updateCursor() {\n\t\tif (this.get(\"alwaysShow\")) {\n\t\t\tthis._movePoint = this.toGlobal(this._getPoint(this.get(\"positionX\", 0), this.get(\"positionY\", 0)));\n\t\t}\n\t\tthis.handleMove();\n\t}\n\n\tpublic _setChart(chart: XYChart): void {\n\t\tthis.chart = chart;\n\n\t\tthis._handleSyncWith();\n\n\t\tconst plotContainer = chart.plotContainer;\n\n\t\tthis.events.on(\"boundschanged\", () => {\n\t\t\tthis._disposers.push(this.setTimeout(() => {\n\t\t\t\tthis.updateCursor();\n\t\t\t}, 50))\n\t\t})\n\n\t\t//this._display.interactive = true;\n\t\tif ($utils.supports(\"touchevents\")) {\n\t\t\tthis._disposers.push(plotContainer.events.on(\"click\", (event) => {\n\t\t\t\tif ($utils.isTouchEvent(event.originalEvent)) {\n\t\t\t\t\tthis._handleMove(event);\n\t\t\t\t}\n\t\t\t}));\n\t\t\tthis._setUpTouch();\n\t\t}\n\n\t\tthis._disposers.push(plotContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleCursorDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleCursorUp(event);\n\t\t\tif (!event.native && !this.isHidden()) {\n\t\t\t\tthis._handleMove(event);\n\t\t\t}\n\t\t}));\n\n\t\tthis._disposers.push(plotContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tif (!this.get(\"syncWith\")) {\n\t\t\t\tif ($object.keys(plotContainer._downPoints).length == 0 && !event.native && this.isHidden()) {\n\t\t\t\t\t// Ignore mouse movement if it originates on outside element and\n\t\t\t\t\t// we're not dragging.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._handleMove(event);\n\t\t}));\n\n\t\tconst parent = this.parent;\n\t\tif (parent) {\n\t\t\tparent.children.moveValue(this.selection);\n\t\t}\n\t}\n\n\tprotected _inPlot(point: IPoint): boolean {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.inPlot(point);\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _handleCursorDown(event: ISpritePointerEvent) {\n\t\tif ((event.originalEvent as any).button == 2) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rootPoint = event.point;\n\t\tlet local = this._display.toLocal(rootPoint);\n\t\tconst chart = this.chart;\n\n\t\tthis.selection.set(\"draw\", () => { });\n\n\t\tif (chart && this._inPlot(local)) {\n\t\t\tthis._downPoint = local;\n\n\t\t\tif (this.get(\"behavior\") != \"none\") {\n\t\t\t\tthis.selection.show();\n\n\t\t\t\tconst type = \"selectstarted\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet positionX = this._getPosition(local).x;\n\t\t\tlet positionY = this._getPosition(local).y;\n\n\t\t\tthis.setPrivate(\"downPositionX\", positionX);\n\t\t\tthis.setPrivate(\"downPositionY\", positionY);\n\t\t}\n\t}\n\n\tprotected _handleCursorUp(event: ISpritePointerEvent) {\n\t\t// TODO: handle multitouch\n\t\tif (this._downPoint) {\n\t\t\tconst behavior = this.get(\"behavior\", \"none\");\n\t\t\tif (behavior != \"none\") {\n\t\t\t\tif (behavior.charAt(0) === \"z\") {\n\t\t\t\t\tthis.selection.hide();\n\t\t\t\t}\n\n\t\t\t\tconst rootPoint = event.point;\n\t\t\t\tlet local = this._display.toLocal(rootPoint);\n\n\t\t\t\tconst downPoint = this._downPoint;\n\t\t\t\tconst moveThreshold = this.get(\"moveThreshold\", 1);\n\t\t\t\tif (local && downPoint) {\n\t\t\t\t\tlet dispatch = false;\n\t\t\t\t\tif (behavior === \"zoomX\" || behavior === \"zoomXY\" || behavior === \"selectX\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.x - downPoint.x) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (behavior === \"zoomY\" || behavior === \"zoomXY\" || behavior === \"selectY\" || behavior === \"selectXY\") {\n\t\t\t\t\t\tif (Math.abs(local.y - downPoint.y) > moveThreshold) {\n\t\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\tconst type = \"selectended\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconst type = \"selectcancelled\";\n\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, originalEvent: event.originalEvent });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._downPoint = undefined;\n\t}\n\n\tprotected _handleMove(event: ISpritePointerEvent) {\n\t\tif (this.getPrivate(\"visible\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart && $object.keys(chart.plotContainer._downPoints).length > 1) {\n\t\t\t\tthis.set(\"forceHidden\", true)\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"forceHidden\", false)\n\t\t\t}\n\n\t\t\t// TODO: handle multitouch\n\t\t\tconst rootPoint = event.point;\n\t\t\tconst lastPoint = this._lastPoint;\n\n\t\t\tif (Math.round(lastPoint.x) === Math.round(rootPoint.x) && Math.round(lastPoint.y) === Math.round(rootPoint.y)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._lastPoint = rootPoint;\n\t\t\tthis.setPrivate(\"lastPoint\", rootPoint);\n\n\t\t\tthis.handleMove({ x: rootPoint.x, y: rootPoint.y }, false, event.originalEvent);\n\t\t}\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\treturn { x: point.x / this.width(), y: point.y / this.height() };\n\t}\n\n\t/**\n\t * Moves the cursor to X/Y coordinates within chart container (`point`).\n\t *\n\t * If `skipEvent` parameter is set to `true`, the move will not invoke\n\t * the `\"cursormoved\"` event.\n\t *\n\t * @param  point      X/Y to move cursor to\n\t * @param  skipEvent  Do not fire \"cursormoved\" event\n\t */\n\tpublic handleMove(point?: IPoint, skipEvent?: boolean, originalEvent?: IPointerEvent) {\n\t\tif (!point) {\n\t\t\tpoint = this._movePoint;\n\t\t}\n\n\t\tconst alwaysShow = this.get(\"alwaysShow\");\n\n\t\tif (!point) {\n\t\t\tthis.hide(0);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._movePoint = point;\n\t\tlet local = this._display.toLocal(point);\n\t\tlet chart = this.chart;\n\n\t\tif (chart && (this._inPlot(local) || this._downPoint)) {\n\t\t\tchart._movePoint = point;\n\n\t\t\tif (this.isHidden()) {\n\t\t\t\tthis.show();\n\n\t\t\t\tconst behavior = this.get(\"behavior\", \"\");\n\t\t\t\tif (behavior.charAt(0) == \"z\") {\n\t\t\t\t\tthis.selection.set(\"draw\", () => { });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet x = local.x;\n\t\t\tlet y = local.y;\n\n\t\t\tlet xyPos = this._getPosition(local);\n\n\t\t\tthis.setPrivate(\"point\", local);\n\n\t\t\tlet snapToSeries = this.get(\"snapToSeries\");\n\n\t\t\tif (this._downPoint) {\n\t\t\t\tsnapToSeries = undefined;\n\t\t\t}\n\n\t\t\tlet userPositionX = this.get(\"positionX\");\n\t\t\tlet positionX = xyPos.x;\n\n\t\t\tif ($type.isNumber(userPositionX)) {\n\t\t\t\tpositionX = userPositionX;\n\t\t\t}\n\n\t\t\tlet userPositionY = this.get(\"positionY\");\n\t\t\tlet positionY = xyPos.y;\n\n\t\t\tif ($type.isNumber(userPositionY)) {\n\t\t\t\tpositionY = userPositionY;\n\t\t\t}\n\n\t\t\tthis.setPrivate(\"positionX\", positionX);\n\t\t\tthis.setPrivate(\"positionY\", positionY);\n\n\t\t\tconst xy = this._getPoint(positionX, positionY);\n\t\t\tx = xy.x;\n\t\t\ty = xy.y;\n\n\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionX, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\taxis._handleCursorPosition(positionY, snapToSeries);\n\t\t\t\tif (alwaysShow) {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (!skipEvent) {\n\t\t\t\tchart._handleCursorPosition();\n\n\t\t\t\tconst type = \"cursormoved\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this, point: point, originalEvent: originalEvent });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateLines(x, y);\n\n\t\t\tchart.arrangeTooltips();\n\t\t}\n\t\telse if (!this._downPoint) {\n\t\t\tif (!alwaysShow) {\n\t\t\t\tthis.hide(0);\n\n\t\t\t\tconst type = \"cursorhidden\";\n\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._downPoint && this.get(\"behavior\") != \"none\") {\n\t\t\tthis._updateSelection(local)\n\t\t}\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\treturn { x: this.width() * positionX, y: this.height() * positionY };\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis.lineX.set(\"x\", x);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis.lineY.set(\"y\", y);\n\t\t}\n\n\t\tthis._drawLines();\n\t}\n\n\tprotected _updateSelection(point: IPoint) {\n\t\tconst selection = this.selection;\n\t\tconst behavior = this.get(\"behavior\");\n\t\tconst w = this.width();\n\t\tconst h = this.height();\n\n\t\tif (point.x < 0) {\n\t\t\tpoint.x = 0;\n\t\t}\n\n\t\tif (point.x > w) {\n\t\t\tpoint.x = w;\n\t\t}\n\n\t\tif (point.y < 0) {\n\t\t\tpoint.y = 0;\n\t\t}\n\n\t\tif (point.y > h) {\n\t\t\tpoint.y = h;\n\t\t}\n\n\t\tselection.set(\"draw\", (display) => {\n\t\t\tconst downPoint = this._downPoint;\n\t\t\tif (downPoint) {\n\t\t\t\tif (behavior === \"zoomXY\" || behavior === \"selectXY\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\tdisplay.lineTo(point.x, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, downPoint.y);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomX\" || behavior === \"selectX\") {\n\t\t\t\t\tdisplay.moveTo(downPoint.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, h);\n\t\t\t\t\tdisplay.lineTo(point.x, 0);\n\t\t\t\t\tdisplay.lineTo(downPoint.x, 0);\n\t\t\t\t}\n\t\t\t\telse if (behavior === \"zoomY\" || behavior === \"selectY\") {\n\t\t\t\t\tdisplay.moveTo(0, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, downPoint.y);\n\t\t\t\t\tdisplay.lineTo(w, point.y);\n\t\t\t\t\tdisplay.lineTo(0, point.y);\n\t\t\t\t\tdisplay.lineTo(0, downPoint.y);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _onHide() {\n\t\tif (this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorHide();\n\t\t\t\t})\n\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\tseries.handleCursorHide();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onHide();\n\t}\n\n\tprotected _onShow() {\n\t\tif (!this.isHidden()) {\n\t\t\tlet chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.xAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t\tchart.yAxes.each((axis) => {\n\t\t\t\t\taxis.handleCursorShow();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tsuper._onShow();\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\t\tthis.selection.dispose();\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport type { Animation } from \"../../../core/util/Entity\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Root } from \"../../../core/Root\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Component, IComponentSettings, IComponentPrivate, IComponentEvents, IComponentDataItem } from \"../../../core/render/Component\";\nimport { Container } from \"../../../core/render/Container\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport { List } from \"../../../core/util/List\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n\n\nexport interface IAxisSettings<R extends AxisRenderer> extends IComponentSettings {\n\t/**\n\t * A renderer object which is responsible of rendering visible axis elements.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n\t */\n\trenderer: R;\n\n\t/**\n\t * The initial relative zoom start position of the axis.\n\t *\n\t * E.g. stting it to `0.1` will pre-zoom axis to 10% from the start.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tstart?: number;\n\n\t/**\n\t * The initial relative zoom end position of the axis.\n\t *\n\t * E.g. stting it to `0.9` will pre-zoom axis to 10% from the end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Pre_zooming_axes} for more info\n\t */\n\tend?: number;\n\n\t/**\n\t * Maximum number of times the scope of the axis could auto-zoom-in.\n\t *\n\t * This is to prevent axis jumping too drastically when scrolling/zooming.\n\t *\n\t * @default 1000\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Maximum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed out beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tmaxZoomCount?: number;\n\n\t/**\n\t * Minimum number of axis elements to show at a time.\n\t *\n\t * E.g. for a [[CategoryAxis]] that would be number of categories.\n\t * For a [[DateAxis]] it would be number of `baseInterval`.\n\t *\n\t * The axis will not allow to be zoomed in beyond this number.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Limiting_zoom_scope} for more info\n\t */\n\tminZoomCount?: number;\n\n\t/**\n\t * Base value of the axis.\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * horizontally, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is panned\n\t * vertically, and will keep its current position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tpanY?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * horizontally, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomX?: boolean;\n\n\t/**\n\t * If set to `false` the axis will be exempt when chart is zoomed\n\t * vertically, and will keep its current zoom/position.`\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Excluding_axes_from_pan_or_zoom} for more info\n\t */\n\tzoomY?: boolean;\n\n\t/**\n\t * A relative distance the axis is allowed to be zoomed/panned beyond its\n\t * actual scope.\n\t *\n\t * @default 0.1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/zoom-and-pan/#Over_zooming} for more info\n\t */\n\tmaxDeviation?: number;\n\n\t/**\n\t * [[Tooltip]] element to use for axis.\n\t */\n\ttooltip?: Tooltip;\n\n\t/**\n\t * `tooltipLocation` indicates\n\t * which relative place to snap to: `0` beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\ttooltipLocation?: number;\n\n\t/**\n\t * Should tooltip snap to the `tooltipLocation` (`true`) or follow cursor.\n\t *\n\t * @default true\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * If set to `true` (default) the axis width will stay constant across all\n\t * zooms, even if actual length of all visible labels changes.\n\t *\n\t * @default true\n\t */\n\tfixAxisSize?: boolean;\n\n\t/**\n\t * A function that will be used to create bullets on each cell.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n\t */\n\tbullet?: (root: Root, axis: Axis<AxisRenderer>, dataItem: DataItem<IAxisDataItem>) => AxisBullet;\n}\n\nexport interface IAxisEvents extends IComponentEvents {\n}\n\nexport interface IAxisPrivate extends IComponentPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tname?: \"value\" | \"date\" | \"category\";\n\n\t/**\n\t * @ignore\n\t */\n\tupdateScrollbar?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tmaxZoomFactor?: number | null;\n\n\t/**\n\t * Saves position to which tooltip points.\n\t */\n\ttooltipPosition?: number;\n\n\t/**\n\t * Width in pixels between grid lines (read-only).\n\t * \n\t * It might not be exact, as [[DateAxis]] can have grids at irregular\n\t * intervals.\n\t * \n\t * Could be used to detect when size changes and to adjust labels for them\n\t * not to overlap.\n\t */\n\tcellWidth?: number;\n\n}\n\nexport interface IAxisDataItem extends IComponentDataItem {\n\n\t/**\n\t * Axis label element.\n\t */\n\tlabel?: AxisLabel;\n\n\t/**\n\t * Tick element.\n\t */\n\ttick?: AxisTick;\n\n\t/**\n\t * Grid line element.\n\t */\n\tgrid?: Grid;\n\n\t/**\n\t * Axis fill element.\n\t */\n\taxisFill?: Graphics;\n\n\t/**\n\t * Bullet element.\n\t */\n\tbullet?: AxisBullet;\n\n\t/**\n\t * Indicates if this data item represents an axis range.\n\t */\n\tisRange?: boolean;\n\n\t/**\n\t * If set to `true`, the grid and axis fill of this data item will be drawn\n\t * above series.\n\t *\n\t * NOTE: this needs to be set **before** crating an axis range. Updating this\n\t * dynamically won't have any effect.\n\t *\n\t * NOTE: if you need all grid to be drawn above series, you can brig it to\n\t * front with `chart.gridContainer.toFront();`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Grid_fill_above_series} for more info\n\t * @default false\n\t */\n\tabove?: boolean\n\n}\n\n/**\n * A base class for all axes.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_axes} for more info\n */\nexport abstract class Axis<R extends AxisRenderer> extends Component {\n\tpublic static className: string = \"Axis\";\n\tpublic static classNames: Array<string> = Component.classNames.concat([Axis.className]);\n\n\tdeclare public _settings: IAxisSettings<R>;\n\tdeclare public _privateSettings: IAxisPrivate;\n\tdeclare public _dataItemSettings: IAxisDataItem;\n\tdeclare public _events: IAxisEvents;\n\n\tdeclare public _seriesType: XYSeries;\n\n\tprotected _series: Array<this[\"_seriesType\"]> = [];\n\n\tpublic _isPanning: boolean = false;\n\n\t/**\n\t * A [[Container]] that holds all the axis label elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly labelsContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A [[Container]] that holds all the axis grid and fill elements.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly gridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds axis grid elements which goes above the series.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly topGridContainer: Container = Container.new(this._root, { width: p100, height: p100 });\n\n\t/**\n\t * A [[Container]] that holds all the axis bullet elements.\n\t *\n\t * @default new Container\n\t */\n\tpublic readonly bulletsContainer: Container = this.children.push(Container.new(this._root, { isMeasured: false, width: p100, height: p100, position: \"absolute\" }));\n\n\t/**\n\t * A referenece to the the chart the axis belongs to.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _rangesDirty: Boolean = false;\n\n\tpublic _panStart: number = 0;\n\tpublic _panEnd: number = 1;\n\n\tprotected _sAnimation?: Animation<this[\"_settings\"][\"start\"]>;\n\tprotected _eAnimation?: Animation<this[\"_settings\"][\"end\"]>;\n\n\tpublic _skipSync: boolean = false;\n\n\t/**\n\t * A list of axis ranges.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @default new List()\n\t */\n\tpublic readonly axisRanges: List<DataItem<this[\"_dataItemSettings\"]>> = new List();\n\n\tpublic _seriesAxisRanges: Array<DataItem<this[\"_dataItemSettings\"]>> = [];\n\n\t/**\n\t * A control label that is invisible but is used to keep width the width of\n\t * the axis constant.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Ghost_label} for more info\n\t */\n\tpublic ghostLabel!: AxisLabel;\n\n\tprotected _cursorPosition: number = -1;\n\n\tprotected _snapToSeries?: Array<XYSeries>;\n\n\tpublic _seriesValuesDirty = false;\n\n\t/**\n\t * A container above the axis that can be used to add additional stuff into\n\t * it. For example a legend, label, or an icon.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-headers/} for more info\n\t * @default new Container\n\t */\n\tpublic axisHeader: Container = this.children.push(Container.new(this._root, {\n\t\tthemeTags: [\"axis\", \"header\"],\n\t\tposition: \"absolute\",\n\t\tbackground: Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"header\", \"background\"],\n\t\t\tfill: this._root.interfaceColors.get(\"background\")\n\t\t})\n\t}));\n\n\tpublic _bullets: { [index: string]: AxisBullet } = {};\n\n\tprotected _dispose() {\n\t\t// these could be in other parents, so disposing just in case\n\t\tthis.gridContainer.dispose();\n\t\tthis.topGridContainer.dispose();\n\t\tthis.bulletsContainer.dispose();\n\t\tthis.labelsContainer.dispose();\n\t\tthis.axisHeader.dispose();\n\t\tsuper._dispose();\n\t}\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\n\t\tthis.setPrivate(\"updateScrollbar\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue, [\"range\"]);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis.disposeDataItem(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value, [\"range\"]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tif (renderer) {\n\t\t\trenderer.axis = this;\n\t\t\trenderer.processAxis();\n\t\t}\n\t\tthis.children.push(renderer);\n\t\tthis.ghostLabel = renderer.makeLabel(new DataItem(this, undefined, {}), []);\n\t\tthis.ghostLabel.adapters.disable(\"text\");\n\t\tthis.ghostLabel.setAll({ opacity: 0, tooltipText: undefined, tooltipHTML: undefined, interactive: false });\n\t\tthis.ghostLabel.events.disable();\n\t}\n\n\tprotected _updateFinals(_start: number, _end: number) {\n\n\t}\n\n\t/**\n\t * Zooms the axis to relative locations.\n\t *\n\t * Both `start` and `end` are relative: 0 means start of the axis, 1 - end.\n\t *\n\t * @param   start     Relative start\n\t * @param   end       Relative end\n\t * @param   duration  Duration of the zoom animation in milliseconds\n\t * @return            Zoom animation\n\t */\n\tpublic zoom(start: number, end: number, duration?: number, priority?: \"start\" | \"end\"): Animation<this[\"_settings\"][\"start\"]> | Animation<this[\"_settings\"][\"end\"]> | undefined {\n\t\tthis._updateFinals(start, end);\n\n\t\tif (this.get(\"start\") !== start || this.get(\"end\") != end) {\n\t\t\tlet sAnimation = this._sAnimation;\n\t\t\tlet eAnimation = this._eAnimation;\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < - maxDeviation) {\n\t\t\t\tstart = -maxDeviation;\n\t\t\t}\n\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t}\n\n\t\t\tif (start > end) {\n\t\t\t\t[start, end] = [end, start];\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"interpolationDuration\", 0);\n\t\t\t}\n\n\t\t\tif (!priority) {\n\t\t\t\tpriority = \"end\";\n\t\t\t}\n\n\t\t\tlet maxZoomFactor = this.getPrivate(\"maxZoomFactor\", this.get(\"maxZoomFactor\", 100));\n\t\t\tlet maxZoomFactorReal = maxZoomFactor;\n\n\t\t\tif (end === 1 && start !== 0) {\n\t\t\t\tif (start < this.get(\"start\")) {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === 0 && end !== 1) {\n\t\t\t\tif (end > this.get(\"end\")) {\n\t\t\t\t\tpriority = \"end\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpriority = \"start\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet minZoomCount = this.get(\"minZoomCount\");\n\t\t\tlet maxZoomCount = this.get(\"maxZoomCount\");\n\n\t\t\tif ($type.isNumber(minZoomCount)) {\n\t\t\t\tmaxZoomFactor = maxZoomFactorReal / minZoomCount;\n\t\t\t}\n\n\t\t\tlet minZoomFactor: number = 1;\n\n\t\t\tif ($type.isNumber(maxZoomCount)) {\n\t\t\t\tminZoomFactor = maxZoomFactorReal / maxZoomCount;\n\t\t\t}\n\n\t\t\t// most likely we are dragging left scrollbar grip here, so we tend to modify end\n\t\t\tif (priority === \"start\") {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tend = start + 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// add to the end\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\t//unless end is > 0\n\t\t\t\tif (end > 1 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//end = 1;\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// most likely we are dragging right, so we modify left\n\t\t\telse {\n\t\t\t\tif (maxZoomCount > 0) {\n\t\t\t\t\t// add to the end\n\t\t\t\t\tif (1 / (end - start) < minZoomFactor) {\n\t\t\t\t\t\tstart = end - 1 / minZoomFactor;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remove from start\n\t\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t\tif (start < 0 && end - start < 1 / maxZoomFactor) {\n\t\t\t\t\t//start = 0;\n\t\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tend = start + 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (1 / (end - start) > maxZoomFactor) {\n\t\t\t\tstart = end - 1 / maxZoomFactor;\n\t\t\t}\n\n\t\t\tif (maxZoomCount != null && minZoomCount != null && (start == this.get(\"start\") && end == this.get(\"end\"))) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._handleAxisSelection(this, true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (((sAnimation && sAnimation.playing && sAnimation.to == start) || this.get(\"start\") == start) && ((eAnimation && eAnimation.playing && eAnimation.to == end) || this.get(\"end\") == end)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\n\t\t\tif (duration > 0) {\n\t\t\t\tlet easing = this.get(\"interpolationEasing\");\n\t\t\t\tlet sAnimation, eAnimation;\n\t\t\t\tif (this.get(\"start\") != start) {\n\t\t\t\t\tsAnimation = this.animate({ key: \"start\", to: start, duration: duration, easing: easing });\n\t\t\t\t}\n\t\t\t\tif (this.get(\"end\") != end) {\n\t\t\t\t\teAnimation = this.animate({ key: \"end\", to: end, duration: duration, easing: easing });\n\t\t\t\t}\n\n\t\t\t\tthis._sAnimation = sAnimation;\n\t\t\t\tthis._eAnimation = eAnimation;\n\n\t\t\t\tif (sAnimation) {\n\t\t\t\t\treturn sAnimation;\n\t\t\t\t}\n\t\t\t\telse if (eAnimation) {\n\t\t\t\t\treturn eAnimation;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.set(\"start\", start);\n\t\t\t\tthis.set(\"end\", end);\n\t\t\t\t// otherwise bullets and line out of sync, as series is not redrawn\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\tthis._markDirtyKey(\"start\");\n\t\t\t\t\tthis._root._markDirty();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (this._sAnimation) {\n\t\t\t\tthis._sAnimation.stop();\n\t\t\t}\n\t\t\tif (this._eAnimation) {\n\t\t\t\tthis._eAnimation.stop();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * A list of series using this axis.\n\t *\n\t * @return Series\n\t */\n\tpublic get series(): Array<this[\"_seriesType\"]> {\n\t\treturn this._series;\n\t}\n\n\n\tpublic _processAxisRange(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTags: Array<string>) {\n\t\tdataItem.setRaw(\"isRange\", true);\n\t\tthis._createAssets(dataItem, themeTags);\n\t\tthis._rangesDirty = true;\n\t\tthis._prepareDataItem(dataItem);\n\n\t\tconst above = dataItem.get(\"above\");\n\t\tconst container = this.topGridContainer;\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (above && grid) {\n\t\t\tcontainer.children.moveValue(grid);\n\t\t}\n\n\t\tconst fill = dataItem.get(\"axisFill\");\n\t\tif (above && fill) {\n\t\t\tcontainer.children.moveValue(fill);\n\t\t}\n\t}\n\n\tpublic _prepareDataItem(_dataItem: DataItem<this[\"_dataItemSettings\"]>, _index?: number) { }\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getX(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getY(_value: any, _location: number, baseValue?: any): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemCoordinateY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionX(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract getDataItemPositionY(_dataItem: DataItem<IXYSeriesDataItem>, _field: string, _cellLocation?: number, _axisLocation?: number): number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t}\n\n\tpublic _calculateTotals() {\n\t}\n\n\tprotected _updateAxisRanges() {\n\t\tthis._bullets = {};\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\n\t\t$array.each(this._seriesAxisRanges, (axisRange) => {\n\t\t\tthis._prepareDataItem(axisRange);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract baseValue(): any;\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.get(\"fixAxisSize\")) {\n\t\t\tthis.ghostLabel.set(\"visible\", true);\n\t\t}\n\t\telse {\n\t\t\tthis.ghostLabel.set(\"visible\", false);\n\t\t}\n\n\t\tif (this.isDirty(\"start\") || this.isDirty(\"end\")) {\n\t\t\tconst chart = this.chart;\n\t\t\tif(chart){\n\t\t\t\tchart._updateCursor();\n\t\t\t}\n\n\t\t\tlet start = this.get(\"start\", 0);\n\t\t\tlet end = this.get(\"end\", 1);\n\n\t\t\tlet maxDeviation = this.get(\"maxDeviation\", 0.5) * Math.min(1, (end - start));\n\n\t\t\tif (start < -maxDeviation) {\n\t\t\t\tlet delta = start + maxDeviation;\n\t\t\t\tstart = -maxDeviation;\n\t\t\t\tthis.setRaw(\"start\", start);\n\t\t\t\tif (this.isDirty(\"end\")) {\n\t\t\t\t\tthis.setRaw(\"end\", end - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (end > 1 + maxDeviation) {\n\t\t\t\tlet delta = end - 1 - maxDeviation;\n\t\t\t\tend = 1 + maxDeviation;\n\t\t\t\tthis.setRaw(\"end\", end);\n\n\t\t\t\tif (this.isDirty(\"start\")) {\n\t\t\t\t\tthis.setRaw(\"start\", start - delta);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\trenderer._start = this.get(\"start\")!;\n\t\trenderer._end = this.get(\"end\")!;\n\t\trenderer._inversed = renderer.get(\"inversed\", false);\n\t\trenderer._axisLength = renderer.axisLength() / (renderer._end - renderer._start);\n\t\trenderer._updateLC();\n\n\t\tif (this.isDirty(\"tooltip\")) {\n\t\t\tconst tooltip = this.get(\"tooltip\");\n\t\t\tif (tooltip) {\n\t\t\t\tconst rendererTags = renderer.get(\"themeTags\");\n\t\t\t\ttooltip.addTag(\"axis\");\n\t\t\t\ttooltip.addTag(this.className.toLowerCase());\n\t\t\t\ttooltip._applyThemes();\n\n\t\t\t\tif (rendererTags) {\n\t\t\t\t\ttooltip.set(\"themeTags\", $utils.mergeTags(tooltip.get(\"themeTags\"), rendererTags));\n\t\t\t\t\ttooltip.label._applyThemes();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateTooltipBounds() {\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tif (tooltip) {\n\t\t\tthis.get(\"renderer\").updateTooltipBounds(tooltip);\n\t\t}\n\t}\n\n\tpublic _updateBounds() {\n\t\tsuper._updateBounds();\n\t\tthis._updateTooltipBounds();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processChart(chart: XYChart) {\n\t\tthis.chart = chart;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\trenderer.chart = chart;\n\t\tchart.gridContainer.children.push(this.gridContainer);\n\t\tchart.topGridContainer.children.push(this.topGridContainer);\n\n\t\tchart.axisHeadersContainer.children.push(this.axisHeader);\n\n\t\tthis.on(\"start\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\t\tthis.on(\"end\", () => {\n\t\t\tchart._handleAxisSelection(this);\n\t\t});\n\n\t\tchart.plotContainer.onPrivate(\"width\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\t\tchart.plotContainer.onPrivate(\"height\", () => {\n\t\t\tthis.markDirtySize();\n\t\t});\n\n\t\tchart.processAxis(this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic hideDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, true);\n\t\treturn super.hideDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic showDataItem(dataItem: DataItem<IAxisDataItem>): Promise<void> {\n\t\tthis._toggleFHDataItem(dataItem, false);\n\t\treturn super.showDataItem(dataItem);\n\t}\n\n\tpublic _toggleFHDataItem(dataItem: DataItem<IAxisDataItem>, forceHidden: boolean) {\n\t\tconst fh = \"forceHidden\";\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tlabel.set(fh, forceHidden);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.set(fh, forceHidden);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.set(fh, forceHidden);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.set(fh, forceHidden);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.set(fh, forceHidden);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _toggleDataItem(dataItem: DataItem<IAxisDataItem>, visible: boolean) {\n\t\tconst label = dataItem.get(\"label\");\n\t\tconst v = \"visible\";\n\t\tif (label) {\n\t\t\tlabel.setPrivate(v, visible);\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\tgrid.setPrivate(v, visible);\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\ttick.setPrivate(v, visible);\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\taxisFill.setPrivate(v, visible);\n\t\t}\n\n\t\tconst bullet = dataItem.get(\"bullet\");\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setPrivate(v, visible);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract basePosition(): number;\n\n\tpublic _createAssets(dataItem: DataItem<this[\"_dataItemSettings\"]>, tags: Array<string>) {\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif (!dataItem.get(\"label\")) {\n\t\t\trenderer.makeLabel(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"grid\")) {\n\t\t\trenderer.makeGrid(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"tick\")) {\n\t\t\trenderer.makeTick(dataItem, tags);\n\t\t}\n\n\t\tif (!dataItem.get(\"axisFill\")) {\n\t\t\trenderer.makeAxisFill(dataItem, tags);\n\t\t}\n\n\t\tthis._processBullet(dataItem);\n\t}\n\n\tprotected _processBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet bullet = dataItem.get(\"bullet\");\n\t\tlet axisBullet = this.get(\"bullet\");\n\n\t\tif (!bullet && axisBullet && !dataItem.get(\"isRange\")) {\n\t\t\tbullet = axisBullet(this._root, this, dataItem);\n\t\t}\n\n\t\tif (bullet) {\n\t\t\tbullet.axis = this;\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\tif (sprite) {\n\t\t\t\tsprite._setDataItem(dataItem);\n\t\t\t\tdataItem.setRaw(\"bullet\", bullet);\n\t\t\t\tif (!sprite.parent) {\n\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart._updateChartLayout();\n\t\t\tchart.axisHeadersContainer.markDirtySize();\n\t\t}\n\n\t\tthis.get(\"renderer\")._updatePositions();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\trenderer.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t\tconst tick = dataItem.get(\"tick\");\n\t\tif (tick) {\n\t\t\trenderer.ticks.removeValue(tick);\n\t\t\ttick.dispose();\n\t\t}\n\t\tconst grid = dataItem.get(\"grid\");\n\t\tif (grid) {\n\t\t\trenderer.grid.removeValue(grid);\n\t\t\tgrid.dispose();\n\t\t}\n\t\tconst axisFill = dataItem.get(\"axisFill\");\n\t\tif (axisFill) {\n\t\t\trenderer.axisFills.removeValue(axisFill);\n\t\t\taxisFill.dispose();\n\t\t}\n\t\tconst bullet = dataItem.get(\"bullet\");\n\n\t\tif (bullet) {\n\t\t\tbullet.dispose();\n\t\t}\n\t}\n\n\tprotected _updateGhost() {\n\t\tthis.setPrivate(\"cellWidth\", this.getCellWidthPosition() * this.get(\"renderer\").axisLength());\n\t\tconst ghostLabel = this.ghostLabel;\n\t\tif (!ghostLabel.isHidden()) {\n\t\t\tconst bounds = ghostLabel.localBounds();\n\t\t\tconst gWidth = Math.ceil(bounds.right - bounds.left);\n\t\t\tlet text = ghostLabel.get(\"text\");\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label && !label.isHidden()) {\n\t\t\t\t\tconst bounds = label.localBounds();\n\t\t\t\t\tconst w = Math.ceil(bounds.right - bounds.left);\n\n\t\t\t\t\tif (w > gWidth) {\t\t\t\t\t\t\n\t\t\t\t\t\ttext = label.text._getText();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tghostLabel.set(\"text\", text);\n\t\t}\n\t\tlet start = this.get(\"start\", 0);\n\t\tlet end = this.get(\"end\", 1);\n\t\tthis.get(\"renderer\").updateLabel(ghostLabel, start + (end - start) * 0.5);\n\t}\n\n\tpublic _handleCursorPosition(position: number, snapToSeries?: Array<XYSeries>) {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tposition = renderer.toAxisPosition(position);\n\n\t\tthis._cursorPosition = position;\n\t\tthis._snapToSeries = snapToSeries;\n\n\t\tthis.updateTooltip();\n\t}\n\n\t/**\n\t * Can be called when axis zoom changes and you need to update tooltip\n\t * position.\n\t */\n\tpublic updateTooltip() {\n\t\tconst snapToSeries = this._snapToSeries;\n\t\tlet position = this._cursorPosition;\n\t\tconst tooltip = this.get(\"tooltip\")!;\n\t\tconst renderer = this.get(\"renderer\");\n\n\t\tif ($type.isNumber(position)) {\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tconst dataItem = this.getSeriesItem(series, position!, this.get(\"tooltipLocation\"));\n\t\t\t\t\tseries.setRaw(\"tooltipDataItem\", dataItem);\n\t\t\t\t\tif (snapToSeries && snapToSeries.indexOf(series) != -1) {\n\t\t\t\t\t\tseries.updateLegendMarker(dataItem);\n\t\t\t\t\t\tseries.updateLegendValue(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tseries.showDataItemTooltip(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\n\t\t\tif (tooltip) {\n\t\t\t\trenderer.updateTooltipBounds(tooltip);\n\n\t\t\t\tif (this.get(\"snapTooltip\")) {\n\t\t\t\t\tposition = this.roundAxisPosition(position, this.get(\"tooltipLocation\", 0.5));\n\t\t\t\t}\n\t\t\t\tif (!$type.isNaN(position)) {\n\t\t\t\t\tthis.setPrivateRaw(\"tooltipPosition\", position);\n\t\t\t\t\tthis._updateTooltipText(tooltip, position);\n\t\t\t\t\trenderer.positionTooltip(tooltip, position);\n\n\t\t\t\t\tif (position < this.get(\"start\") || position > this.get(\"end\")) {\n\t\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip.show(0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\ttooltip.hide(0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position        Position\n\t * @param   adjustPosition  Adjust position\n\t * @return                  Tooltip text\n\t */\n\tpublic abstract getTooltipText(position: number, adjustPosition?: boolean): string | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, _location: number): number {\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorShow() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.show();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tlet tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.hide();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(_dataItem: DataItem<IXYSeriesDataItem>, _fields: Array<string>) {\n\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._sizeDirty = false;\n\t\tthis._rangesDirty = false;\n\t}\n\n\t/**\n\t * Converts pixel coordinate to a relative position on axis.\n\t *\n\t * @param   coordinate  Coordinate\n\t * @return              Relative position\n\t */\n\tpublic coordinateToPosition(coordinate: number): number {\n\t\tconst renderer = this.get(\"renderer\");\n\t\treturn renderer.toAxisPosition(coordinate / renderer.axisLength());\n\t}\n\n\t/**\n\t * Converts relative position of the plot area to relative position of the\n\t * axis with zoom taken into account.\n\t *\n\t * @param position Position\n\t * @return Relative position\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toAxisPosition(position);\n\t}\n\n\t/**\n\t * Converts relative position of the axis to a global position taking current\n\t * zoom into account (opposite to what `toAxisPosition` does).\n\t *\n\t * @since 5.4.2\n\t * @param position Position\n\t * @return Global position\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\treturn this.get(\"renderer\").toGlobalPosition(position);\n\t}\n\n\t/**\n\t * Adjusts position with inversed taken into account.\n\t *\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number): number {\n\t\treturn this.get(\"renderer\").fixPosition(position);\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic abstract getSeriesItem(series: XYSeries, position: number, location?: number): DataItem<IXYSeriesDataItem> | undefined\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(_dataItem: DataItem<IXYSeriesDataItem>, _nextItem: DataItem<IXYSeriesDataItem>, _autoGapCount: number, _fieldName: string): boolean {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): DataItem<this[\"_dataItemSettings\"]> {\n\t\treturn this.axisRanges.push(axisDataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _groupSeriesData(_series: XYSeries) { }\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn 0.05;\n\t}\n}\n","import { Entity, IEntitySettings, IEntityPrivate } from \"../../../core/util/Entity\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Axis } from \"./Axis\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport * as $object from \"../../../core/util/Object\";\n\nexport interface IAxisBulletSettings extends IEntitySettings {\n\n\t/**\n\t * Relative location of the bullet within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * A visual element of the bullet.\n\t */\n\tsprite: Sprite;\n\n\t/**\n\t * Indicates if the bullet should be stacked on top of another bullet if it's\n\t * on the same position.\n\t * \n\t * Will work on horizontal or vertical axes only.\n\t *\n\t * @since 5.2.28\n\t * @default false\n\t */\n\tstacked?: boolean;\n\n}\n\nexport interface IAxisBulletPrivate extends IEntityPrivate {\n}\n\n/**\n * Draws a bullet on an axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_bullets} for more info\n */\nexport class AxisBullet extends Entity {\n\n\t/**\n\t * Target axis object.\n\t */\n\tpublic axis: Axis<AxisRenderer> | undefined;\n\n\tdeclare public _settings: IAxisBulletSettings;\n\tdeclare public _privateSettings: IAxisBulletPrivate;\n\n\tpublic static className: string = \"AxisBullet\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([AxisBullet.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tconst sprite = this.get(\"sprite\");\n\n\t\tif (this.isDirty(\"sprite\")) {\n\t\t\tif (sprite) {\n\t\t\t\tsprite.setAll({ position: \"absolute\", role: \"figure\" });\n\t\t\t\tthis._disposers.push(sprite);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"location\")) {\n\t\t\tconst dataItem = sprite.dataItem;\n\t\t\tif (this.axis && sprite && dataItem) {\n\t\t\t\tthis.axis._prepareDataItem(dataItem as any)\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tconst axis = this.axis;\n\t\tif (axis) {\n\t\t\t$object.each(axis._bullets, (key, bullet) => {\n\t\t\t\tif (bullet.uid == this.uid) {\n\t\t\t\t\tdelete axis._bullets[key];\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n","import { Label, ILabelSettings, ILabelPrivate } from \"../../../core/render/Label\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabel extends Label {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n\t_tickPoints: Array<IPoint>;\n}\n\n\nexport interface IAxisLabelSettings extends ILabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the label will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelPrivate extends ILabelPrivate {\n}\n\n/**\n * Draws an axis label.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n * @important\n */\nexport class AxisLabel extends Label implements IAxisLabel {\n\n\tdeclare public _settings: IAxisLabelSettings;\n\tdeclare public _privateSettings: IAxisLabelPrivate;\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisLabel\";\n\tpublic static classNames: Array<string> = Label.classNames.concat([AxisLabel.className]);\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","import type { Sprite, ISpritePointerEvent } from \"../../../core/render/Sprite\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../../core/render/Graphics\";\nimport type { Axis, IAxisDataItem } from \"./Axis\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { AxisTick } from \"./AxisTick\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { XYChart } from \"../XYChart\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IAxisRendererSettings extends IGraphicsSettings {\n\n\t/**\n\t * The minimum distance between grid lines in pixels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid_density} for more info\n\t */\n\tminGridDistance?: number;\n\n\t/**\n\t * Set to `true` to invert direction of the axis.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Inversed_axes} for more info\n\t */\n\tinversed?: boolean;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell starts.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellStartLocation?: number;\n\n\t/**\n\t * Indicates relative position where \"usable\" space of the cell ends.\n\t *\n\t * `0` - beginning, `1` - end, or anything in-between.\n\t *\n\t * @default 1\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Cell_start_end_locations} for more info\n\t */\n\tcellEndLocation?: number;\n\n\t/**\n\t * If set to `\"zoom\"` will enable axis zoom by panning it in the axis label\n\t * area.\n\t *\n\t * Works on [[AxisRendererX]] and [[AxisRendererY]] only.\n\t *\n\t * For a better result, set `maxDeviation` to `1` or so on the Axis.\n\t *\n\t * Will not work if `inside` is set to `true`.\n\t *\n\t * @since 5.0.7\n\t * @default \"none\"\n\t */\n\tpan?: \"none\" | \"zoom\"\n\n}\n\nexport interface IAxisRendererPrivate extends IGraphicsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tletter?: \"X\" | \"Y\";\n}\n\n/**\n * Base class for an axis renderer.\n *\n * Should not be used on its own.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n */\nexport abstract class AxisRenderer extends Graphics {\n\tpublic static className: string = \"AxisRenderer\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([AxisRenderer.className]);\n\n\t// save for quick access\n\tpublic _axisLength: number = 100;\n\tpublic _start: number = 0;\n\tpublic _end: number = 1;\n\tpublic _inversed: boolean = false;\n\n\tprotected _minSize: number = 0;\n\n\t/**\n\t * Chart the renderer is used in.\n\t */\n\tpublic chart: XYChart | undefined;\n\n\tprotected _lc = 1;\n\n\tprotected _ls = 0;\n\n\tprotected _thumbDownPoint?: IPoint;\n\n\tprotected _downStart?: number;\n\tprotected _downEnd?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeTick(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisTick {\n\t\tconst tick = this.ticks.make();\n\t\ttick._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"tick\", tick);\n\t\ttick.set(\"themeTags\", $utils.mergeTags(tick.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.push(tick);\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\t/**\n\t * A list of ticks in the axis.\n\t *\n\t * `ticks.template` can be used to configure ticks.\n\t *\n\t * @default new ListTemplate<AxisTick>\n\t */\n\tpublic readonly ticks: ListTemplate<AxisTick> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisTick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.ticks.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.ticks.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeGrid(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst grid = this.grid.make();\n\t\tgrid._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"grid\", grid);\n\t\tgrid.set(\"themeTags\", $utils.mergeTags(grid.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(grid);\n\t\tthis.grid.push(grid);\n\t\treturn grid;\n\t}\n\n\t/**\n\t * A list of grid elements in the axis.\n\t *\n\t * `grid.template` can be used to configure grid.\n\t *\n\t * @default new ListTemplate<Grid>\n\t */\n\tpublic readonly grid: ListTemplate<Grid> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Grid._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.grid.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.grid.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeAxisFill(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): Grid {\n\t\tconst axisFill = this.axisFills.make();\n\t\taxisFill._setDataItem(dataItem);\n\t\taxisFill.set(\"themeTags\", $utils.mergeTags(axisFill.get(\"themeTags\"), themeTags));\n\n\t\tthis.axis.gridContainer.children.push(axisFill);\n\t\tdataItem.setRaw(\"axisFill\", axisFill);\n\t\tthis.axisFills.push(axisFill);\n\t\treturn axisFill;\n\t}\n\n\t/**\n\t * A list of fills in the axis.\n\t *\n\t * `axisFills.template` can be used to configure axis fills.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly axisFills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.axisFills.template.get(\"themeTags\", [\"axis\", \"fill\"]), this.get(\"themeTags\", []))\n\t\t}, [this.axisFills.template])\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLabel(dataItem: DataItem<IAxisDataItem>, themeTags: Array<string>): AxisLabel {\n\n\t\tconst label = this.labels.make();\n\n\t\tlabel.set(\"themeTags\", $utils.mergeTags(label.get(\"themeTags\"), themeTags));\n\t\tthis.axis.labelsContainer.children.moveValue(label, 0);\n\n\t\tlabel._setDataItem(dataItem);\n\t\tdataItem.setRaw(\"label\", label);\n\t\tthis.labels.push(label);\n\t\treturn label;\n\t}\n\n\t/**\n\t * A list of labels in the axis.\n\t *\n\t * `labels.template` can be used to configure axis labels.\n\t *\n\t * @default new ListTemplate<AxisLabel>\n\t */\n\tpublic readonly labels: ListTemplate<AxisLabel> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => AxisLabel._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.labels.template.get(\"themeTags\", []), this.get(\"themeTags\", []))\n\t\t}, [this.labels.template])\n\t);\n\n\n\tdeclare public _settings: IAxisRendererSettings;\n\tdeclare public _privateSettings: IAxisRendererPrivate;\n\n\t/**\n\t * An [[Axis]] renderer is for.\n\t */\n\tpublic axis!: Axis<this>;\n\n\tpublic axisLength(): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic gridCount(): number {\n\t\treturn this.axisLength() / this.get(\"minGridDistance\", 50);\n\t}\n\n\tpublic _updatePositions() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateLabel(_label?: AxisLabel, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateGrid(_grid?: Grid, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateTick(_grid?: AxisTick, _position?: number, _endPosition?: number, _count?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateFill(_fill?: Graphics, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract updateBullet(_bullet?: AxisBullet, _position?: number, _endPosition?: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionToPoint(_position: number): IPoint;\n\n\n\tpublic readonly thumb?: Graphics;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"isMeasured\", false);\n\n\t\tconst thumb = this.thumb;\n\t\tif (thumb) {\n\t\t\tthis._disposers.push(thumb.events.on(\"pointerdown\", (event) => {\n\t\t\t\tthis._handleThumbDown(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointerup\", (event) => {\n\t\t\t\tthis._handleThumbUp(event);\n\t\t\t}));\n\n\t\t\tthis._disposers.push(thumb.events.on(\"globalpointermove\", (event) => {\n\t\t\t\tthis._handleThumbMove(event);\n\t\t\t}));\n\t\t}\n\t}\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\t\tif (this.isDirty(\"minGridDistance\")) {\n\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\tthis.axis.markDirtySize();\n\t\t\t})\n\t\t}\n\t}\n\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tif (this.isDirty(\"pan\")) {\n\t\t\tconst thumb = this.thumb;\n\t\t\tif (thumb) {\n\t\t\t\tconst labelsContainer = this.axis.labelsContainer;\n\t\t\t\tconst pan = this.get(\"pan\");\n\t\t\t\tif (pan == \"zoom\") {\n\t\t\t\t\tlabelsContainer.children.push(thumb);\n\t\t\t\t}\n\t\t\t\telse if (pan == \"none\") {\n\t\t\t\t\tlabelsContainer.children.removeValue(thumb);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleThumbDown(event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = this.toLocal(event.point);\n\t\tconst axis = this.axis;\n\t\tthis._downStart = axis.get(\"start\");\n\t\tthis._downEnd = axis.get(\"end\");\n\t}\n\n\tprotected _handleThumbUp(_event: ISpritePointerEvent) {\n\t\tthis._thumbDownPoint = undefined;\n\t}\n\n\tprotected _handleThumbMove(event: ISpritePointerEvent) {\n\t\tconst downPoint = this._thumbDownPoint;\n\t\tif (downPoint) {\n\t\t\tconst point = this.toLocal(event.point);\n\n\t\t\tconst downStart = this._downStart!;\n\t\t\tconst downEnd = this._downEnd!;\n\t\t\tconst extra = this._getPan(point, downPoint) * Math.min(1, (downEnd - downStart)) / 2;\n\t\t\tthis.axis.zoom(downStart - extra, downEnd + extra, 0);\n\t\t}\n\t}\n\n\tprotected _getPan(_point1: IPoint, _point2: IPoint): number {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract positionTooltip(_tooltip: Tooltip, _position: number): void;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(_tooltip: Tooltip) { }\n\n\tpublic _updateSize() {\n\t\tthis.markDirty()\n\t\tthis._clear = true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition = position * (end - start);\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start);\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\n\t}\n\n\tprotected toggleVisibility(sprite: Sprite, position: number, minPosition: number, maxPosition: number): void {\n\t\tlet axis = this.axis;\n\n\t\tconst start = axis.get(\"start\", 0);\n\t\tconst end = axis.get(\"end\", 1);\n\n\t\tlet updatedStart = start + (end - start) * (minPosition - 0.0001);\n\t\tlet updatedEnd = start + (end - start) * (maxPosition + 0.0001);\n\n\t\tif (position < updatedStart || position > updatedEnd) {\n\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t}\n\t\telse {\n\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\tprotected _positionTooltip(tooltip: Tooltip, point: IPoint) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tif (chart.inPlot(point)) {\n\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal(point));\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttooltip.hide();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic processAxis() { }\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\n\nexport interface IAxisRendererXSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererXPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render horizontal axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererX extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererX\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererX.className]);\n\n\tdeclare public _settings: IAxisRendererXSettings;\n\tdeclare public _privateSettings: IAxisRendererXPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { width: p100, isMeasured: false, themeTags: [\"axis\", \"x\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"x\"]);\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"X\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"height\", p100);\n\t\tgridTemplate.set(\"width\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, graphics.height());\n\t\t});\n\n\t\tthis.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"x\", -1000);\n\n\t\tconst opposite = \"opposite\"\n\t\tconst inside = \"inside\";\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\t\t\tconst chart = this.chart;\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.topAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.insertIndex(0, axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.bottomAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tthis.thumb.setPrivate(\"height\", axis.labelsContainer.height());\n\t}\n\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point2.x - point1.x) / this.width();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (!this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst w = parent.innerWidth();\n\t\t\tthis._lc = this.axisLength() / w;\n\t\t\tthis._ls = (axis.x() - parent.get(\"paddingLeft\", 0)) / w;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst x = axis.x() - $utils.relativeToValue(axis.get(\"centerX\", 0), axis.width()) - axis.parent!.get(\"paddingLeft\", 0);\n\t\taxis.gridContainer.set(\"x\", x);\n\t\taxis.topGridContainer.set(\"x\", x);\n\t\taxis.bulletsContainer.set(\"y\", this.y());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet width = axis.get(\"marginLeft\", 0);\n\n\t\t\tlet x = axis.x() - width;\n\n\t\t\tconst parent = axis.parent;\n\t\t\tif (parent) {\n\t\t\t\tx -= parent.get(\"paddingLeft\", 0);\n\t\t\t}\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\twidth = axis.axisHeader.width();\n\t\t\t\taxis.set(\"marginLeft\", width + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"width\", width);\n\t\t\t}\n\t\t\taxisHeader.setAll({ x: x, y: -1, height: plotContainer.height() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\taxis.set(\"width\", p100);\n\t\tconst verticalLayout = this._root.verticalLayout;\n\t\taxis.set(\"layout\", verticalLayout);\n\t\taxis.labelsContainer.set(\"width\", p100);\n\t\taxis.axisHeader.setAll({ layout: verticalLayout });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.width();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: this.positionToCoordinate(position), y: 0 };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"y\", p100);\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttick.set(\"y\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, length);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tif (opposite) {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t\tlabel.set(\"y\", p100);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlabel.set(\"y\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"y\", 0)\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"x\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"x\", this.positionToCoordinate(position));\n\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = -1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = 1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"y\", previousSprite.y() + previousSprite.height() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"y\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\t\t\t\tsprite.set(\"x\", this.positionToCoordinate(position));\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet x0 = this.positionToCoordinate(position);\n\t\t\tlet x1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, x0, x1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, x0: number, x1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t//display.drawRect(x0, 0, x1 - x0, this.axis!.gridContainer.height());\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst h = this.axis!.gridContainer.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x1 < x0) {\n\t\t\t\t[x1, x0] = [x0, x1];\n\t\t\t}\n\t\t\tif (x0 > w || x1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/*\n\t\t\tconst limit = 10000;\n\n\t\t\tx0 = Math.max(-limit, x0);\n\t\t\tx1 = Math.min(limit, x1);\n\t\t\t*/\n\n\t\t\tdisplay.moveTo(x0, 0);\n\t\t\tdisplay.lineTo(x1, 0);\n\t\t\tdisplay.lineTo(x1, h);\n\t\t\tdisplay.lineTo(x0, h);\n\t\t\tdisplay.lineTo(x0, 0);\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: this.positionToCoordinate(position), y: 0 })\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet x = global.x;\n\t\tlet y = 0;\n\t\tlet w = this.axisLength();\n\t\tlet h = num;\n\n\t\tlet pointerOrientation: \"up\" | \"down\" = \"up\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"down\";\n\t\t\t\ty = global.y - num;\n\t\t\t\th = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"up\";\n\t\t\t\ty = global.y;\n\t\t\t\th = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n}\n","import { AxisRenderer, IAxisRendererSettings, IAxisRendererPrivate } from \"./AxisRenderer\";\nimport { p100 } from \"../../../core/util/Percent\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { AxisLabel } from \"./AxisLabel\";\nimport type { AxisBullet } from \"./AxisBullet\";\nimport type { Grid } from \"./Grid\";\nimport type { AxisTick } from \"./AxisTick\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport type { Template } from \"../../../core/util/Template\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\n\nexport interface IAxisRendererYSettings extends IAxisRendererSettings {\n\n\t/**\n\t * If set to `true` the axis will be drawn on the opposite side of the plot\n\t * area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_position} for more info\n\t * @default false\n\t */\n\topposite?: boolean;\n\n\t/**\n\t * If set to `true`, all axis elements (ticks, labels) will be drawn inside\n\t * plot area.\n\t *\n\t * @default false\n\t */\n\tinside?: boolean;\n}\n\nexport interface IAxisRendererYPrivate extends IAxisRendererPrivate {\n}\n\n/**\n * Used to render vertical axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/#Axis_renderer} for more info\n * @important\n */\nexport class AxisRendererY extends AxisRenderer {\n\n\tpublic static className: string = \"AxisRendererY\";\n\tpublic static classNames: Array<string> = AxisRenderer.classNames.concat([AxisRendererY.className]);\n\n\tdeclare public _settings: IAxisRendererYSettings;\n\tdeclare public _privateSettings: IAxisRendererYPrivate;\n\n\tdeclare public readonly labelTemplate: Template<AxisLabel>;\n\n\tprotected _downY?: number;\n\n\tpublic thumb: Rectangle = Rectangle.new(this._root, { height: p100, isMeasured: false, themeTags: [\"axis\", \"y\", \"thumb\"] });\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"renderer\", \"y\"]);\n\t\tif (this._settings.opposite) {\n\t\t\tthis._settings.themeTags.push(\"opposite\");\n\t\t}\n\n\t\tsuper._afterNew();\n\t\tthis.setPrivateRaw(\"letter\", \"Y\");\n\n\t\tconst gridTemplate = this.grid.template;\n\t\tgridTemplate.set(\"width\", p100);\n\t\tgridTemplate.set(\"height\", 0);\n\t\tgridTemplate.set(\"draw\", (display, graphics) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(graphics.width(), 0);\n\t\t});\n\n\t\tthis.set(\"draw\", (display, renderer) => {\n\t\t\tdisplay.moveTo(0, 0);\n\t\t\tdisplay.lineTo(0, renderer.height());\n\t\t});\n\t}\n\n\tprotected _getPan(point1: IPoint, point2: IPoint): number {\n\t\treturn (point1.y - point2.y) / this.height();\n\t}\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\n\t\tconst axis = this.axis;\n\t\taxis.ghostLabel.setPrivate(\"visible\", !this.get(\"inside\"));\n\t\taxis.ghostLabel.set(\"y\", -1000);\n\n\t\tconst thumb = this.thumb;\n\t\tconst opposite = \"opposite\";\n\t\tconst inside = \"inside\";\n\t\tconst chart = this.chart;\n\n\t\tif (this.isDirty(opposite) || this.isDirty(inside)) {\n\n\t\t\tconst axisChildren = axis.children;\n\n\t\t\tif (this.get(inside)) {\n\t\t\t\taxis.addTag(inside);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxis.removeTag(inside);\n\t\t\t}\n\n\t\t\tif (chart) {\n\t\t\t\tif (this.get(opposite)) {\n\t\t\t\t\tconst children = chart.rightAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis, 0);\n\t\t\t\t\t}\n\t\t\t\t\taxis.addTag(opposite);\n\t\t\t\t\taxisChildren.moveValue(this, 0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst children = chart.leftAxesContainer.children;\n\t\t\t\t\tif (children.indexOf(axis) == -1) {\n\t\t\t\t\t\tchildren.moveValue(axis);\n\t\t\t\t\t}\n\t\t\t\t\taxis.removeTag(opposite);\n\n\t\t\t\t\taxisChildren.moveValue(this);\n\t\t\t\t}\n\n\t\t\t\taxis.ghostLabel._applyThemes();\n\t\t\t\tthis.labels.each((label) => {\n\t\t\t\t\tlabel._applyThemes();\n\t\t\t\t})\n\t\t\t\tthis.root._markDirtyRedraw();\n\t\t\t}\n\t\t\taxis.markDirtySize();\n\t\t}\n\n\t\tconst w = axis.labelsContainer.width();\n\n\t\tif (chart) {\n\t\t\tif (this.get(opposite)) {\n\t\t\t\tthumb.set(\"centerX\", 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthumb.set(\"centerX\", w);\n\t\t\t}\n\t\t}\n\n\t\tthumb.setPrivate(\"width\", w);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processAxis() {\n\t\tsuper.processAxis();\n\t\tconst axis = this.axis;\n\t\tif (axis.get(\"height\") == null) {\n\t\t\taxis.set(\"height\", p100);\n\t\t}\n\t\tconst horizontalLayout = this._root.horizontalLayout;\n\t\taxis.set(\"layout\", horizontalLayout);\n\t\taxis.labelsContainer.set(\"height\", p100);\n\t\taxis.axisHeader.set(\"layout\", horizontalLayout);\n\t}\n\n\tpublic _updatePositions() {\n\t\tconst axis = this.axis;\n\t\tconst y = axis.y() - $utils.relativeToValue(axis.get(\"centerY\", 0), axis.height());\n\t\taxis.gridContainer.set(\"y\", y);\n\t\taxis.topGridContainer.set(\"y\", y);\n\t\taxis.bulletsContainer.set(\"x\", this.x());\n\n\t\tconst chart = axis.chart;\n\t\tif (chart) {\n\t\t\tconst plotContainer = chart.plotContainer;\n\t\t\tconst axisHeader = axis.axisHeader;\n\t\t\tlet height = axis.get(\"marginTop\", 0);\n\n\t\t\tif (axisHeader.children.length > 0) {\n\t\t\t\theight = axis.axisHeader.height();\n\t\t\t\taxis.set(\"marginTop\", height + 1);\n\t\t\t}\n\t\t\telse {\n\t\t\t\taxisHeader.set(\"height\", height);\n\t\t\t}\n\t\t\taxisHeader.setAll({ y: axis.y() - height, x: -1, width: plotContainer.width() + 2 });\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic axisLength(): number {\n\t\treturn this.axis.innerHeight();\n\t}\n\n\t/**\n\t * Converts axis relative position to actual coordinate in pixels.\n\t *\n\t * @param   position  Position\n\t * @return            Point\n\t */\n\tpublic positionToPoint(position: number): IPoint {\n\t\treturn { x: 0, y: this.positionToCoordinate(position) };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLabel(label?: AxisLabel, position?: number, endPosition?: number, count?: number) {\n\t\tif (label) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = label.get(\"multiLocation\", location)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = label.get(\"location\", location)\n\t\t\t}\n\n\t\t\tconst opposite = this.get(\"opposite\");\n\t\t\tconst inside = label.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (opposite) {\n\t\t\t\tlabel.set(\"x\", 0);\n\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (inside) {\n\t\t\t\t\tlabel.set(\"x\", 0);\n\t\t\t\t\tlabel.set(\"position\", \"absolute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel.set(\"x\", undefined);\n\t\t\t\t\tlabel.set(\"position\", \"relative\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tlabel.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(label, position, label.get(\"minPosition\", 0), label.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateGrid(grid?: Grid, position?: number, endPosition?: number) {\n\t\tif (grid) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = grid.get(\"location\", 0.5);\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\tgrid.set(\"y\", this.positionToCoordinate(position));\n\t\t\tthis.toggleVisibility(grid, position, 0, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTick(tick?: AxisTick, position?: number, endPosition?: number, count?: number) {\n\t\tif (tick) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\n\t\t\tlet location = 0.5;\n\t\t\tif ($type.isNumber(count) && count > 1) {\n\t\t\t\tlocation = tick.get(\"multiLocation\", location);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlocation = tick.get(\"location\", location);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t}\n\n\t\t\ttick.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\tlet length = tick.get(\"length\", 0);\n\t\t\tconst inside = tick.get(\"inside\", this.get(\"inside\", false));\n\n\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\ttick.set(\"x\", 0);\n\t\t\t\tif (inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!inside) {\n\t\t\t\t\tlength *= -1\n\t\t\t\t}\n\t\t\t}\n\t\t\ttick.set(\"draw\", (display) => {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(length, 0);\n\t\t\t})\n\n\t\t\tthis.toggleVisibility(tick, position, tick.get(\"minPosition\", 0), tick.get(\"maxPosition\", 1));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateBullet(bullet?: AxisBullet, position?: number, endPosition?: number) {\n\t\tif (bullet) {\n\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tif (sprite) {\n\n\t\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\t\tposition = 0;\n\t\t\t\t}\n\n\t\t\t\tlet location = bullet.get(\"location\", 0.5);\n\t\t\t\tif ($type.isNumber(endPosition) && endPosition != position) {\n\t\t\t\t\tposition = position + (endPosition - position) * location;\n\t\t\t\t}\n\n\n\t\t\t\tlet bulletPosition = this.axis.roundAxisPosition(position, location);\n\t\t\t\tlet previousBullet = this.axis._bullets[bulletPosition];\n\t\t\t\tlet d = 1;\n\t\t\t\tif (this.get(\"opposite\")) {\n\t\t\t\t\td = -1;\n\t\t\t\t}\n\n\t\t\t\tif (bullet.get(\"stacked\")) {\n\t\t\t\t\tif (previousBullet) {\n\t\t\t\t\t\tlet previousSprite = previousBullet.get(\"sprite\");\n\t\t\t\t\t\tif (previousSprite) {\n\t\t\t\t\t\t\tsprite.set(\"x\", previousSprite.x() + previousSprite.width() * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsprite.set(\"x\", 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.axis._bullets[bulletPosition] = bullet;\n\n\n\t\t\t\tsprite.set(\"y\", this.positionToCoordinate(position));\n\n\t\t\t\tthis.toggleVisibility(sprite, position, 0, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateFill(fill?: Graphics, position?: number, endPosition?: number) {\n\t\tif (fill) {\n\t\t\tif (!$type.isNumber(position)) {\n\t\t\t\tposition = 0;\n\t\t\t}\n\t\t\tif (!$type.isNumber(endPosition)) {\n\t\t\t\tendPosition = 1;\n\t\t\t}\n\n\t\t\tlet y0 = this.positionToCoordinate(position);\n\t\t\tlet y1 = this.positionToCoordinate(endPosition);\n\n\t\t\tthis.fillDrawMethod(fill, y0, y1);\n\t\t}\n\t}\n\n\tprotected fillDrawMethod(fill: Graphics, y0: number, y1: number) {\n\t\tfill.set(\"draw\", (display) => {\n\t\t\t// using for holes, so can not be rectangle\n\t\t\tconst w = this.axis!.gridContainer.width();\n\t\t\tconst h = this.height();\n\n\t\t\tif (y1 < y0) {\n\t\t\t\t[y1, y0] = [y0, y1];\n\t\t\t}\n\n\t\t\tif (y0 > h || y1 < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//y0 = Math.max(0, y0);\n\t\t\t//y1 = Math.min(h, y1);\n\n\t\t\tdisplay.moveTo(0, y0);\n\t\t\tdisplay.lineTo(w, y0);\n\t\t\tdisplay.lineTo(w, y1);\n\t\t\tdisplay.lineTo(0, y1);\n\t\t\tdisplay.lineTo(0, y0);\n\t\t})\n\t}\n\n\t/**\n\t * Converts relative position (0-1) on axis to a pixel coordinate.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinate (px)\n\t */\n\tpublic positionToCoordinate(position: number): number {\n\t\tif (!this._inversed) {\n\t\t\treturn (this._end - position) * this._axisLength;\n\t\t}\n\t\telse {\n\t\t\treturn (position - this._start) * this._axisLength;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic positionTooltip(tooltip: Tooltip, position: number) {\n\t\tthis._positionTooltip(tooltip, { x: 0, y: this.positionToCoordinate(position) });\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateTooltipBounds(tooltip: Tooltip) {\n\t\tconst inside = this.get(\"inside\");\n\t\tconst num = 100000;\n\n\t\tlet global = this._display.toGlobal({ x: 0, y: 0 });\n\t\tlet y = global.y;\n\t\tlet x = 0;\n\t\tlet h = this.axisLength();\n\t\tlet w = num;\n\n\t\tlet pointerOrientation: \"left\" | \"right\" = \"right\";\n\n\t\tif (this.get(\"opposite\")) {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (inside) {\n\t\t\t\tpointerOrientation = \"left\";\n\t\t\t\tx = global.x;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpointerOrientation = \"right\";\n\t\t\t\tx = global.x - num;\n\t\t\t\tw = num;\n\t\t\t}\n\t\t}\n\n\t\tconst bounds = { left: x, right: x + w, top: y, bottom: y + h };\n\t\tconst oldBounds = tooltip.get(\"bounds\");\n\n\t\tif (!$utils.sameBounds(bounds, oldBounds)) {\n\t\t\ttooltip.set(\"bounds\", bounds);\n\t\t\ttooltip.set(\"pointerOrientation\", pointerOrientation);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _updateLC() {\n\t\tconst axis = this.axis;\n\t\tconst parent = axis.parent;\n\t\tif (parent) {\n\t\t\tconst h = parent.innerHeight();\n\t\t\tthis._lc = this.axisLength() / h;\n\t\t\tthis._ls = axis.y() / h;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toAxisPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tposition -= this._ls;\n\n\t\tposition = position * (end - start) / this._lc;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = start + position;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic toGlobalPosition(position: number): number {\n\t\tconst start = this._start || 0;\n\t\tconst end = this._end || 1;\n\n\t\tif (this.get(\"inversed\")) {\n\t\t\tposition = position - start;\n\t\t}\n\t\telse {\n\t\t\tposition = end - position;\n\t\t}\n\n\t\tposition = position / (end - start) * this._lc\n\n\t\tposition += this._ls;\n\n\t\treturn position;\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic fixPosition(position: number) {\n\t\tif (!this.get(\"inversed\")) {\n\t\t\treturn 1 - position;\n\t\t}\n\t\treturn position;\n\t}\n\n}\n","import type { IPoint } from \"../../../core/util/IPoint\";\n\nimport { Tick, ITickSettings, ITickPrivate } from \"../../../core/render/Tick\";\n\n\nexport interface IAxisTickSettings extends ITickSettings {\n\n\t/**\n\t * Relative location of the tick within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the tick within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Multi_location} for more info\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * If set to `true` the tick will be shown inside plot area.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels_ticks_inside_plot_area} for more info\n\t * @default false\n\t */\n\tinside?: boolean | undefined;\n\n\t/**\n\t * The minimum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that tick will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the tick can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that tick will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Start_end_labels_and_ticks} for more info\n\t * @default 1\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisTickPrivate extends ITickPrivate {\n}\n\n/**\n * Draws an axis tick.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Ticks} for more info\n * @important\n */\nexport class AxisTick extends Tick {\n\n\tdeclare public _settings: IAxisTickSettings;\n\tdeclare public _privateSettings: IAxisTickPrivate;\n\n\tprotected _tickPoints: Array<IPoint> = [];\n\n\tpublic static className: string = \"AxisTick\";\n\tpublic static classNames: Array<string> = Tick.classNames.concat([AxisTick.className]);\n}\n","import { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport type { XYSeries, IXYSeriesDataItem } from \"../series/XYSeries\";\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IMinMaxStep, IValueAxisEvents } from \"./ValueAxis\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $order from \"../../../core/util/Order\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $time from \"../../../core/util/Time\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport type { TimeUnit } from \"../../../core/util/Time\";\n\nexport interface IDateAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `startLocation` is not supported by [[GaplessDateAxis]].\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * IMPORTANT: `endLocation` is not supported by [[GaplessDateAxis]].\n\t * \n\t * @default 1\n\t */\n\tendLocation?: number;\n\n\t/**\n\t * Should axis group data items togeter dynamically?\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupData?: boolean;\n\n\t/**\n\t * Maximum number of data items in the view before data grouping kicks in.\n\t *\n\t * @default 500\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupCount?: number;\n\n\t/**\n\t * Force data item grouping to specific interval.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to group data items into.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tgroupIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t */\n\ttooltipDateFormat?: string | Intl.DateTimeFormatOptions;\n\n\t/**\n\t * Time unit-specific formats to use for axis tooltip.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipDateFormats?: { [index: string]: string | Intl.DateTimeFormatOptions };\n\n\t/**\n\t * A value which indicates relative position within axis cell to get timestamp\n\t * for the tooltip from.\n\t *\n\t * Values are from `-1` to `1`.\n\t *\n\t * If not set, it will use `tooltipLocation` value, if `tooltipLocation`` is\n\t * not set, it will use -0.5.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Axis_tooltip} for more info\n\t * @since 5.1.4\n\t */\n\ttooltipIntervalOffset?: number;\n}\n\nexport interface IDateAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDateAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * Current group interval.\n\t */\n\tgroupInterval?: ITimeInterval;\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * Current grid interval.\n\t */\n\tgridInterval: ITimeInterval;\n}\n\nexport interface IDateAxisEvents extends IValueAxisEvents {\n\n\t/**\n\t * Kicks in when data grouping is on, and current group interval changes, e.g. via zooming the chart.\n\t *\n\t * @since 5.2.43\n\t */\n\tgroupintervalchanged: {}\n\n}\n\n/**\n * Creates a date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/} for more info\n * @important\n */\nexport class DateAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DateAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DateAxis.className]);\n\n\tdeclare public _settings: IDateAxisSettings<R>;\n\tdeclare public _privateSettings: IDateAxisPrivate;\n\tdeclare public _dataItemSettings: IDateAxisDataItem;\n\tdeclare public _events: IDateAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _seriesDataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\tprotected _baseDuration: number = 1;\n\n\tprotected _intervalMax: { [index: string]: number } = {};\n\tprotected _intervalMin: { [index: string]: number } = {};\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\tthis.on(\"baseInterval\", () => {\n\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t})\n\t}\n\n\tprotected _setBaseInterval(interval: ITimeInterval) {\n\t\tthis.setPrivateRaw(\"baseInterval\", interval);\n\t\tthis._baseDuration = $time.getIntervalDuration(interval);\n\t}\n\n\tprotected _fixZoomFactor() {\n\t\tconst maxZoomFactor = this.get(\"maxZoomFactor\");\n\t\tif (maxZoomFactor != null && maxZoomFactor != Infinity) {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", maxZoomFactor);\n\t\t}\n\t\telse {\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.round((this.getPrivate(\"max\", 0) - this.getPrivate(\"min\", 0)) / this.baseMainDuration()));\n\t\t}\n\t}\n\n\tprotected _groupData() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif (($type.isNumber(min) && $type.isNumber(max))) {\n\n\t\t\tthis._fixZoomFactor();\n\n\t\t\tconst groupInterval = this.getPrivate(\"groupInterval\")!;\n\t\t\tif (groupInterval) {\n\t\t\t\tthis._setBaseInterval(groupInterval);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._setBaseInterval(this.get(\"baseInterval\"));\n\t\t\t}\n\n\n\t\t\tif (this.isDirty(\"groupInterval\")) {\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\")!;\n\t\t\t\tif (groupInterval) {\n\t\t\t\t\tthis.setRaw(\"groupIntervals\", [groupInterval]);\n\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isDirty(\"groupData\")) {\n\t\t\t\tif (!this._dataGrouped) {\n\t\t\t\t\tif (this.get(\"groupData\")) {\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tthis._groupSeriesData(series);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._handleRangeChange();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\t\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\tseries.setDataSet(mainDataSetId);\n\t\t\t\t\t\t\tseries.resetGrouping();\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tthis._setBaseInterval(baseInterval);\n\t\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", undefined);\n\t\t\t\t\t\tthis.markDirtyExtremes();\n\t\t\t\t\t}\n\t\t\t\t\tthis._dataGrouped = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _groupSeriesData(series: XYSeries) {\n\t\tif (this.get(\"groupData\") && !series.get(\"groupDataDisabled\")) {\n\n\t\t\tthis._dataGrouped = true; // helps to avoid double grouping\n\n\t\t\tthis._seriesDataGrouped = true;\n\n\t\t\t// make array of intervals which will be used;\n\t\t\tlet intervals: ITimeInterval[] = [];\n\t\t\tlet baseDuration = this.baseMainDuration();\n\n\t\t\tlet groupIntervals = this.get(\"groupIntervals\")!;\n\t\t\tif (groupIntervals) { }\n\t\t\t$array.each(groupIntervals, (interval) => {\n\t\t\t\tlet intervalDuration = $time.getIntervalDuration(interval);\n\t\t\t\tif (intervalDuration > baseDuration) {\n\t\t\t\t\tintervals.push(interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tseries._dataSets = {};\n\n\t\t\tconst key = this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!;\n\t\t\tlet fields: Array<string>;\n\n\t\t\tconst baseAxis = series.get(\"baseAxis\");\n\n\t\t\tif (series.get(\"xAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueYFields;\n\t\t\t}\n\t\t\telse if (series.get(\"yAxis\") === baseAxis) {\n\t\t\t\tfields = series._valueXFields;\n\t\t\t}\n\n\t\t\tlet dataItems = series._mainDataItems;\n\t\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\n\n\t\t\tseries._dataSets[mainDataSetId] = dataItems;\n\n\t\t\tconst groupCallback = series.get(\"groupDataCallback\");\n\t\t\tlet groupOriginals = series.get(\"groupDataWithOriginals\", false);\n\t\t\tif (groupCallback) {\n\t\t\t\tgroupOriginals = true;\n\t\t\t}\n\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\t$array.each(intervals, (interval) => {\n\n\t\t\t\tlet previousTime = -Infinity;\n\t\t\t\tlet dataSetId = interval.timeUnit + interval.count;\n\t\t\t\tseries._dataSets[dataSetId] = [];\n\n\t\t\t\tlet newDataItem: DataItem<IXYSeriesDataItem>;\n\n\t\t\t\tlet sum: { [index: string]: number } = {};\n\t\t\t\tlet count: { [index: string]: number } = {};\n\n\t\t\t\tlet groupFieldValues: { [index: string]: string } = {};\n\t\t\t\tlet workingFields: { [index: string]: string } = {};\n\n\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\tgroupFieldValues[field] = series.get((field + \"Grouped\") as any);\n\t\t\t\t\tworkingFields[field] = field + \"Working\";\n\t\t\t\t})\n\n\t\t\t\tlet intervalDuration = $time.getDuration(interval.timeUnit);\n\n\t\t\t\tlet firstItem = dataItems[0];\n\t\t\t\tlet firstDate: Date;\n\t\t\t\tif (firstItem) {\n\t\t\t\t\tfirstDate = new Date(dataItems[0].get(key as any));\n\t\t\t\t}\n\n\t\t\t\tlet prevNewDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t$array.each(dataItems, (dataItem) => {\n\t\t\t\t\tlet time = dataItem.get(key as any);\n\t\t\t\t\tlet roundedTime = $time.round(new Date(time), interval.timeUnit, interval.count, firstDay, utc, firstDate, timezone).getTime();\n\t\t\t\t\tlet dataContext: any;\n\n\t\t\t\t\tif (previousTime < roundedTime - intervalDuration / 24) {\n\t\t\t\t\t\tdataContext = $object.copy(dataItem.dataContext);\n\n\t\t\t\t\t\tnewDataItem = new DataItem(series, dataContext, series._makeDataItem(dataContext));\n\t\t\t\t\t\tnewDataItem.setRaw(key as any, roundedTime);\n\n\t\t\t\t\t\tseries._dataSets[dataSetId].push(newDataItem);\n\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\t\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, value);\n\t\t\t\t\t\t\t\tcount[field] = 1;\n\t\t\t\t\t\t\t\tsum[field] = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsum[field] = 0;\n\t\t\t\t\t\t\t\tcount[field] = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.set(\"originals\", [dataItem]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tprevNewDataItem = newDataItem;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$array.each(fields, (field) => {\n\t\t\t\t\t\t\tlet groupKey = groupFieldValues[field];\n\t\t\t\t\t\t\tlet value = dataItem.get(field as any);\n\n\t\t\t\t\t\t\tif (value != null) {\n\n\t\t\t\t\t\t\t\tlet currentValue = newDataItem.get(field as any);\n\n\t\t\t\t\t\t\t\tswitch (groupKey) {\n\t\t\t\t\t\t\t\t\tcase \"close\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"sum\":\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, currentValue + value);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"open\":\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"low\":\n\t\t\t\t\t\t\t\t\t\tif (value < currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"high\":\n\t\t\t\t\t\t\t\t\t\tif (value > currentValue) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"average\":\n\t\t\t\t\t\t\t\t\t\tcount[field]++;\n\t\t\t\t\t\t\t\t\t\tsum[field] += value;\n\t\t\t\t\t\t\t\t\t\tlet average = sum[field] / count[field];\n\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, average);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\tcase \"extreme\":\n\t\t\t\t\t\t\t\t\t\tif (Math.abs(value) > Math.abs(currentValue)) {\n\t\t\t\t\t\t\t\t\t\t\tnewDataItem.setRaw(field as any, value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tnewDataItem.setRaw(workingFields[field] as any, newDataItem.get(field as any));\n\t\t\t\t\t\t\t\tlet dataContext: any = $object.copy(dataItem.dataContext);\n\t\t\t\t\t\t\t\tdataContext[key as any] = roundedTime;\n\t\t\t\t\t\t\t\tnewDataItem.dataContext = dataContext;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (groupOriginals) {\n\t\t\t\t\t\t\tnewDataItem.get(\"originals\")!.push(dataItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpreviousTime = roundedTime;\n\t\t\t\t})\n\n\t\t\t\tif (groupCallback && prevNewDataItem) {\n\t\t\t\t\tgroupCallback(prevNewDataItem, interval);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (series._dataSetId) {\n\t\t\t\tseries.setDataSet(series._dataSetId);\n\t\t\t}\n\t\t\tthis.markDirtySize();\n\t\t}\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._groupingCalculated = false;\n\t\tthis._dataGrouped = false;\n\t}\n\n\t/**\n\t * Returns a time interval axis would group data to for a specified duration.\n\t *\n\t * @since 5.2.1\n\t */\n\tpublic getGroupInterval(duration: number): ITimeInterval {\n\t\tlet baseInterval = this.get(\"baseInterval\");\n\t\tlet groupInterval = $time.chooseInterval(0, duration, this.get(\"groupCount\", Infinity), this.get(\"groupIntervals\")!);\n\t\tif ($time.getIntervalDuration(groupInterval) < $time.getIntervalDuration(baseInterval)) {\n\t\t\tgroupInterval = { ...baseInterval };\n\t\t}\n\t\treturn groupInterval;\n\t}\n\n\t/**\n\t * Return `max` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Max\n\t */\n\tpublic getIntervalMax(interval: ITimeInterval): number {\n\t\treturn this._intervalMax[interval.timeUnit + interval.count];\n\t}\n\n\t/**\n\t * Return `min` of a specified time interval.\n\t * \n\t * Will work only if the axis was grouped to this interval at least once.\n\t * \n\t * @since 5.2.1\n\t * @param   interval  Interval\n\t * @return            Min\n\t */\n\tpublic getIntervalMin(interval: ITimeInterval): number {\n\t\treturn this._intervalMin[interval.timeUnit + interval.count];\n\t}\n\n\tprotected _handleRangeChange() {\n\t\tsuper._handleRangeChange();\n\n\t\tlet selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\tlet selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\n\t\tif ($type.isNumber(selectionMin) && $type.isNumber(selectionMax)) {\n\n\t\t\tif (this.get(\"endLocation\") == 0) {\n\t\t\t\tselectionMax += 1;\n\t\t\t}\n\n\t\t\tif (this.get(\"groupData\") && !this._groupingCalculated) {\n\t\t\t\tthis._groupingCalculated = true;\n\n\t\t\t\tlet modifiedDifference = (selectionMax - selectionMin) + (this.get(\"startLocation\", 0) + (1 - this.get(\"endLocation\", 1)) * this.baseDuration());\n\t\t\t\tlet groupInterval = this.get(\"groupInterval\");\n\n\t\t\t\tif (!groupInterval) {\n\t\t\t\t\tgroupInterval = this.getGroupInterval(modifiedDifference);\n\t\t\t\t}\n\n\t\t\t\tlet current = this.getPrivate(\"groupInterval\");\n\n\t\t\t\tif (groupInterval && (!current || (current.timeUnit !== groupInterval.timeUnit || current.count !== groupInterval.count) || this._seriesDataGrouped)) {\n\t\t\t\t\tthis._seriesDataGrouped = false;\n\t\t\t\t\tthis.setPrivateRaw(\"groupInterval\", groupInterval);\n\t\t\t\t\tthis._setBaseInterval(groupInterval)\n\n\n\t\t\t\t\tlet newId = groupInterval.timeUnit + groupInterval.count;\n\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\t\t\tseries.setDataSet(newId);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.markDirtyExtremes();\n\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\n\t\t\t\t\t\t\tconst type = \"groupintervalchanged\";\n\t\t\t\t\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\t\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.get(\"baseAxis\") === this) {\n\t\t\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\n\t\t\t\t\tconst start = $array.getFirstSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMin);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet startIndex = start.index;\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex -= 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tselectionMax += this.baseDuration() * (1 - this.get(\"endLocation\", 1));\n\n\t\t\t\t\tconst end = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\t\t\t\treturn $order.compare(dataItem.get(fieldName), selectionMax);\n\t\t\t\t\t});\n\n\t\t\t\t\tlet endIndex = end.index;\n\t\t\t\t\tlet endIndex2 = endIndex;\n\n\t\t\t\t\tif (endIndex2 > 1) {\n\t\t\t\t\t\tendIndex2--;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst firstDataItem = series.dataItems[startIndex];\n\t\t\t\t\tconst lastDataItem = series.dataItems[endIndex2];\n\n\t\t\t\t\tlet lastDate: number | undefined;\n\t\t\t\t\tlet firstDate: number | undefined;\n\t\t\t\t\tif (firstDataItem) {\n\t\t\t\t\t\tfirstDate = firstDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (lastDataItem) {\n\t\t\t\t\t\tlastDate = lastDataItem.get(fieldName);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet outOfSelection = false;\n\t\t\t\t\tif (lastDate != null && firstDate != null) {\n\t\t\t\t\t\tif (lastDate < selectionMin || firstDate > selectionMax) {\n\t\t\t\t\t\t\toutOfSelection = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tseries.setPrivate(\"outOfSelection\", outOfSelection);\n\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, _strictMode?: boolean): IMinMaxStep {\n\t\treturn { min: min, max: max, step: (max - min) / gridCount };\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic intervalDuration(): number {\n\t\treturn this._intervalDuration;\n\t}\n\n\tprotected _saveMinMax(min: number, max: number) {\n\t\tlet groupInterval = this.getPrivate(\"groupInterval\");\n\n\t\tif (!groupInterval) {\n\t\t\tgroupInterval = this.get(\"baseInterval\");\n\t\t}\n\n\t\tlet id = groupInterval.timeUnit + groupInterval.count;\n\t\tthis._intervalMin[id] = min;\n\t\tthis._intervalMax[id] = max;\n\t}\n\n\tprotected _getM(timeUnit: TimeUnit) {\n\t\tif (timeUnit == \"month\" || timeUnit == \"year\" || timeUnit == \"day\") {\n\t\t\treturn 1.05;\n\t\t}\n\t\treturn 1.01;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tconst selectionMin = Math.round(this.getPrivate(\"selectionMin\")! as number);\n\t\t\tconst selectionMax = Math.round(this.getPrivate(\"selectionMax\")! as number);\n\t\t\tconst renderer = this.get(\"renderer\");\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\t\tlet value = selectionMin;\n\t\t\tlet i = 0;\n\n\t\t\tconst intervals = this.get(\"gridIntervals\")!;\n\t\t\tlet gridInterval = $time.chooseInterval(0, selectionMax - selectionMin, renderer.gridCount(), intervals);\n\n\t\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\t\tgridInterval = { ...baseInterval };\n\t\t\t}\n\n\t\t\tconst intervalDuration = $time.getIntervalDuration(gridInterval);\n\t\t\tthis._intervalDuration = intervalDuration;\n\n\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\n\t\t\tvalue = $time.round(new Date(selectionMin - intervalDuration), gridInterval.timeUnit, gridInterval.count, firstDay, utc, new Date(min), timezone).getTime();\n\t\t\tlet previousValue = value - intervalDuration;\n\t\t\tlet format: string | Intl.DateTimeFormatOptions;\n\t\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\t\tthis.setPrivateRaw(\"gridInterval\", gridInterval);\n\n\t\t\twhile (value < selectionMax + intervalDuration) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tlet endValue = value + $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\n\t\t\t\tendValue = $time.round(new Date(endValue), gridInterval.timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\n\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\n\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, utc, timezone)) {\n\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\n\n\t\t\t\tpreviousValue = value;\n\t\t\t\tvalue = endValue;\n\n\t\t\t\tif (value == previousValue) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\tprotected _updateFinals(start: number, end: number) {\n\t\tthis.setPrivateRaw(\"selectionMinFinal\", this.positionToValue(start));\n\t\tthis.setPrivateRaw(\"selectionMaxFinal\", this.positionToValue(end));\n\t}\n\n\tprotected _getDelta() {\n\t\tthis._deltaMinMax = this.baseDuration() / 2;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(min), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\t\treturn startTime + (endTime - startTime) * this.get(\"startLocation\", 0);\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\tconst timezone = this._root.timezone;\n\t\tconst utc = this._root.utc;\n\t\tconst timeUnit = baseInterval.timeUnit;\n\t\tlet startTime = $time.round(new Date(max), timeUnit, baseInterval.count, firstDay, utc, undefined, timezone).getTime();\n\t\tlet endTime = startTime + $time.getDuration(timeUnit, baseInterval.count * this._getM(timeUnit))\n\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\treturn startTime + (endTime - startTime) * this.get(\"endLocation\", 1);\n\t}\n\n\tprotected _updateDates(_date: number, _series: XYSeries) {\n\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t * \n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn this._baseDuration;\n\t\t//return $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\t/**\n\t * Returns a duration of user-defined `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseMainDuration(): number {\n\t\treturn $time.getIntervalDuration(this.get(\"baseInterval\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic processSeriesDataItem(dataItem: DataItem<IXYSeriesDataItem>, fields: Array<string>) {\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif (!dataItem.open) {\n\t\t\tdataItem.open = {};\n\t\t}\n\t\tif (!dataItem.close) {\n\t\t\tdataItem.close = {};\n\t\t}\n\n\t\t$array.each(fields, (field) => {\n\t\t\tlet value = dataItem.get(field as any);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet startTime = dataItem.open![field];\n\t\t\t\tlet endTime = dataItem.close![field];\n\t\t\t\t// this is done to save cpu, as rounding is quite expensive, especially with timezone set. \n\t\t\t\t// if value is between prev start and end, it means it didn't change, all is fine.\n\t\t\t\tif (value >= startTime && value <= endTime) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\t\t\tconst utc = this._root.utc;\n\t\t\t\t\tconst timezone = this._root.timezone\n\t\t\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\t\t\tconst count = baseInterval.count;\n\t\t\t\t\tstartTime = $time.round(new Date(value), timeUnit, count, firstDay, utc, undefined, timezone).getTime();\n\t\t\t\t\tendTime = startTime + $time.getDuration(timeUnit, count * this._getM(timeUnit));\n\t\t\t\t\tendTime = $time.round(new Date(endTime), timeUnit, 1, firstDay, utc, undefined, timezone).getTime();\n\n\t\t\t\t\tdataItem.open![field] = startTime;\n\t\t\t\t\tdataItem.close![field] = endTime;\n\t\t\t\t}\n\n\t\t\t\tthis._updateDates(startTime, dataItem.component as XYSeries);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\tlet openValue;\n\t\tlet closeValue;\n\n\t\tif (dataItem.open && dataItem.close) {\n\t\t\topenValue = dataItem.open[field];\n\t\t\tcloseValue = dataItem.close[field];\n\t\t}\n\t\telse {\n\t\t\topenValue = dataItem.get(field as any)\n\t\t\tcloseValue = openValue;\n\t\t}\n\n\t\tlet value = openValue + (closeValue - openValue) * cellLocation;\n\n\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tlet value = this.positionToValue(position);\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\tif (!$type.isNaN(value)) {\n\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\n\t\t\tconst timeUnit = baseInterval.timeUnit;\n\t\t\tconst utc = this._root.utc;\n\t\t\tconst timezone = this._root.timezone;\n\t\t\tconst count = baseInterval.count;\n\n\t\t\tvalue = $time.round(new Date(value), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\n\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, new Date(value), firstDay, utc, timezone);\n\t\t\tif (timezone) {\n\t\t\t\tvalue = $time.round(new Date(value + this.baseDuration() * 0.05), timeUnit, count, firstDay, utc, new Date(this.getPrivate(\"min\", 0)), timezone).getTime();\n\t\t\t\tduration = $time.getDateIntervalDuration(baseInterval, new Date(value + duration * location), firstDay, utc, timezone);\n\t\t\t}\n\n\t\t\treturn this.valueToPosition(value + duration * location);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * NOTE: Unless `adjustPosition` (2nd parameter) is set to `false`, the method\n\t * will adjust position by `tooltipIntervalOffset`.\n\t *\n\t * @param  position        Position\n\t * @param  adjustPosition  Adjust position\n\t * @return                 Tooltip text\n\t */\n\tpublic getTooltipText(position: number, adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tif (this.getPrivate(\"min\") != null) {\n\t\t\tlet format = this.get(\"tooltipDateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\tlet value = this.positionToValue(position);\n\t\t\tif ($type.isNumber(value)) {\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tlet baseInterval = this.getPrivate(\"baseInterval\");\n\t\t\t\tlet duration = $time.getDateIntervalDuration(baseInterval, date, this._root.locale.firstDayOfWeek, this._root.utc, this._root.timezone);\n\n\t\t\t\tif (adjustPosition !== false) {\n\t\t\t\t\tdate = new Date(value + this.get(\"tooltipIntervalOffset\", -this.get(\"tooltipLocation\", 0.5)) * duration)\n\t\t\t\t}\n\n\t\t\t\treturn this._root.dateFormatter.format(date, this.get(\"tooltipDateFormat\", format));\n\t\t\t}\n\n\t\t}\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number, location?: number, snap?: boolean): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tif (location == null) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tvalue = value - (location - 0.5) * this.baseDuration();\n\n\t\tconst result = $array.getSortedIndex(series.dataItems, (dataItem) => {\n\t\t\tlet diValue = 0;\n\t\t\tif (dataItem.open) {\n\t\t\t\tdiValue = dataItem.open[fieldName];\n\t\t\t}\n\n\t\t\treturn $order.compare(diValue, value);\n\t\t});\n\n\t\tif (snap || series.get(\"snapTooltip\")) {\n\t\t\tlet first = series.dataItems[result.index - 1];\n\t\t\tlet second = series.dataItems[result.index];\n\n\t\t\tif (first && second) {\n\t\t\t\tif (first.open && second.close) {\n\t\t\t\t\tlet open = first.open[fieldName];\n\t\t\t\t\tlet close = second.close[fieldName];\n\n\t\t\t\t\tif (Math.abs(value - open) > Math.abs(value - close)) {\n\t\t\t\t\t\treturn second;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (first) {\n\t\t\t\treturn first;\n\t\t\t}\n\n\t\t\tif (second) {\n\t\t\t\treturn second;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst dataItem = series.dataItems[result.index - 1];\n\n\t\t\tif (dataItem) {\n\t\t\t\tif (dataItem.open && dataItem.close) {\n\t\t\t\t\tlet open = dataItem.open[fieldName];\n\t\t\t\t\tlet close = dataItem.close[fieldName];\n\n\t\t\t\t\tif (value >= open && value <= close) {\n\t\t\t\t\t\treturn dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic shouldGap(dataItem: DataItem<IXYSeriesDataItem>, nextItem: DataItem<IXYSeriesDataItem>, autoGapCount: number, fieldName: string): boolean {\n\t\tconst value1 = dataItem.get(fieldName as any);\n\t\tconst value2 = nextItem.get(fieldName as any);\n\n\t\tif (value2 - value1 > this.baseDuration() * autoGapCount) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` dates.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start Date\n\t * @param  end       End Date\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToDates(start: Date, end: Date, duration?: number) {\n\t\tthis.zoomToValues(start.getTime(), end.getTime(), duration);\n\t}\n\n\t/**\n\t * Returns a `Date` object corresponding to specific position within plot\n\t * area.\n\t *\n\t * @param   position  Pposition\n\t * @return            Date\n\t */\n\tpublic positionToDate(position: number): Date {\n\t\treturn new Date(this.positionToValue(position));\n\t}\n\n\t/**\n\t * Returns a relative position within plot area that corresponds to specific\n\t * date.\n\t *\n\t * @param   date  Date\n\t * @return        Position\n\t */\n\tpublic dateToPosition(date: Date): number {\n\t\treturn this.valueToPosition(date.getTime());\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this._intervalDuration / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\r\n\r\nimport { DateAxis, IDateAxisSettings, IDateAxisPrivate, IDateAxisDataItem, IDateAxisEvents } from \"./DateAxis\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\"\r\nimport * as $order from \"../../../core/util/Order\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\nexport interface IGaplessDateAxisSettings<R extends AxisRenderer> extends IDateAxisSettings<R> {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisDataItem extends IDateAxisDataItem {\r\n\r\n\t/**\r\n\t * An index of a data item.\r\n\t */\r\n\tindex?: number\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisPrivate extends IDateAxisPrivate {\r\n\r\n}\r\n\r\nexport interface IGaplessDateAxisEvents extends IDateAxisEvents {\r\n}\r\n\r\n/**\r\n * A version of a [[DateAxis]] which removes intervals that don't have any data\r\n * items in them.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/gapless-date-axis/} for more info\r\n * @important\r\n */\r\nexport class GaplessDateAxis<R extends AxisRenderer> extends DateAxis<R> {\r\n\tpublic static className: string = \"GaplessDateAxis\";\r\n\tpublic static classNames: Array<string> = DateAxis.classNames.concat([GaplessDateAxis.className]);\r\n\r\n\tdeclare public _settings: IGaplessDateAxisSettings<R>;\r\n\tdeclare public _privateSettings: IGaplessDateAxisPrivate;\r\n\tdeclare public _dataItemSettings: IGaplessDateAxisDataItem;\r\n\tdeclare public _events: IGaplessDateAxisEvents;\r\n\r\n\tprotected _frequency: number = 1;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis.valueFields.push(\"date\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tprotected _dates: Array<number> = [];\r\n\r\n\tprotected _updateDates(date: number, series: XYSeries) {\r\n\t\tif (!series.get(\"ignoreMinMax\")) {\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, date));\r\n\t\t\tif (!result.found) {\r\n\t\t\t\t$array.insertIndex(dates, result.index, date);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateAllDates() {\r\n\t\tthis._dates.length = 0;\r\n\r\n\t\t$array.each(this.series, (series) => {\r\n\t\t\tlet field = \"valueX\";\r\n\t\t\tif (series.get(\"yAxis\") == this) {\r\n\t\t\t\tfield = \"valueY\"\r\n\t\t\t}\r\n\t\t\t$array.each(series.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(field as any);\r\n\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\tif (dataItem.open) {\r\n\t\t\t\t\t\tthis._updateDates(dataItem.open![field], series);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Convers value to a relative position on axis.\r\n\t *\r\n\t * @param   value  Value\r\n\t * @return         Relative position\r\n\t */\r\n\tpublic valueToPosition(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tconst len = dates.length - startLocation - (1 - endLocation);\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn (index - startLocation) / len;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\tlet itemValue = dates[index];\r\n\r\n\t\t\tlet d = 0;\r\n\t\t\tif (itemValue > value && value > this.getPrivate(\"min\", 0)) {\r\n\t\t\t\td = itemValue - value;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = value - itemValue;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn (index - startLocation) / len + d / this.baseDuration() / len;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts numeric value from axis scale to index.\r\n\t * \r\n\t * @param  value  Value\r\n\t * @return        Index\r\n\t */\r\n\tpublic valueToIndex(value: number): number {\r\n\t\tconst dates = this._dates;\r\n\r\n\t\tconst result = $array.getSortedIndex(dates, (x) => $order.compare(x, value));\r\n\t\tlet index = result.index;\r\n\r\n\t\tif (result.found) {\r\n\t\t\treturn index;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tindex -= 1;\r\n\t\t\t}\r\n\r\n\t\t\treturn index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a relative position to a corresponding numeric value from axis\r\n\t * scale.\r\n\t *\r\n\t * @param   position  Relative position\r\n\t * @return            Value\r\n\t */\r\n\tpublic positionToValue(position: number): number {\r\n\t\tconst startLocation = this.get(\"startLocation\", 0);\r\n\t\tconst endLocation = this.get(\"endLocation\", 1);\r\n\t\tlet len = Math.round(this._dates.length - startLocation - (1 - endLocation));\r\n\t\tlet index = position * len;\r\n\t\tlet findex = Math.floor(index);\r\n\t\tif (findex < 0) {\r\n\t\t\tfindex = 0;\r\n\t\t}\r\n\r\n\t\tif (findex > len - 1) {\r\n\t\t\tfindex = len - 1\r\n\t\t}\r\n\r\n\t\treturn this._dates[findex] + (index - findex + startLocation) * this.baseDuration();\r\n\t}\r\n\r\n\tprotected _fixZoomFactor() {\r\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", this._dates.length - this.get(\"startLocation\", 0) - (1 - this.get(\"endLocation\", 1)));\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the axis to specific `start` and `end` values.\r\n\t *\r\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\r\n\t *\r\n\t * @param  start     Start value\r\n\t * @param  end       End value\r\n\t * @param  duration  Duration in milliseconds\r\n\t */\r\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\r\n\t\tconst min = this.getPrivate(\"min\", 0);\r\n\t\tconst max = this.getPrivate(\"max\", 0);\r\n\t\tstart = $math.fitToRange(start, min, max);\r\n\t\tend = $math.fitToRange(end, min, max);\r\n\t\tthis.zoom(this.valueToPosition(start), this.valueToPosition(end), duration);\r\n\t}\r\n\r\n\tprotected _prepareAxisItems() {\r\n\t\tlet startTime = this.getPrivate(\"selectionMin\", 0);\r\n\t\tlet endTime = this.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif ($type.isNumber(startTime) && $type.isNumber(endTime)) {\r\n\r\n\t\t\tif (this._seriesValuesDirty) {\r\n\t\t\t\tthis._seriesValuesDirty = false;\r\n\t\t\t\tthis._updateAllDates();\r\n\t\t\t}\r\n\r\n\t\t\tconst dates = this._dates;\r\n\t\t\tconst renderer = this.get(\"renderer\");\r\n\t\t\tconst len = dates.length;\r\n\r\n\t\t\tlet startIndex = this.valueToIndex(startTime);\r\n\t\t\tif (startIndex > 0) {\r\n\t\t\t\tstartIndex--;\r\n\t\t\t}\r\n\r\n\t\t\tlet endIndex = this.valueToIndex(endTime);\r\n\t\t\tif (endIndex < len - 1) {\r\n\t\t\t\tendIndex++;\r\n\t\t\t}\r\n\t\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\r\n\t\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\r\n\t\t\tfrequency = Math.max(1, frequency);\r\n\r\n\t\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\r\n\r\n\t\t\tthis._frequency = frequency;\r\n\r\n\t\t\tfor (let j = 0, length = this.dataItems.length; j < length; j++) {\r\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\r\n\t\t\t}\r\n\r\n\t\t\tlet realDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\r\n\r\n\t\t\t// if all items are on axis\r\n\t\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\r\n\r\n\t\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\r\n\t\t\tlet intervalDuration = $time.getIntervalDuration(gridInterval);\r\n\r\n\t\t\tif (intervalDuration < this.baseDuration()) {\r\n\t\t\t\tgridInterval = { ...baseInterval };\r\n\t\t\t\tintervalDuration = $time.getIntervalDuration(gridInterval);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._intervalDuration = intervalDuration;\r\n\r\n\t\t\tconst formats = this.get(\"dateFormats\")!;\r\n\r\n\t\t\tlet selectedItems: Array<number> = [];\r\n\t\t\tlet firstDate = new Date();\r\n\t\t\tif (this._dates[0]) {\r\n\t\t\t\tfirstDate = new Date(this._dates[0]);\r\n\t\t\t}\r\n\r\n\t\t\tlet startDate = $time.round(new Date(this.getPrivate(\"min\", 0)), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, firstDate, this._root.timezone);\r\n\t\t\tlet value = $time.add(startDate, gridInterval.timeUnit, -1, this._root.utc, this._root.timezone).getTime();\r\n\r\n\t\t\tlet selectionMax = this.getPrivate(\"selectionMax\")\r\n\r\n\t\t\tlet previousPosition = -Infinity;\r\n\t\t\tlet minDifference = (this.get(\"end\", 1) - this.get(\"start\", 0)) / maxCount;\r\n\r\n\t\t\twhile (value <= selectionMax) {\r\n\t\t\t\tlet index = this.valueToIndex(value);\r\n\t\t\t\tlet realValue = this._dates[index];\r\n\r\n\t\t\t\tif (realValue < value) {\r\n\t\t\t\t\tfor (let i = index, len = this._dates.length; i < len; i++) {\r\n\t\t\t\t\t\tlet realValue = this._dates[i];\r\n\t\t\t\t\t\tif (realValue >= value) {\r\n\t\t\t\t\t\t\tindex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet position = this.valueToPosition(realValue);\r\n\t\t\t\tif (position - previousPosition >= minDifference * 0.95) {\r\n\t\t\t\t\t$array.move(selectedItems, index);\r\n\t\t\t\t\tpreviousPosition = position;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousValue = value;\r\n\t\t\t\tvalue += $time.getDuration(gridInterval.timeUnit, gridInterval.count * this._getM(gridInterval.timeUnit));\r\n\t\t\t\tvalue = $time.round(new Date(value), gridInterval.timeUnit, gridInterval.count, this._root.locale.firstDayOfWeek, this._root.utc, undefined, this._root.timezone).getTime();\r\n\r\n\t\t\t\tif (value == previousValue) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (selectedItems.length > 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet previousValue = value - intervalDuration * 10;\r\n\t\t\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\r\n\r\n\t\t\t\t$array.each(selectedItems, (index) => {\r\n\t\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\r\n\t\t\t\t\tif (this.dataItems.length < i + 1) {\r\n\t\t\t\t\t\tdataItem = new DataItem<this[\"_dataItemSettings\"]>(this, undefined, {});\r\n\t\t\t\t\t\tthis._dataItems.push(dataItem);\r\n\t\t\t\t\t\tthis.processDataItem(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tdataItem = this.dataItems[i];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet value = dates[index];\r\n\t\t\t\t\tlet date = new Date(value);\r\n\r\n\t\t\t\t\tlet endValue = value;\r\n\t\t\t\t\tif (i < selectedItems.length - 1) {\r\n\t\t\t\t\t\tendValue = dates[selectedItems[i + 1]];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tendValue += intervalDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.setRaw(\"value\", value);\r\n\t\t\t\t\tdataItem.setRaw(\"endValue\", endValue);\r\n\t\t\t\t\tdataItem.setRaw(\"index\", i);\r\n\r\n\t\t\t\t\tif (index > startIndex - 100 && index < endIndex + 100) {\r\n\r\n\t\t\t\t\t\tlet format = formats[gridInterval.timeUnit];\r\n\r\n\t\t\t\t\t\tformat = formats[gridInterval.timeUnit];\r\n\t\t\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\r\n\t\t\t\t\t\t\tif (gridInterval.timeUnit != \"year\") {\r\n\t\t\t\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc, this._root.timezone)) {\r\n\t\t\t\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._createAssets(dataItem, []);\r\n\r\n\t\t\t\t\t\tconst label = dataItem.get(\"label\");\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._toggleDataItem(dataItem, true);\r\n\t\t\t\t\t\tthis._prepareDataItem(dataItem, gridInterval.count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tpreviousValue = value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.series, (series) => {\r\n\t\t\t\tif (series.inited) {\r\n\t\t\t\t\tseries._markDirtyAxes();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis._updateGhost();\r\n\t}\r\n}","import { Graphics, IGraphicsPrivate, IGraphicsSettings } from \"../../../core/render/Graphics\";\n\nexport interface IGridSettings extends IGraphicsSettings {\n\n\t/**\n\t * Relative location of the grid line within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Location_of_axis_elements} for more info\n\t */\n\tlocation?: number;\n\n}\n\nexport interface IGridPrivate extends IGraphicsPrivate {\n}\n\n/**\n * Creates an axis grid line.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Grid} for more info\n * @important\n */\nexport class Grid extends Graphics {\n\n\tdeclare public _settings: IGridSettings;\n\tdeclare public _privateSettings: IGridPrivate;\n\n\tpublic static className: string = \"Grid\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([Grid.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport { MultiDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IValueAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * Override minimum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the minimum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmin?: number;\n\n\t/**\n\t * Override maximum value for the axis scale.\n\t *\n\t * NOTE: the axis might modify the maximum value to fit into its scale better,\n\t * unless `strictMinMax` is set to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tmax?: number;\n\n\t/**\n\t * Force axis scale to be precisely at values as set in `min` and/or `max`.\n\t *\n\t * In case `min` and/or `max` is not set, the axis will fix its scale to\n\t * precise lowest and highest values available through all of the series\n\t * attached to it.\n\t *\n\t * This effectively locks the axis from auto-zooming itself when chart\n\t * is zoomed in.\n\t *\n\t * If you need to zoom to actual low/high values within currently visible\n\t * scope, use `strictMinMaxSelection` instead.\n\t *\n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Custom_scope} for more info\n\t */\n\tstrictMinMax?: boolean;\n\n\t/**\n\t * Force axis to auto-zoom to exact lowest and highest values from attached\n\t * series' data items within ucurrently visible range.\n\t * \n\t * This is a good feature when your series is plotted from derivative values,\n\t * like `valueYChangeSelection` as it helps to avoid frequent jumping of\n\t * series to adjusted min and max of the axis.\n\t * \n\t * Use `extraMin` and `extraMax` to add extra \"padding\".\n\t *\n\t * @since 5.1.11\n\t */\n\tstrictMinMaxSelection?: boolean;\n\n\t/**\n\t * If set to `true` axis will use logarithmic scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\tlogarithmic?: boolean;\n\n\t/**\n\t * Treat zero values as some other value.\n\t *\n\t * Useful in situations where zero would result in error, i.e. logarithmic\n\t * scale.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Logarithmic_scale} for more info\n\t */\n\ttreatZeroAs?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated minimum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000` and\n\t * minimum value is `0`, the new minimum value will be `-100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMin?: number;\n\n\t/**\n\t * Relative extension to the automatically-calculated maximum value of the\n\t * axis scale.\n\t *\n\t * E..g. `0.1` will extend the scale by 10%, so if max value is `1000`, the\n\t * axis will now show maximum value of `1100`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Relative_scope_extension} for more info\n\t */\n\textraMax?: number;\n\n\t/**\n\t * Base value, which indicates the threshold between \"positive\" and \"negative\"\n\t * values.\n\t *\n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Base_value} for more info\n\t */\n\tbaseValue?: number;\n\n\t/**\n\t * Maximum number of decimals to allow in axis labels.\n\t *\n\t * This setting not only affects formatting of the labels, but also where and\n\t * how many grid/labels are placed on the axis.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tmaxPrecision?: number;\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<IValueAxisDataItem>) => void;\n\n\t/**\n\t * Number format to use for axis labels.\n\t *\n\t * If not set, will use format set in global number formatter.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Label_format} for more info\n\t */\n\tnumberFormat?: string;\n\n\t/**\n\t * A numeric format used for numbers displayed in axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\ttooltipNumberFormat?: string | Intl.NumberFormatOptions;\n\n\t/**\n\t * If set, will use greater precision for the axis tooltip than the one for\n\t * axis' actual labels.\n\t *\n\t * E.g. if axis displays labels with one decimal (`1.0`, `1.1`, `1.2`) setting\n\t * this setting to `1` would allow two decimals in axis tooltip, e.g. `1.15`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Tooltip_number_format} for more info\n\t */\n\textraTooltipPrecision?: number;\n\n\t/**\n\t * If your series relies on dynamically calculated values, like value\n\t * changes, percents, or total sums, set this to `true`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Calculated_values} for more info\n\t */\n\tcalculateTotals?: boolean;\n\n\t/**\n\t * This setting can be set to an instance of another [[ValueAxis]].\n\t *\n\t * If set the grid of this axis will be synced with grid of the target axis.\n\t *\n\t * NOTE: this is not 100% guaranteed to work. In some rare cases perfect\n\t * sync might not be possible.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/#Syncing_grid} for more info\n\t */\n\tsyncWithAxis?: ValueAxis<AxisRenderer>;\n\n\t/**\n\t * If set to `false`, the axis won't be auto-zoomed to a selection (this\n\t * works only if the other axis is a `DateAxis` or a `CategoryAxis`).\n\t * \n\t * IMPORTANT: This setting will be ignored if both X and Y axes are\n\t * a `ValueAxis`.\n\t *\n\t * @since 5.2.20\n\t * @default true\n\t */\n\tautoZoom?: boolean;\n\n}\n\nexport interface IValueAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Value of the data item.\n\t */\n\tvalue?: number;\n\n\t/**\n\t * End value for axis items that span multiple values, like axis ranges.\n\t */\n\tendValue?: number;\n\n\t/**\n\t * If set to `true` the values fo this data item will be factored in when\n\t * calculating scale of the [[ValueAxis]]. Useful for axis ranges.\n\t * \n\t * @since 5.1.4\n\t */\n\taffectsMinMax?: boolean;\n\n}\n\nexport interface IMinMaxStep {\n\tmin: number;\n\tmax: number;\n\tstep: number;\n}\n\nexport interface IValueAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Calculated current minimum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmin?: number;\n\n\t/**\n\t * Calculated current maximum value of the axis scale.\n\t * \n\t * @readonly\n\t */\n\tmax?: number;\n\n\t/**\n\t * A minimum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `min` is reflecting current intermediate value, whereas `minFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tminFinal?: number;\n\n\t/**\n\t * A maximum value of the axis scale.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `max` is reflecting current intermediate value, whereas `maxFinal` will\n\t * show target value.\n\t * \n\t * @readonly\n\t */\n\tmaxFinal?: number;\n\n\t/**\n\t * Calculated minimum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMin?: number;\n\n\t/**\n\t * Calculated maximum value of the currently viewable (zoomed) scope.\n\t * \n\t * @readonly\n\t */\n\tselectionMax?: number;\n\n\t/**\n\t * A target minimum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMin` is reflecting current intermediate value,\n\t * whereas `selectionMinFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMinFinal?: number;\n\n\t/**\n\t * A target maximum value of the viewable value scope.\n\t *\n\t * Can be useful in cases where axis zoom is currently being animated, and\n\t * `selectionMax` is reflecting current intermediate value,\n\t * whereas `selectionMaxFinal` will show target value.\n\t * \n\t * @readonly\n\t */\n\tselectionMaxFinal?: number;\n\n\t/**\n\t * When selection step changes, it might change during axis zoom animation.\n\t *\n\t * `selectionStepFinal` will show what step will be when animation is\n\t * finished.\n\t * \n\t * @readonly\n\t */\n\tselectionStepFinal?: number;\n\n\t/**\n\t * Value step between grid lines.\n\t * \n\t * @readonly\n\t */\n\tstep?: number;\n\n\t/**\n\t * Decimal places used when formatting axis labels.\n\t * \n\t * @readonly\n\t */\n\tstepDecimalPlaces?: number;\n\n}\n\nexport interface IValueAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a value axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/value-axis/} for more info\n * @important\n */\nexport class ValueAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"ValueAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([ValueAxis.className]);\n\n\tdeclare public _settings: IValueAxisSettings<R>;\n\tdeclare public _privateSettings: IValueAxisPrivate;\n\tdeclare public _dataItemSettings: IValueAxisDataItem;\n\tdeclare public _events: IValueAxisEvents;\n\n\tprotected _dirtyExtremes: boolean = false;\n\tprotected _dirtySelectionExtremes: boolean = false;\n\tprotected _deltaMinMax: number = 1;\n\tprotected _minReal: number | undefined;\n\tprotected _maxReal: number | undefined;\n\n\tprotected _baseValue: number = 0;\n\tprotected _syncDp?: MultiDisposer;\n\tprotected _minLogAdjusted: number = 1;\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyExtremes() {\n\t\tthis._dirtyExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtySelectionExtremes() {\n\t\tthis._dirtySelectionExtremes = true;\n\t\tthis.markDirty();\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.setPrivateRaw(\"name\", \"value\");\n\t\tthis.addTag(\"value\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"syncWithAxis\")) {\n\t\t\tlet previousValue = this._prevSettings.syncWithAxis;\n\t\t\tif (previousValue) {\n\t\t\t\tif (this._syncDp) {\n\t\t\t\t\tthis._syncDp.dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tthis._syncDp = new MultiDisposer([\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMinFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t}),\n\t\t\t\t\tsyncWithAxis.onPrivate(\"selectionMaxFinal\", () => {\n\t\t\t\t\t\tthis._dirtySelectionExtremes = true;\n\t\t\t\t\t})\n\t\t\t\t])\n\t\t\t}\n\t\t}\n\n\t\tlet someDirty = false;\n\t\tif (this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"maxPrecision\") || this.isDirty(\"numberFormat\")) {\n\t\t\tsomeDirty = true;\n\t\t\tthis.ghostLabel.set(\"text\", \"\");\n\t\t}\n\n\t\t//if (this._dirtyExtremes || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"min\") || this.isDirty(\"max\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"maxPrecision\")) {\n\t\tif (this._sizeDirty || this._dirtyExtremes || this._valuesDirty || someDirty || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"extraMin\") || this.isDirty(\"extraMax\") || this.isDirty(\"logarithmic\") || this.isDirty(\"treatZeroAs\") || this.isDirty(\"baseValue\") || this.isDirty(\"strictMinMax\") || this.isDirty(\"strictMinMaxSelection\")) {\n\t\t\tthis._getMinMax();\n\t\t\tthis._dirtyExtremes = false;\n\t\t}\n\n\t\tif (this._dirtySelectionExtremes && !this._isPanning && this.get(\"autoZoom\", true)) {\n\t\t\tthis._getSelectionMinMax();\n\t\t\tthis._dirtySelectionExtremes = false;\n\t\t}\n\n\t\tthis._groupData();\n\n\t\tif (this._sizeDirty || this._valuesDirty || this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"min\") || this.isPrivateDirty(\"selectionMax\") || this.isPrivateDirty(\"selectionMin\") || this.isPrivateDirty(\"max\") || this.isPrivateDirty(\"step\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\") || this.isDirty(\"logarithmic\")) {\n\t\t\tthis._handleRangeChange();\n\t\t\tthis._prepareAxisItems();\n\t\t\tthis._updateAxisRanges();\n\t\t}\n\n\t\tthis._baseValue = this.baseValue();\n\n\t}\n\n\tprotected _groupData() {\n\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst numberFormat = this.get(\"numberFormat\");\n\t\tconst formatter = this.getNumberFormatter();\n\n\t\tlet text = \"\";\n\n\t\tif (numberFormat) {\n\t\t\ttext = formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\ttext = formatter.format(value, undefined, this.getPrivate(\"stepDecimalPlaces\"));\n\t\t}\n\t\treturn text;\n\t}\n\n\tprotected _prepareAxisItems() {\n\t\tconst min = this.getPrivate(\"min\");\n\t\tconst max = this.getPrivate(\"max\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\n\t\t\tconst logarithmic = this.get(\"logarithmic\");\n\t\t\tconst step = this.getPrivate(\"step\")!;\n\t\t\tconst selectionMin = this.getPrivate(\"selectionMin\")!;\n\t\t\tconst selectionMax = this.getPrivate(\"selectionMax\")! + step;\n\n\t\t\tlet value = selectionMin - step;\n\t\t\tlet i = 0;\n\t\t\tlet differencePower = 1;\n\t\t\tlet minLog = min;\n\n\t\t\tif (logarithmic) {\n\t\t\t\tvalue = this._minLogAdjusted;\n\n\t\t\t\tif (value < selectionMin) {\n\t\t\t\t\twhile (value < selectionMin) {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tminLog = value;\n\n\t\t\t\tif (minLog <= 0) {\n\t\t\t\t\tminLog = 1;\n\t\t\t\t\tif (step < 1) {\n\t\t\t\t\t\tminLog = step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdifferencePower = Math.log(selectionMax - step) * Math.LOG10E - Math.log(minLog) * Math.LOG10E;\n\n\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E - 5);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet previous = -Infinity;\n\t\t\twhile (value < selectionMax) {\n\t\t\t\tlet dataItem: DataItem<this[\"_dataItemSettings\"]>;\n\t\t\t\tif (this.dataItems.length < i + 1) {\n\t\t\t\t\tdataItem = new DataItem(this, undefined, {});\n\t\t\t\t\tthis._dataItems.push(dataItem);\n\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdataItem = this.dataItems[i];\n\t\t\t\t}\n\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tdataItem.setRaw(\"value\", value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._formatText(value));\n\t\t\t\t}\n\n\t\t\t\tthis._prepareDataItem(dataItem);\n\n\t\t\t\tif (!logarithmic) {\n\t\t\t\t\tvalue += step;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (differencePower > 2) {\n\t\t\t\t\t\tvalue = Math.pow(10, Math.log(minLog) * Math.LOG10E + i - 5);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tvalue += step;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (previous == value) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\t\t\t\tif (stepPower < 1) {\n\t\t\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\t\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;\n\t\t\t\t\t// round value to avoid floating point issues\n\t\t\t\t\tvalue = $math.round(value, decCount);\n\t\t\t\t}\n\t\t\t\ti++;\n\n\t\t\t\tprevious = value;\n\t\t\t}\n\n\t\t\tfor (let j = i; j < this.dataItems.length; j++) {\n\t\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t\t}\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (series.inited) {\n\t\t\t\t\tseries._markDirtyAxes();\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis._updateGhost();\n\t\t}\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\t\tlet value = dataItem.get(\"value\")!;\n\t\tlet endValue = dataItem.get(\"endValue\");\n\n\t\tlet position = this.valueToPosition(value);\n\n\t\tlet endPosition = position;\n\t\tlet fillEndPosition = this.valueToPosition(value + this.getPrivate(\"step\")!);\n\n\t\tif ($type.isNumber(endValue)) {\n\t\t\tendPosition = this.valueToPosition(endValue);\n\t\t\tfillEndPosition = endPosition;\n\t\t}\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tif (endValue == null) {\n\t\t\t\tfillEndPosition = position;\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\n\t\tconst grid = dataItem.get(\"grid\");\n\t\trenderer.updateGrid(grid, position, endPosition);\n\t\tif (grid) {\n\t\t\tif (value == this.get(\"baseValue\", 0)) {\n\t\t\t\tgrid.addTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t\telse if (grid.hasTag(\"base\")) {\n\t\t\t\tgrid.removeTag(\"base\");\n\t\t\t\tgrid._applyThemes();\n\t\t\t}\n\t\t}\n\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tif (!dataItem.get(\"isRange\")) {\n\t\t\tconst fillRule = this.get(\"fillRule\");\n\t\t\tif (fillRule) {\n\t\t\t\tfillRule(dataItem)\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleRangeChange() {\n\t\tlet selectionMin: number = this.positionToValue(this.get(\"start\", 0));\n\t\tlet selectionMax: number = this.positionToValue(this.get(\"end\", 1));\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet stepDecimalPlaces = $utils.decimalPlaces(minMaxStep.step);\n\t\tthis.setPrivateRaw(\"stepDecimalPlaces\", stepDecimalPlaces);\n\n\t\tselectionMin = $math.round(selectionMin, stepDecimalPlaces);\n\t\tselectionMax = $math.round(selectionMax, stepDecimalPlaces);\n\n\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\tlet step = minMaxStep.step;\n\t\tselectionMin = minMaxStep.min;\n\t\tselectionMax = minMaxStep.max;\n\n\t\tif (this.getPrivate(\"selectionMin\") !== selectionMin || this.getPrivate(\"selectionMax\") !== selectionMax || this.getPrivate(\"step\") !== step) {\n\t\t\t// do not change to setPrivate, will cause SO\n\t\t\tthis.setPrivateRaw(\"selectionMin\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMax\", selectionMax);\n\n\t\t\tthis.setPrivateRaw(\"step\", step);\n\t\t}\n\t}\n\n\t/**\n\t * Converts a relative position to a corresponding numeric value from axis\n\t * scale.\n\t *\n\t * @param   position  Relative position\n\t * @return            Value\n\t */\n\tpublic positionToValue(position: number): number {\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn position * (max - min) + min;\n\t\t}\n\t\telse {\n\t\t\treturn Math.pow(Math.E, (position * ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E)) + Math.log(min) * Math.LOG10E) / Math.LOG10E);\n\t\t}\n\t}\n\n\t/**\n\t * Convers value to a relative position on axis.\n\t *\n\t * @param   value  Value\n\t * @return         Relative position\n\t */\n\tpublic valueToPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"min\")!;\n\t\tconst max = this.getPrivate(\"max\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic valueToFinalPosition(value: number): number {\n\n\t\tconst min = this.getPrivate(\"minFinal\")!;\n\t\tconst max = this.getPrivate(\"maxFinal\")!;\n\n\t\tif (!this.get(\"logarithmic\")) {\n\t\t\treturn (value - min) / (max - min);\n\t\t}\n\t\telse {\n\t\t\tif (value <= 0) {\n\t\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\t\tvalue = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (Math.log(value) * Math.LOG10E - Math.log(min) * Math.LOG10E) / ((Math.log(max) * Math.LOG10E - Math.log(min) * Math.LOG10E));\n\t\t}\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getX(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value);\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific value.\n\t *\n\t * @param   value     Numeric value\n\t * @param   location  Location\n\t * @param   baseValue Base value\n\t * @return            X coordinate\n\t */\n\tpublic getY(value: number, location: number, baseValue: number) {\n\t\tvalue = baseValue + (value - baseValue) * location;\n\n\t\tconst position = this.valueToPosition(value)\n\t\treturn this._settings.renderer.positionToCoordinate(position);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number) {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedXValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, _cellLocation, axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, _cellLocation: number, axisLocation: number): number {\n\t\tlet value = dataItem.get(field as any);\n\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\t\tif (stackToItem) {\n\t\t\tconst series = dataItem.component as XYSeries;\n\t\t\tvalue = value * axisLocation + series.getStackedYValueWorking(dataItem, field);\n\t\t}\n\t\telse {\n\t\t\tvalue = this._baseValue + (value - this._baseValue) * axisLocation;\n\t\t}\n\n\t\treturn this.valueToPosition(value);\n\t}\n\n\t/**\n\t * Returns relative position of axis' `baseValue`.\n\t *\n\t * @return  Base value position\n\t */\n\tpublic basePosition(): number {\n\t\treturn this.valueToPosition(this.baseValue());\n\t}\n\n\t/**\n\t * Base value of the [[ValueAxis]], which determines positive and negative\n\t * values.\n\t *\n\t * @return Base value\n\t */\n\tpublic baseValue(): number {\n\t\tconst min = Math.min(this.getPrivate(\"minFinal\", -Infinity), this.getPrivate(\"selectionMin\", -Infinity));\n\t\tconst max = Math.max(this.getPrivate(\"maxFinal\", Infinity), this.getPrivate(\"selectionMax\", Infinity));\n\t\tlet baseValue = this.get(\"baseValue\", 0);\n\n\t\tif (baseValue < min) {\n\t\t\tbaseValue = min;\n\t\t}\n\n\t\tif (baseValue > max) {\n\t\t\tbaseValue = max\n\t\t}\n\n\t\treturn baseValue;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic cellEndValue(value: number): number {\n\t\treturn value;\n\t}\n\n\tprotected fixSmallStep(step: number): number {\n\t\t// happens because of floating point error\n\t\tif (1 + step === 1) {\n\t\t\tstep *= 2;\n\t\t\treturn this.fixSmallStep(step);\n\t\t}\n\t\treturn step;\n\t}\n\n\tprotected _fixMin(min: number) {\n\t\treturn min;\n\t}\n\n\tprotected _fixMax(max: number) {\n\t\treturn max;\n\t}\n\n\tpublic _calculateTotals() {\n\t\tif (this.get(\"calculateTotals\")) {\n\t\t\tlet series = this.series[0];\n\t\t\tif (series) {\n\t\t\t\tlet startIndex = series.startIndex();\n\n\t\t\t\tif (series.dataItems.length > 0) {\n\n\t\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\t\t\t\t\tlet endIndex = series.endIndex();\n\t\t\t\t\tif (endIndex < series.dataItems.length) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet field: string | undefined;\n\t\t\t\t\tlet vc: string | undefined;\n\n\t\t\t\t\tif (series.get(\"yAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueY\";\n\t\t\t\t\t\tvc = \"vcy\";\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"xAxis\") == this) {\n\t\t\t\t\t\tfield = \"valueX\";\n\t\t\t\t\t\tvc = \"vcx\";\n\t\t\t\t\t}\n\n\t\t\t\t\tlet fieldWorking = field + \"Working\";\n\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tlet sum = 0;\n\t\t\t\t\t\t\tlet total = 0;\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tsum += value;\n\t\t\t\t\t\t\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(this.series, (series) => {\n\t\t\t\t\t\t\t\tif (!series.get(\"excludeFromTotal\")) {\n\t\t\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\t\t\tlet value = dataItem.get(fieldWorking as any) * series.get(vc as any);\n\n\t\t\t\t\t\t\t\t\t\tif (!$type.isNaN(value)) {\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Total\") as any, total);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"Sum\") as any, sum);\n\t\t\t\t\t\t\t\t\t\t\tdataItem.set((field + \"TotalPercent\") as any, value / total * 100);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getSelectionMinMax() {\n\t\tconst min = this.getPrivate(\"minFinal\");\n\t\tconst max = this.getPrivate(\"maxFinal\");\n\n\t\tconst minDefined = this.get(\"min\");\n\t\tconst maxDefined = this.get(\"max\");\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tconst gridCount = this.get(\"renderer\").gridCount();\n\t\tconst selectionStrictMinMax = this.get(\"strictMinMaxSelection\");\n\t\tconst strictMinMax = this.get(\"strictMinMax\");\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tlet selectionMin = max;\n\t\t\tlet selectionMax = min;\n\n\t\t\t$array.each(this.series, (series) => {\n\t\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\t\tconst outOfSelection = series.getPrivate(\"outOfSelection\");\n\n\t\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\t\tlet minX = series.getPrivate(\"minX\");\n\t\t\t\t\t\t\tlet maxX = series.getPrivate(\"maxX\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminX = undefined;\n\t\t\t\t\t\t\t\tmaxX = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinX\", minX);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxX\", maxX);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\t\tif (!outOfSelection) {\n\n\t\t\t\t\t\t\tlet minY = series.getPrivate(\"minY\");\n\t\t\t\t\t\t\tlet maxY = series.getPrivate(\"maxY\");\n\n\t\t\t\t\t\t\t// solves #90085\n\t\t\t\t\t\t\tif (series.startIndex() != 0 || series.endIndex() != series.dataItems.length) {\n\t\t\t\t\t\t\t\tminY = undefined;\n\t\t\t\t\t\t\t\tmaxY = undefined;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tseriesMin = series.getPrivate(\"selectionMinY\", minY);\n\t\t\t\t\t\t\tseriesMax = series.getPrivate(\"selectionMaxY\", maxY);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!series.isHidden() && !series.isShowing()) {\n\t\t\t\t\t\tif ($type.isNumber(seriesMin)) {\n\t\t\t\t\t\t\tselectionMin = Math.min(selectionMin, seriesMin);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(seriesMax)) {\n\t\t\t\t\t\t\tselectionMax = Math.max(selectionMax, seriesMax);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.axisRanges.each((range) => {\n\t\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tselectionMin = Math.min(selectionMin, value);\n\t\t\t\t\t\tselectionMax = Math.max(selectionMax, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tif (selectionMin > selectionMax) {\n\t\t\t\t[selectionMin, selectionMax] = [selectionMax, selectionMin]\n\t\t\t}\n\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMin = minDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._minReal)) {\n\t\t\t\t\tselectionMin = this._minReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tif (strictMinMax) {\n\t\t\t\t\tselectionMax = maxDefined;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (strictMinMax) {\n\t\t\t\tif ($type.isNumber(this._maxReal)) {\n\t\t\t\t\tselectionMax = this._maxReal;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (selectionMin === selectionMax) {\n\t\t\t\tselectionMin -= this._deltaMinMax;\n\t\t\t\tselectionMax += this._deltaMinMax;\n\t\t\t\tlet minMaxStep2 = this._adjustMinMax(selectionMin, selectionMax, gridCount, strictMinMax);\n\t\t\t\tselectionMin = minMaxStep2.min;\n\t\t\t\tselectionMax = minMaxStep2.max;\n\t\t\t}\n\n\t\t\tlet selectionMinReal = selectionMin;\n\t\t\tlet selectionMaxReal = selectionMax;\n\n\t\t\tselectionMin -= (selectionMax - selectionMin) * extraMin;\n\t\t\tselectionMax += (selectionMax - selectionMin) * extraMax;\n\n\t\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount);\n\n\t\t\tselectionMin = minMaxStep.min;\n\t\t\tselectionMax = minMaxStep.max;\n\n\t\t\tselectionMin = $math.fitToRange(selectionMin, min, max);\n\t\t\tselectionMax = $math.fitToRange(selectionMax, min, max);\n\n\t\t\t// do it for the second time !important\t\t\t\n\t\t\tminMaxStep = this._adjustMinMax(selectionMin, selectionMax, gridCount, true);\n\n\t\t\tif (!strictMinMax) {\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\t\tif (syncWithAxis) {\n\t\t\t\tminMaxStep = this._syncAxes(selectionMin, selectionMax, minMaxStep.step, syncWithAxis.getPrivate(\"selectionMinFinal\", syncWithAxis.getPrivate(\"minFinal\", 0)), syncWithAxis.getPrivate(\"selectionMaxFinal\", syncWithAxis.getPrivate(\"maxFinal\", 1)), syncWithAxis.getPrivate(\"selectionStepFinal\", syncWithAxis.getPrivate(\"step\", 1)));\n\n\t\t\t\tselectionMin = minMaxStep.min;\n\t\t\t\tselectionMax = minMaxStep.max;\n\t\t\t}\n\n\t\t\tif (strictMinMax) {\n\t\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\t\tselectionMin = Math.max(selectionMin, minDefined);\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\t\tselectionMax = Math.min(selectionMax, maxDefined);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (selectionStrictMinMax) {\n\t\t\t\tselectionMin = selectionMinReal - (selectionMax - selectionMin) * extraMin;\n\t\t\t\tselectionMax = selectionMaxReal + (selectionMax - selectionMin) * extraMax;\n\t\t\t}\n\n\t\t\tif (this.get(\"logarithmic\")) {\n\n\t\t\t\tif (selectionMin <= 0) {\n\t\t\t\t\tselectionMin = selectionMinReal * (1 - Math.min(extraMin, 0.99));\n\t\t\t\t}\n\n\t\t\t\tif (selectionMin < min) {\n\t\t\t\t\tselectionMin = min;\n\t\t\t\t}\n\t\t\t\tif (selectionMax > max) {\n\t\t\t\t\tselectionMax = max;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet len = Math.min(20, Math.ceil(Math.log(this.getPrivate(\"maxZoomFactor\", 100) + 1) / Math.LN10) + 2);\n\n\t\t\tlet start = $math.round(this.valueToFinalPosition(selectionMin), len);\n\t\t\tlet end = $math.round(this.valueToFinalPosition(selectionMax), len);\n\n\t\t\tthis.setPrivateRaw(\"selectionMinFinal\", selectionMin);\n\t\t\tthis.setPrivateRaw(\"selectionMaxFinal\", selectionMax);\n\t\t\tthis.setPrivateRaw(\"selectionStepFinal\", minMaxStep.step);\n\n\t\t\tthis.zoom(start, end);\n\t\t}\n\t}\n\n\n\tprotected _getMinMax() {\n\t\tlet minDefined = this.get(\"min\");\n\t\tlet maxDefined = this.get(\"max\");\n\n\t\tlet min = Infinity;\n\t\tlet max = -Infinity;\n\n\t\tlet extraMin = this.get(\"extraMin\", 0);\n\t\tlet extraMax = this.get(\"extraMax\", 0);\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tif (this.get(\"extraMin\") == null) {\n\t\t\t\textraMin = 0.1;\n\t\t\t}\n\t\t\tif (this.get(\"extraMax\") == null) {\n\t\t\t\textraMax = 0.2;\n\t\t\t}\n\t\t}\n\n\t\tlet minDiff = Infinity;\n\n\t\t$array.each(this.series, (series) => {\n\t\t\tif (!series.get(\"ignoreMinMax\")) {\n\t\t\t\tlet seriesMin: number | undefined;\n\t\t\t\tlet seriesMax: number | undefined;\n\t\t\t\tif (series.get(\"xAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minX\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxX\");\n\t\t\t\t}\n\t\t\t\telse if (series.get(\"yAxis\") === this) {\n\t\t\t\t\tseriesMin = series.getPrivate(\"minY\");\n\t\t\t\t\tseriesMax = series.getPrivate(\"maxY\");\n\t\t\t\t}\n\n\t\t\t\tif ($type.isNumber(seriesMin) && $type.isNumber(seriesMax)) {\n\t\t\t\t\tmin = Math.min(min, seriesMin);\n\t\t\t\t\tmax = Math.max(max, seriesMax);\n\n\t\t\t\t\tlet diff = seriesMax - seriesMin;\n\n\t\t\t\t\tif (diff <= 0) {\n\t\t\t\t\t\tdiff = Math.abs(seriesMax / 100);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff < minDiff) {\n\t\t\t\t\t\tminDiff = diff;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tthis.axisRanges.each((range) => {\n\t\t\tif (range.get(\"affectsMinMax\")) {\n\t\t\t\tlet value = range.get(\"value\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t\tvalue = range.get(\"endValue\");\n\t\t\t\tif (value != null) {\n\t\t\t\t\tmin = Math.min(min, value);\n\t\t\t\t\tmax = Math.max(max, value);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tlet treatZeroAs = this.get(\"treatZeroAs\");\n\t\t\tif ($type.isNumber(treatZeroAs)) {\n\t\t\t\tif (min <= 0) {\n\t\t\t\t\tmin = treatZeroAs;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (min <= 0) {\n\t\t\t\tnew Error(\"Logarithmic value axis can not have values <= 0.\");\n\t\t\t}\n\t\t}\n\n\t\tif (min === 0 && max === 0) {\n\t\t\tmax = 0.9;\n\t\t\tmin = -0.9;\n\t\t}\n\n\t\tif ($type.isNumber(minDefined)) {\n\t\t\tmin = minDefined;\n\t\t}\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tmax = maxDefined;\n\t\t}\n\n\t\t// meaning no min/max found on series/ranges and no min/max was defined\n\t\tif (min === Infinity || max === -Infinity) {\n\t\t\tthis.setPrivate(\"minFinal\", undefined);\n\t\t\tthis.setPrivate(\"maxFinal\", undefined);\n\t\t\treturn;\n\t\t}\n\n\t\tconst initialMin = min;\n\t\tconst initialMax = max;\n\n\t\t// adapter\n\t\tlet minAdapted = this.adapters.fold(\"min\", min);\n\t\tlet maxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\t// DateAxis does some magic here\n\t\tmin = this._fixMin(min);\n\t\tmax = this._fixMax(max);\n\n\t\t// this happens if starLocation and endLocation are 0.5 and DateAxis has only one date\t\t\n\t\tif (max - min <= 1 / Math.pow(10, 15)) {\n\t\t\tif (max - min !== 0) {\n\t\t\t\tthis._deltaMinMax = (max - min) / 2;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getDelta(max);\n\t\t\t}\n\n\t\t\tmin -= this._deltaMinMax;\n\t\t\tmax += this._deltaMinMax;\n\t\t}\n\n\t\t// add extras\n\t\tmin -= (max - min) * extraMin;\n\t\tmax += (max - min) * extraMax;\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\t// don't let min go below 0 if real min is >= 0\n\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\tmin = 0;\n\t\t\t}\n\t\t\t// don't let max go above 0 if real max is <= 0\n\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\tmax = 0;\n\t\t\t}\n\t\t}\n\n\t\tthis._minReal = min;\n\t\tthis._maxReal = max;\n\t\tlet strictMinMax = this.get(\"strictMinMax\");\n\t\tlet strictMinMaxSelection = this.get(\"strictMinMaxSelection\", false);\n\t\tif (strictMinMaxSelection) {\n\t\t\tstrictMinMax = strictMinMaxSelection;\n\t\t}\n\n\t\tlet strict = strictMinMax;\n\t\tif ($type.isNumber(maxDefined)) {\n\t\t\tstrict = true;\n\t\t}\n\n\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\tlet minMaxStep: IMinMaxStep = this._adjustMinMax(min, max, gridCount, strict);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// do it for the second time with strict true (importat!)\n\t\tminMaxStep = this._adjustMinMax(min, max, gridCount, true);\n\n\t\tmin = minMaxStep.min;\n\t\tmax = minMaxStep.max;\n\n\t\t// return min max if strict\n\t\tif (strictMinMax) {\n\t\t\tif ($type.isNumber(minDefined)) {\n\t\t\t\tmin = minDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmin = this._minReal;\n\t\t\t}\n\n\t\t\tif ($type.isNumber(maxDefined)) {\n\t\t\t\tmax = maxDefined;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmax = this._maxReal;\n\t\t\t}\n\n\t\t\tif (max - min <= 0.00000001) {\n\t\t\t\tmin -= this._deltaMinMax;\n\t\t\t\tmax += this._deltaMinMax;\n\t\t\t}\n\n\t\t\tmin -= (max - min) * extraMin;\n\t\t\tmax += (max - min) * extraMax;\n\t\t}\n\n\t\tminAdapted = this.adapters.fold(\"min\", min);\n\t\tmaxAdapted = this.adapters.fold(\"max\", max);\n\n\t\tif ($type.isNumber(minAdapted)) {\n\t\t\tmin = minAdapted;\n\t\t}\n\n\t\tif ($type.isNumber(maxAdapted)) {\n\t\t\tmax = maxAdapted;\n\t\t}\n\n\t\tif (minDiff == Infinity) {\n\t\t\tminDiff = (max - min)\n\t\t}\n\n\t\t// this is to avoid floating point number error\n\t\tlet decCount = Math.round(Math.abs(Math.log(Math.abs(max - min)) * Math.LOG10E)) + 5;\n\n\t\tmin = $math.round(min, decCount);\n\t\tmax = $math.round(max, decCount);\n\n\t\tconst syncWithAxis = this.get(\"syncWithAxis\");\n\t\tif (syncWithAxis) {\n\t\t\tminMaxStep = this._syncAxes(min, max, minMaxStep.step, syncWithAxis.getPrivate(\"minFinal\", syncWithAxis.getPrivate(\"min\", 0)), syncWithAxis.getPrivate(\"maxFinal\", syncWithAxis.getPrivate(\"max\", 1)), syncWithAxis.getPrivate(\"step\", 1));\n\t\t\tmin = minMaxStep.min;\n\t\t\tmax = minMaxStep.max;\n\t\t}\n\n\t\tthis.setPrivateRaw(\"maxZoomFactor\", Math.max(1, Math.ceil((max - min) / minDiff * this.get(\"maxZoomFactor\", 100))));\n\t\tthis._fixZoomFactor();\n\n\t\tif (this.get(\"logarithmic\")) {\n\t\t\tthis._minLogAdjusted = min;\n\t\t\tmin = this._minReal;\n\t\t\tmax = this._maxReal;\n\n\t\t\tif (min <= 0) {\n\t\t\t\tmin = initialMin * (1 - Math.min(extraMin, 0.99));\n\t\t\t}\n\t\t}\n\n\n\t\tif ($type.isNumber(min) && $type.isNumber(max)) {\n\t\t\tif (this.getPrivate(\"minFinal\") !== min || this.getPrivate(\"maxFinal\") !== max) {\n\t\t\t\tthis.setPrivate(\"minFinal\", min);\n\t\t\t\tthis.setPrivate(\"maxFinal\", max);\n\t\t\t\tthis._saveMinMax(min, max);\n\n\t\t\t\tconst duration = this.get(\"interpolationDuration\", 0);\n\t\t\t\tconst easing = this.get(\"interpolationEasing\");\n\n\t\t\t\tthis.animatePrivate({ key: \"min\", to: min, duration, easing });\n\t\t\t\tthis.animatePrivate({ key: \"max\", to: max, duration, easing });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _fixZoomFactor() {\n\t}\n\n\tprotected _getDelta(max: number) {\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(max)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tthis._deltaMinMax = power;\n\t}\n\n\tprotected _saveMinMax(_min: number, _max: number) {\n\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\t// will fail if 0\n\t\tif (gridCount <= 1) {\n\t\t\tgridCount = 1;\n\t\t}\n\n\t\tgridCount = Math.round(gridCount);\n\n\t\tlet initialMin: number = min;\n\t\tlet initialMax: number = max;\n\n\t\tlet difference = max - min;\n\n\t\t// in case min and max is the same, use max\n\t\tif (difference === 0) {\n\t\t\tdifference = Math.abs(max);\n\t\t}\n\n\t\t// the number by which we need to raise 10 to get difference\n\t\tlet exponent: number = Math.log(Math.abs(difference)) * Math.LOG10E;\n\n\t\t// here we find a number which is power of 10 and has the same count of numbers as difference has\n\t\tlet power = Math.pow(10, Math.floor(exponent));\n\n\t\t// reduce this number by 10 times\n\t\tpower = power / 10;\n\n\t\tlet extra: number = power;\n\t\tif (strictMode) {\n\t\t\textra = 0;\n\t\t}\n\n\t\t// round down min\n\t\tif (strictMode) {\n\t\t\tmin = Math.floor(min / power) * power;\n\t\t\t// round up max\n\t\t\tmax = Math.ceil(max / power) * power;\n\t\t}\n\t\telse {\n\t\t\tmin = Math.ceil(min / power) * power - extra;\n\t\t\t// round up max\n\t\t\tmax = Math.floor(max / power) * power + extra;\n\t\t}\n\n\t\t// don't let min go below 0 if real min is >= 0\n\t\tif (min < 0 && initialMin >= 0) {\n\t\t\tmin = 0;\n\t\t}\n\t\t// don't let max go above 0 if real max is <= 0\n\t\tif (max > 0 && initialMax <= 0) {\n\t\t\tmax = 0;\n\t\t}\n\n\t\texponent = Math.log(Math.abs(difference)) * Math.LOG10E;\n\t\tpower = Math.pow(10, Math.floor(exponent));\n\t\tpower = power / 100; // used to be 10 in v4, but this caused issue that there could be limited number of grids with even very small minGridDistance\n\n\t\t// approximate difference between two grid lines\n\t\tlet step = Math.ceil((difference / gridCount) / power) * power;\n\t\tlet stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));\n\n\t\t// the step should divide by  2, 5, and 10.\n\t\tlet stepDivisor: number = Math.ceil(step / stepPower); // number 0 - 10\n\n\t\tif (stepDivisor > 5) {\n\t\t\tstepDivisor = 10;\n\t\t}\n\t\telse if (stepDivisor <= 5 && stepDivisor > 2) {\n\t\t\tstepDivisor = 5;\n\t\t}\n\n\t\t// now get real step\n\t\tstep = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;\n\n\t\tlet maxPrecision = this.get(\"maxPrecision\");\n\t\tif ($type.isNumber(maxPrecision)) {\n\t\t\tlet ceiledStep = $math.ceil(step, maxPrecision);\n\t\t\tif (maxPrecision < Number.MAX_VALUE && step !== ceiledStep) {\n\t\t\t\tstep = ceiledStep;\n\t\t\t}\n\t\t}\n\n\t\tlet decCount: number = 0;\n\t\t// in case numbers are smaller than 1\n\t\tif (stepPower < 1) {\n\t\t\t// exponent is less then 1 too. Count decimals of exponent\n\t\t\tdecCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;\n\t\t\t// round step\n\t\t\tstep = $math.round(step, decCount);\n\t\t}\n\n\t\t// final min and max\n\t\tlet minCount = Math.floor(min / step);\n\n\t\tmin = $math.round(step * minCount, decCount);\n\n\t\tlet maxCount: number;\n\n\t\tif (!strictMode) {\n\t\t\tmaxCount = Math.ceil(max / step);\n\t\t}\n\t\telse {\n\t\t\tmaxCount = Math.floor(max / step);\n\t\t}\n\n\t\tif (maxCount === minCount) {\n\t\t\tmaxCount++;\n\t\t}\n\n\t\tmax = $math.round(step * maxCount, decCount);\n\n\t\tif (max < initialMax) {\n\t\t\tmax = max + step;\n\t\t}\n\n\t\tif (min > initialMin) {\n\t\t\tmin = min - step;\n\t\t}\n\n\n\t\tstep = this.fixSmallStep(step);\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst numberFormat = this.get(\"tooltipNumberFormat\", this.get(\"numberFormat\"));\n\t\tconst formatter = this.getNumberFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\tif (numberFormat) {\n\t\t\treturn formatter.format(value, numberFormat);\n\t\t}\n\t\telse {\n\t\t\treturn formatter.format(value, undefined, decimals);\n\t\t\t//label.set(\"text\", this.getNumberFormatter().format(value, undefined, this.getPrivate(\"stepDecimalPlaces\")));\n\t\t}\n\n\t\t// //@todo number formatter + tag\n\t\t// return $math.round(this.positionToValue(position), this.getPrivate(\"stepDecimalPlaces\")).toString();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\tlet value = this.positionToValue(position);\n\n\t\tlet index: number | undefined = undefined;\n\t\tlet oldDiff: number;\n\t\t$array.each(series.dataItems, (dataItem, i) => {\n\t\t\tconst diff = Math.abs(dataItem.get(fieldName) - value);\n\t\t\tif (index === undefined || diff < oldDiff) {\n\t\t\t\tindex = i;\n\t\t\t\toldDiff = diff;\n\t\t\t}\n\t\t});\n\n\t\tif (index != null) {\n\t\t\treturn series.dataItems[index];\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` values.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start value\n\t * @param  end       End value\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToValues(start: number, end: number, duration?: number) {\n\t\tconst min = this.getPrivate(\"minFinal\", 0);\n\t\tconst max = this.getPrivate(\"maxFinal\", 0);\n\t\tif (this.getPrivate(\"min\") != null && this.getPrivate(\"max\") != null) {\n\t\t\tthis.zoom((start - min) / (max - min), (end - min) / (max - min), duration);\n\t\t}\n\t}\n\n\n\t/**\n\t * Syncs with a target axis.\n\t *\n\t * @param  min  Min\n\t * @param  max  Max\n\t * @param  step Step\n\t */\n\tprotected _syncAxes(min: number, max: number, step: number, syncMin: number, syncMax: number, syncStep: number) {\n\t\tlet axis = this.get(\"syncWithAxis\");\n\t\tif (axis) {\n\t\t\tlet count: number = Math.round(syncMax - syncMin) / syncStep;\n\t\t\tlet currentCount = Math.round((max - min) / step);\n\n\t\t\tlet gridCount = this.get(\"renderer\").gridCount();\n\n\t\t\tif ($type.isNumber(count) && $type.isNumber(currentCount)) {\n\t\t\t\tlet synced = false;\n\t\t\t\tlet c = 0\n\t\t\t\tlet diff = (max - min) * 0.01;\n\t\t\t\tlet omin = min;\n\t\t\t\tlet omax = max;\n\t\t\t\tlet ostep = step;\n\n\t\t\t\twhile (synced != true) {\n\t\t\t\t\tsynced = this._checkSync(omin, omax, ostep, count);\n\t\t\t\t\tc++;\n\t\t\t\t\tif (c > 500) {\n\t\t\t\t\t\tsynced = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!synced) {\n\t\t\t\t\t\tif (c / 3 == Math.round(c / 3)) {\n\t\t\t\t\t\t\tomin = min - diff * c;\n\t\t\t\t\t\t\tif (min >= 0 && omin < 0) {\n\t\t\t\t\t\t\t\tomin = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tomax = max + diff * c;\n\t\t\t\t\t\t\tif (omax <= 0 && omax > 0) {\n\t\t\t\t\t\t\t\tomax = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet minMaxStep = this._adjustMinMax(omin, omax, gridCount, true);\n\t\t\t\t\t\tomin = minMaxStep.min;\n\t\t\t\t\t\tomax = minMaxStep.max;\n\t\t\t\t\t\tostep = minMaxStep.step;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tmin = omin;\n\t\t\t\t\t\tmax = omax;\n\t\t\t\t\t\tstep = ostep;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { min: min, max: max, step: step };\n\t}\n\n\t/**\n\t * Returns `true` if axis needs to be resunced with some other axis.\n\t */\n\tprotected _checkSync(min: number, max: number, step: number, count: number): boolean {\n\t\tlet currentCount = (max - min) / step;\n\t\tfor (let i = 1; i < count; i++) {\n\t\t\tif ($math.round(currentCount / i, 1) == count || currentCount * i == count) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns relative position between two grid lines of the axis.\n\t *\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\tlet max = this.getPrivate(\"selectionMax\", this.getPrivate(\"max\"));\n\t\tlet min = this.getPrivate(\"selectionMin\", this.getPrivate(\"min\"));\n\n\t\tif ($type.isNumber(max) && $type.isNumber(min)) {\n\t\t\treturn this.getPrivate(\"step\", 1) / (max - min);\n\t\t}\n\t\treturn 0.05;\n\t}\n\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { Graphics } from \"../../../core/render/Graphics\";\nimport type { Template } from \"../../../core/util/Template\";\nimport type { ListTemplate } from \"../../../core/util/List\";\nimport type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ValueAxis } from \"../axes/ValueAxis\";\nimport type { IAxisDataItem } from \"../axes/Axis\";\nimport type { ILegendDataItem } from \"../../../core/render/Legend\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Percent } from \"../../../core/util/Percent\";\nimport { visualSettings } from \"../../../core/render/Graphics\";\n\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\n\nexport interface IBaseColumnSeriesDataItem extends IXYSeriesDataItem {\n\n\t/**\n\t * An actual [[Graphics]] element (Column/Slice/Candlestick/OHLC).\n\t */\n\tgraphics?: Graphics;\n\n\t/**\n\t * In case axis ranges are added to the series, it creates a separate\n\t * element ([[Graphics]]) for each axis range. This array holds them all.\n\t */\n\trangeGraphics?: Array<Graphics>;\n\n\t/**\n\t * If data items from this series are used to feed a [[Legend]], this\n\t * will hold a reference to the equivalent Legend data item.\n\t * \n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/legend/#Data_item_list} for more info\n\t */\n\tlegendDataItem?: DataItem<ILegendDataItem>;\n}\n\nexport interface IBaseColumnSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * Indicates if series must divvy up available space with other column\n\t * series (`true`; default) or take up the whole available space (`false`).\n\t *\n\t * @default true\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/column-series/#Clustering} for more info\n\t */\n\tclustered?: boolean;\n\n\t/**\n\t * Whether positions of bullets should be calculated based on portion of\n\t * column currently visual (`true`) or the whole length/height of the\n\t * column (`false`).\n\t *\n\t * @default true\n\t */\n\tadjustBulletPosition?: boolean;\n\n\t/**\n\t * If set to `true` will use color of the last visible column for legend\n\t * marker. Otherwise, series `fill`/`stroke` will be used.\n\t *\n\t * @since 5.1.13\n\t */\n\tuseLastColorForLegendMarker?: boolean\n\n}\n\nexport interface IBaseColumnSeriesPrivate extends IXYSeriesPrivate { }\n\nexport interface IBaseColumnSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list of actual [[Graphics]] elements for an axis range.\n\t *\n\t * Can be used to ajust the look of the axis range columns.\n\t */\n\tcolumns: ListTemplate<Graphics>;\n\n}\n\n/**\n * Base class for all \"column-based\" series\n */\nexport abstract class BaseColumnSeries extends XYSeries {\n\n\tdeclare public _settings: IBaseColumnSeriesSettings;\n\tdeclare public _privateSettings: IBaseColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: IBaseColumnSeriesDataItem;\n\tdeclare public _axisRangeType: IBaseColumnSeriesAxisRange;\n\n\tpublic static className: string = \"BaseColumnSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([BaseColumnSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Graphics>): Graphics\n\n\t/**\n\t * ListTemplate of columns in series.\n\t */\n\tpublic abstract columns: ListTemplate<Graphics>;\n\n\tprotected _makeGraphics(listTemplate: ListTemplate<Graphics>, dataItem: DataItem<this[\"_dataItemSettings\"]>): Graphics {\n\t\treturn this.makeColumn(dataItem, listTemplate);\n\t}\n\n\tprotected _ph: number = 0;\n\tprotected _pw: number = 0;\n\n\tpublic _makeFieldNames() {\n\t\tsuper._makeFieldNames();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst categoryAxis = \"CategoryAxis\";\n\t\tconst valueAxis = \"ValueAxis\";\n\n\t\tif (xAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueXField\")) {\n\t\t\t\tthis._xOpenField = this._xField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<CategoryAxis<any>>(categoryAxis)) {\n\t\t\tif (!this.get(\"openCategoryYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\n\t\tif (yAxis.isType<DateAxis<any>>(valueAxis)) {\n\t\t\tif (!this.get(\"openValueYField\")) {\n\t\t\t\tthis._yOpenField = this._yField;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tconst len = this.dataItems.length;\n\t\tconst startIndex = Math.max(0, this.startIndex() - 2);\n\t\tconst endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tthis._createGraphics(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tthis._ph = chart.plotContainer.height();\n\t\t\tthis._pw = chart.plotContainer.width();\n\t\t}\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\")!;\n\n\t\tconst columnsTemplate = this.columns.template;\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tif (columnsTemplate.get(\"fill\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"fill\", this.get(\"fill\"));\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tif (columnsTemplate.get(\"stroke\") == null) {\n\t\t\t\tcolumnsTemplate.set(\"stroke\", this.get(\"stroke\"));\n\t\t\t}\n\t\t}\n\n\t\tlet index = 0;\n\t\tlet clusterCount = 0;\n\t\tlet i = 0;\n\n\t\t$array.each(baseAxis.series, (series) => {\n\t\t\tif (series instanceof BaseColumnSeries) {\n\t\t\t\tconst stacked = series.get(\"stacked\");\n\n\t\t\t\tif (stacked && i == 0) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\n\t\t\t\tif (!stacked && series.get(\"clustered\")) {\n\t\t\t\t\tclusterCount++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (series === this) {\n\t\t\t\tindex = clusterCount - 1;\n\t\t\t}\n\t\t\ti++;\n\t\t})\n\n\t\tif (!this.get(\"clustered\")) {\n\t\t\tindex = 0;\n\t\t\tclusterCount = 1;\n\t\t}\n\n\t\tif (clusterCount === 0) {\n\t\t\tclusterCount = 1;\n\t\t\tindex = 0;\n\t\t}\n\n\t\tconst xRenderer = xAxis.get(\"renderer\");\n\t\tconst yRenderer = yAxis.get(\"renderer\");\n\n\t\tconst cellStartLocation = \"cellStartLocation\";\n\t\tconst cellEndLocation = \"cellEndLocation\";\n\n\t\tconst cellLocationX0 = xRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationX1 = xRenderer.get(cellEndLocation, 1);\n\n\t\tconst cellLocationY0 = yRenderer.get(cellStartLocation, 0);\n\t\tconst cellLocationY1 = yRenderer.get(cellEndLocation, 1);\n\n\t\tthis._aLocationX0 = cellLocationX0 + (index / clusterCount) * (cellLocationX1 - cellLocationX0);\n\t\tthis._aLocationX1 = cellLocationX0 + (index + 1) / clusterCount * (cellLocationX1 - cellLocationX0);;\n\n\t\tthis._aLocationY0 = cellLocationY0 + (index / clusterCount) * (cellLocationY1 - cellLocationY0);\n\t\tthis._aLocationY1 = cellLocationY0 + (index + 1) / clusterCount * (cellLocationY1 - cellLocationY0);\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty) {\n\t\t\t\tconst len = this.dataItems.length;\n\n\t\t\t\tlet startIndex = Math.max(0, this.startIndex() - 2);\n\t\t\t\tlet endIndex = Math.min(this.endIndex() + 2, len - 1);\n\n\t\t\t\tfor (let i = 0; i < startIndex; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t\tlet previous = this.dataItems[startIndex];\n\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\tif (i > 0 && startIndex > 0) {\n\t\t\t\t\t\t\tfor (let j = i - 1; j >= 0; j--) {\n\t\t\t\t\t\t\t\tlet dataItem = this.dataItems[j];\n\t\t\t\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tthis._updateGraphics(dataItem, previous);\n\t\t\t\t\tif (dataItem.get(\"valueX\") != null && dataItem.get(\"valueY\") != null) {\n\t\t\t\t\t\tprevious = dataItem;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (let i = endIndex + 1; i < len; i++) {\n\t\t\t\t\tthis._toggleColumn(this.dataItems[i], false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\t\tthis.updateLegendMarker(this.get(\"tooltipDataItem\"));\n\t\tsuper._updateChildren();\n\t}\n\n\n\tprotected _createGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\");\n\t\tif (!graphics) {\n\n\t\t\tgraphics = this._makeGraphics(this.columns, dataItem);\n\t\t\tdataItem.set(\"graphics\", graphics);\n\t\t\tgraphics._setDataItem(dataItem);\n\n\t\t\tconst legendDataItem = dataItem.get(\"legendDataItem\");\n\t\t\tif (legendDataItem) {\n\t\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\t\tif (markerRectangle) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics!.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet graphicsArray: Array<Graphics> | undefined = dataItem.get(\"rangeGraphics\");\n\t\t\tif (graphicsArray) {\n\t\t\t\t$array.each(graphicsArray, (graphics) => {\n\t\t\t\t\tgraphics.dispose();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tgraphicsArray = [];\n\t\t\tdataItem.setRaw(\"rangeGraphics\", graphicsArray);\n\n\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\tconst container = axisRange.container!;\n\t\t\t\tconst rangeGraphics = this._makeGraphics(axisRange.columns, dataItem);\n\t\t\t\tif (graphicsArray) {\n\t\t\t\t\tgraphicsArray.push(rangeGraphics);\n\t\t\t\t}\n\t\t\t\trangeGraphics.setPrivate(\"list\", axisRange.columns);\n\t\t\t\tcontainer.children.push(rangeGraphics);\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tconst graphics = dataItem.get(\"graphics\");\n\t\t\tif (graphics) {\n\t\t\t\tgraphics.dispose();\n\t\t\t\tdataItem.set(\"graphics\", undefined);\n\t\t\t}\n\t\t})\n\n\t\treturn super.createAxisRange(axisDataItem);\n\t}\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tlet graphics = dataItem.get(\"graphics\")!;\n\n\t\t//if (!graphics) {\n\t\t//\tthis._createGraphics(dataItem);\n\t\t//\tgraphics = dataItem.get(\"graphics\")!;\n\t\t//}\n\n\t\tconst xField = this._xField;\n\t\tconst yField = this._yField;\n\n\t\tconst valueX = dataItem.get(xField as any);\n\t\tconst valueY = dataItem.get(yField as any);\n\n\t\tif (valueX != null && valueY != null) {\n\t\t\tconst xOpenField = this._xOpenField;\n\t\t\tconst yOpenField = this._yOpenField;\n\n\t\t\tconst locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tconst locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tconst openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\t\tconst openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\t\tconst width = graphics.get(\"width\");\n\t\t\tconst height = graphics.get(\"height\");\n\n\t\t\tconst stacked = this.get(\"stacked\");\n\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tconst xStart = xAxis.get(\"start\");\n\t\t\tconst xEnd = xAxis.get(\"end\");\n\n\t\t\tconst yStart = yAxis.get(\"start\");\n\t\t\tconst yEnd = yAxis.get(\"end\");\n\n\t\t\tlet l!: number;\n\t\t\tlet r!: number;\n\t\t\tlet t!: number;\n\t\t\tlet b!: number;\n\n\t\t\tlet vcy = this.get(\"vcy\", 1);\n\t\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\t\tlet fitW = false;\n\t\t\tlet fitH = false;\n\n\t\t\tif (yAxis.isType<CategoryAxis<any>>(\"CategoryAxis\") && xAxis.isType<CategoryAxis<any>>(\"CategoryAxis\")) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\n\t\t\t\tstartLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tendLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t + (b - t) / 2 });\n\t\t\t}\n\t\t\telse if (xAxis === baseAxis) {\n\n\t\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\t\tif (width instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - width.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, startLocation, vcx);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, endLocation, vcx);\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yField, locationY, vcy);\n\n\t\t\t\tif (this._yOpenField !== this._yField) {\n\t\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yOpenField, openLocationY, vcy);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\tb = yAxis.getDataItemPositionY(stackToItemY, yField, openLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tb = yAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdataItem.setRaw(\"point\", { x: l + (r - l) / 2, y: t });\n\n\t\t\t\tfitH = true;\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\t\tif (height instanceof Percent) {\n\t\t\t\t\tlet offset: number = (endLocation - startLocation) * (1 - height.value) / 2;\n\t\t\t\t\tstartLocation += offset;\n\t\t\t\t\tendLocation -= offset;\n\t\t\t\t}\n\n\t\t\t\tt = yAxis.getDataItemPositionY(dataItem, yOpenField, startLocation, vcy);\n\t\t\t\tb = yAxis.getDataItemPositionY(dataItem, yField, endLocation, vcy);\n\t\t\t\tr = xAxis.getDataItemPositionX(dataItem, xField, locationX, vcx);\n\n\t\t\t\tif (this._xOpenField !== this._xField) {\n\t\t\t\t\tl = xAxis.getDataItemPositionX(dataItem, xOpenField, openLocationX, vcx);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\tl = xAxis.getDataItemPositionX(stackToItemX, xField, openLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tl = xAxis.basePosition();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfitW = true;\n\n\t\t\t\tdataItem.setRaw(\"point\", { x: r, y: t + (b - t) / 2 });\n\t\t\t}\n\n\t\t\tthis._updateSeriesGraphics(dataItem, graphics!, l, r, t, b, fitW, fitH);\n\n\t\t\tif ((l < xStart && r < xStart) || (l > xEnd && r > xEnd) || (t < yStart && b <= yStart) || (t >= yEnd && b > yEnd) || $type.isNaN(l) || $type.isNaN(t)) {\n\t\t\t\tthis._toggleColumn(dataItem, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._toggleColumn(dataItem, true);\n\t\t\t}\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\t\tthis._updateSeriesGraphics(dataItem, graphics, l, r, t, b, fitW, fitH);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tthis._applyGraphicsStates(dataItem, previousDataItem);\n\t\t}\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number, fitW: boolean, fitH: boolean) {\n\t\tconst width = graphics.get(\"width\");\n\t\tconst height = graphics.get(\"height\");\n\t\tconst maxWidth = graphics.get(\"maxWidth\");\n\t\tconst maxHeight = graphics.get(\"maxHeight\");\n\n\t\tconst ptl = this.getPoint(l, t);\n\t\tconst pbr = this.getPoint(r, b);\n\n\t\tconst tooltipPoint = dataItem.get(\"point\");\n\n\t\tif (tooltipPoint) {\n\t\t\tconst point = this.getPoint(tooltipPoint.x, tooltipPoint.y);\n\t\t\ttooltipPoint.x = point.x + this._x;\n\t\t\ttooltipPoint.y = point.y + this._y;\n\t\t}\n\n\t\tl = ptl.x;\n\t\tr = pbr.x;\n\n\t\tt = ptl.y;\n\t\tb = pbr.y;\n\n\t\tif ($type.isNumber(width)) {\n\t\t\tconst offset: number = ((r - l) - width) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxWidth) && maxWidth < Math.abs(r - l)) {\n\t\t\tconst offset: number = ((r - l) - maxWidth) / 2;\n\t\t\tl += offset;\n\t\t\tr -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(height)) {\n\t\t\tconst offset: number = ((b - t) - height) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif ($type.isNumber(maxHeight) && maxHeight < Math.abs(b - t)) {\n\t\t\tconst offset: number = ((b - t) - maxHeight) / 2;\n\t\t\tt += offset;\n\t\t\tb -= offset;\n\t\t}\n\n\t\tif (this.get(\"adjustBulletPosition\")) {\n\t\t\tif (fitW) {\n\t\t\t\tr = Math.min(Math.max(0, r), this._pw);\n\t\t\t\tl = Math.min(Math.max(0, l), this._pw);\n\t\t\t}\n\n\t\t\tif (fitH) {\n\t\t\t\tt = Math.min(Math.max(0, t), this._ph);\n\t\t\t\tb = Math.min(Math.max(0, b), this._ph);\n\t\t\t}\n\t\t}\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tgraphics.setPrivate(\"width\", r - l);\n\t\tgraphics.setPrivate(\"height\", b - t);\n\t\tgraphics.set(\"x\", l);\n\t\tgraphics.set(\"y\", b - (b - t));\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tsuper._handleDataSetChange();\n\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\tthis._toggleColumn(dataItem, false);\n\t\t})\n\t}\n\n\tpublic _applyGraphicsStates(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst graphics = dataItem.get(\"graphics\")!;\n\n\t\tconst dropFromOpen = graphics.states.lookup(\"dropFromOpen\");\n\t\tconst riseFromOpen = graphics.states.lookup(\"riseFromOpen\");\n\n\t\tconst dropFromPrevious = graphics.states.lookup(\"dropFromPrevious\");\n\t\tconst riseFromPrevious = graphics.states.lookup(\"riseFromPrevious\");\n\n\t\tif (dropFromOpen || dropFromPrevious || riseFromOpen || riseFromPrevious) {\n\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\tconst yAxis = this.get(\"yAxis\");\n\t\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\t\tlet open: number | undefined;\n\t\t\tlet close: number | undefined;\n\t\t\tlet previousClose: number | undefined;\n\n\t\t\tif (baseAxis === xAxis && yAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._yOpenField as any);\n\t\t\t\tclose = dataItem.get(this._yField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._yField as any);\n\t\t\t}\n\t\t\telse if (baseAxis === yAxis && xAxis.isType<ValueAxis<any>>(\"ValueAxis\")) {\n\t\t\t\topen = dataItem.get(this._xOpenField as any);\n\t\t\t\tclose = dataItem.get(this._xField as any);\n\n\t\t\t\tpreviousClose = previousDataItem.get(this._xField as any);\n\t\t\t}\n\n\t\t\tif ($type.isNumber(open) && $type.isNumber(close)) {\n\t\t\t\tif (close < open) {\n\t\t\t\t\tif (dropFromOpen) {\n\t\t\t\t\t\tdropFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (riseFromOpen) {\n\t\t\t\t\t\triseFromOpen.apply();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ($type.isNumber(previousClose)) {\n\t\t\t\t\tif (close < previousClose) {\n\t\t\t\t\t\tif (dropFromPrevious) {\n\t\t\t\t\t\t\tdropFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (riseFromPrevious) {\n\t\t\t\t\t\t\triseFromPrevious.apply();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tthis.columns.removeValue(graphics);\n\t\t\tgraphics.dispose();\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tconst list = graphics.getPrivate(\"list\");\n\t\t\t\tif (list) {\n\t\t\t\t\tlist.removeValue(graphics);\n\t\t\t\t}\n\t\t\t\tgraphics.dispose();\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.hide(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.hide(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected _toggleColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, visible: boolean) {\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tgraphics.setPrivate(\"visible\", visible);\n\t\t\t})\n\t\t}\n\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tbullet.setPrivate(\"hidden\", !visible);\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t * \n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst graphics = dataItem.get(\"graphics\");\n\t\tif (graphics) {\n\t\t\tpromises.push(graphics.show(duration));\n\t\t}\n\n\t\tconst rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\tif (rangeGraphics) {\n\t\t\t$array.each(rangeGraphics, (graphics) => {\n\t\t\t\tpromises.push(graphics.show(duration));\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendMarker(dataItem?: DataItem<IBaseColumnSeriesDataItem>) {\n\t\tlet legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (this.get(\"useLastColorForLegendMarker\")) {\n\t\t\tif (!dataItem) {\n\t\t\t\tconst lastDataItem = this.dataItems[this.endIndex() - 1];\n\t\t\t\tif (lastDataItem) {\n\t\t\t\t\tdataItem = lastDataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (legendDataItem) {\n\n\t\t\tlet graphics: Template<Graphics> | Graphics = this.columns.template;\n\t\t\tif (dataItem) {\n\t\t\t\tlet column = dataItem.get(\"graphics\");\n\t\t\t\tif (column) {\n\t\t\t\t\tgraphics = column;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\n\t\t\tif (markerRectangle) {\n\t\t\t\tif (!legendDataItem.get(\"itemContainer\").get(\"disabled\")) {\n\t\t\t\t\tconst ds = markerRectangle.states.lookup(\"default\")!;\n\t\t\t\t\t$array.each(visualSettings, (setting: any) => {\n\t\t\t\t\t\tconst value = graphics.get(setting, this.get(setting));\n\t\t\t\t\t\tmarkerRectangle.set(setting, value);\n\t\t\t\t\t\tds.set(setting, value);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\treturn super._getTooltipTarget(dataItem);\n\t\t}\n\n\t\tlet column = dataItem.get(\"graphics\");\n\t\tif (column) {\n\t\t\treturn column;\n\t\t}\n\t\treturn this;\n\t}\n}\n","import { RoundedRectangle, IRoundedRectangleSettings, IRoundedRectanglePrivate } from \"../../../core/render/RoundedRectangle\";\n\n\nexport interface ICandlestickSettings extends IRoundedRectangleSettings {\n\n\t/**\n\t * X0 position of the low value in pixels.\n\t */\n\tlowX0?: number;\n\n\t/**\n\t * Y0 position of the low value in pixels.\n\t */\n\tlowY0?: number;\n\n\t/**\n\t * X2 position of the low value in pixels.\n\t */\n\tlowX1?: number;\n\n\t/**\n\t * Y1 position of the low value in pixels.\n\t */\n\tlowY1?: number;\n\n\t/**\n\t * X0 position of the high value in pixels.\n\t */\n\thighX0?: number;\n\n\t/**\n\t * Y0 position of the high value in pixels.\n\t */\n\thighY0?: number;\n\n\t/**\n\t * Xz position of the high value in pixels.\n\t */\n\thighX1?: number;\n\n\t/**\n\t * Y1 position of the high value in pixels.\n\t */\n\thighY1?: number;\n\n\t/**\n\t * Orientation of the cnadlestick.\n\t */\n\torientation?: \"horizontal\" | \"vertical\"\n\n}\n\nexport interface ICandlestickPrivate extends IRoundedRectanglePrivate {\n}\n\n/**\n * A candle element used in a [[CandlestickSeries]].\n */\nexport class Candlestick extends RoundedRectangle {\n\n\tdeclare public _settings: ICandlestickSettings;\n\tdeclare public _privateSettings: ICandlestickPrivate;\n\n\tpublic static className: string = \"Candlestick\";\n\tpublic static classNames: Array<string> = RoundedRectangle.classNames.concat([Candlestick.className]);\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"lowX0\") || this.isDirty(\"lowY0\") || this.isDirty(\"lowX1\") || this.isDirty(\"lowY1\") || this.isDirty(\"highX0\") || this.isDirty(\"highX1\") || this.isDirty(\"highY0\") || this.isDirty(\"highY1\")) {\n\t\t\tthis._clear = true;\n\t\t}\n\t}\n\n\tpublic _draw() {\n\t\tsuper._draw();\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX0\", 0), this.get(\"lowY0\", 0));\n\t\tdisplay.lineTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\n\t\tdisplay.moveTo(this.get(\"highX0\", 0), this.get(\"highY0\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { ColumnSeries, IColumnSeriesPrivate, IColumnSeriesSettings, IColumnSeriesDataItem, IColumnSeriesAxisRange } from \"./ColumnSeries\";\nimport { Candlestick } from \"./Candlestick\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $array from \"../../../core/util/Array\";\n\nexport interface ICandlestickSeriesDataItem extends IColumnSeriesDataItem {\n}\n\nexport interface ICandlestickSeriesSettings extends IColumnSeriesSettings {\n}\n\nexport interface ICandlestickSeriesPrivate extends IColumnSeriesPrivate {\n}\n\nexport interface ICandlestickSeriesAxisRange extends IColumnSeriesAxisRange {\n\n\t/**\n\t * A list of [[Candlestick]] element in series.\n\t *\n\t * @readonly\n\t */\n\tcolumns: ListTemplate<Candlestick>\n\n}\n\n/**\n * Candlestick series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class CandlestickSeries extends ColumnSeries {\n\n\tdeclare public _settings: ICandlestickSeriesSettings;\n\tdeclare public _privateSettings: ICandlestickSeriesPrivate;\n\tdeclare public _dataItemSettings: ICandlestickSeriesDataItem;\n\tdeclare public _axisRangeType: ICandlestickSeriesAxisRange;\n\n\tpublic static className: string = \"CandlestickSeries\";\n\tpublic static classNames: Array<string> = ColumnSeries.classNames.concat([CandlestickSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Candlestick>): Candlestick {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of candles in the series.\n\t *\n\t * `columns.template` can be used to configure candles.\n\t *\n\t * @default new ListTemplate<Candlestick>\n\t */\n\tpublic readonly columns: ListTemplate<Candlestick> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => Candlestick._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _updateGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, previousDataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateGraphics(dataItem, previousDataItem);\n\n\t\tconst xAxis = this.getRaw(\"xAxis\");\n\t\tconst yAxis = this.getRaw(\"yAxis\");\n\t\tconst baseAxis = this.getRaw(\"baseAxis\");\n\n\t\tlet vcy = this.get(\"vcy\", 1);\n\t\tlet vcx = this.get(\"vcx\", 1);\n\n\t\tlet lx0: number;\n\t\tlet lx1: number;\n\t\tlet ly0: number;\n\t\tlet ly1: number;\n\n\t\tlet hx0: number;\n\t\tlet hx1: number;\n\t\tlet hy0: number;\n\t\tlet hy1: number;\n\n\t\tlet locationX = this.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\tlet locationY = this.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\tlet openLocationX = this.get(\"openLocationX\", dataItem.get(\"openLocationX\", locationX));\n\t\tlet openLocationY = this.get(\"openLocationY\", dataItem.get(\"openLocationY\", locationY));\n\n\t\tlet orientation: \"horizontal\" | \"vertical\";\n\n\t\tif (yAxis === baseAxis) {\n\t\t\tlet open = xAxis.getDataItemPositionX(dataItem, this._xOpenField, 1, vcx);\n\t\t\tlet close = xAxis.getDataItemPositionX(dataItem, this._xField, 1, vcx);\n\n\t\t\tlx1 = xAxis.getDataItemPositionX(dataItem, this._xLowField, 1, vcx);\n\t\t\thx1 = xAxis.getDataItemPositionX(dataItem, this._xHighField, 1, vcx);\n\n\t\t\thx0 = Math.max(open, close);\n\t\t\tlx0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationY0 + openLocationY - 0.5;\n\t\t\tlet endLocation = this._aLocationY1 + locationY - 0.5;\n\n\t\t\tly0 = yAxis.getDataItemPositionY(dataItem, this._yField, startLocation + (endLocation - startLocation) / 2, vcy);\n\t\t\tly1 = ly0;\n\t\t\thy0 = ly0;\n\t\t\thy1 = ly0;\n\n\t\t\torientation = \"horizontal\";\n\t\t}\n\t\telse {\n\t\t\tlet open = yAxis.getDataItemPositionY(dataItem, this._yOpenField, 1, vcy);\n\t\t\tlet close = yAxis.getDataItemPositionY(dataItem, this._yField, 1, vcy);\n\n\t\t\tly1 = yAxis.getDataItemPositionY(dataItem, this._yLowField, 1, vcy);\n\t\t\thy1 = yAxis.getDataItemPositionY(dataItem, this._yHighField, 1, vcy);\n\n\t\t\thy0 = Math.max(open, close);\n\t\t\tly0 = Math.min(open, close);\n\n\t\t\tlet startLocation = this._aLocationX0 + openLocationX - 0.5;\n\t\t\tlet endLocation = this._aLocationX1 + locationX - 0.5;\n\n\t\t\tlx0 = xAxis.getDataItemPositionX(dataItem, this._xField, startLocation + (endLocation - startLocation) / 2, vcx);\n\t\t\tlx1 = lx0;\n\t\t\thx0 = lx0;\n\t\t\thx1 = lx0;\n\n\t\t\torientation = \"vertical\";\n\t\t}\n\n\t\tthis._updateCandleGraphics(dataItem, lx0, lx1, ly0, ly1, hx0, hx1, hy0, hy1, orientation)\n\t}\n\n\tprotected _updateCandleGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, lx0: number, lx1: number, ly0: number, ly1: number, hx0: number, hx1: number, hy0: number, hy1: number, orientation: \"horizontal\" | \"vertical\") {\n\t\tlet column = dataItem.get(\"graphics\") as Candlestick;\n\n\t\tif (column) {\n\t\t\tlet pl0 = this.getPoint(lx0, ly0);\n\t\t\tlet pl1 = this.getPoint(lx1, ly1);\n\n\t\t\tlet ph0 = this.getPoint(hx0, hy0);\n\t\t\tlet ph1 = this.getPoint(hx1, hy1);\n\n\t\t\tlet x = column.x();\n\t\t\tlet y = column.y();\n\n\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\tcolumn.set(\"orientation\", orientation);\n\n\t\t\tlet rangeGraphics = dataItem.get(\"rangeGraphics\")!;\n\t\t\tif (rangeGraphics) {\n\t\t\t\t$array.each(rangeGraphics, (column: any) => {\n\t\t\t\t\tcolumn.set(\"lowX0\", pl0.x - x);\n\t\t\t\t\tcolumn.set(\"lowY0\", pl0.y - y);\n\n\t\t\t\t\tcolumn.set(\"lowX1\", pl1.x - x);\n\t\t\t\t\tcolumn.set(\"lowY1\", pl1.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX0\", ph0.x - x);\n\t\t\t\t\tcolumn.set(\"highY0\", ph0.y - y);\n\n\t\t\t\t\tcolumn.set(\"highX1\", ph1.x - x);\n\t\t\t\t\tcolumn.set(\"highY1\", ph1.y - y);\n\n\t\t\t\t\tcolumn.set(\"orientation\", orientation);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Candlestick._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"candlestick\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"./BaseColumnSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IColumnSeriesDataItem extends IBaseColumnSeriesDataItem { }\r\n\r\nexport interface IColumnSeriesSettings extends IBaseColumnSeriesSettings { }\r\n\r\nexport interface IColumnSeriesPrivate extends IBaseColumnSeriesPrivate { }\r\n\r\nexport interface IColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\r\n\t/**\r\n\t * A list of actual columns in a range.\r\n\t */\r\n\tcolumns: ListTemplate<RoundedRectangle>\r\n}\r\n\r\nexport class ColumnSeries extends BaseColumnSeries {\r\n\r\n\tdeclare public _settings: IColumnSeriesSettings;\r\n\tdeclare public _privateSettings: IColumnSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IColumnSeriesDataItem;\r\n\tdeclare public _axisRangeType: IColumnSeriesAxisRange;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<RoundedRectangle>): RoundedRectangle {\r\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\r\n\t\tcolumn._setDataItem(dataItem);\r\n\t\tlistTemplate.push(column);\r\n\t\treturn column;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[TemplateList]] of all columns in series.\r\n\t *\r\n\t * `columns.template` can be used to set default settings for all columns,\r\n\t * or to change on existing ones.\r\n\t */\r\n\tpublic readonly columns: ListTemplate<RoundedRectangle> = new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\tposition: \"absolute\",\r\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"series\", \"column\"])\r\n\t\t}, [this.columns.template])\r\n\t);\r\n\r\n\tpublic static className: string = \"ColumnSeries\";\r\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([ColumnSeries.className]);\r\n\r\n\r\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\r\n\t\tsuper._processAxisRange(axisRange);\r\n\t\taxisRange.columns = new ListTemplate(\r\n\t\t\tTemplate.new({}),\r\n\t\t\t() => RoundedRectangle._new(this._root, {\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"series\", \"column\"]),\r\n\t\t\t}, [this.columns.template, axisRange.columns.template])\r\n\t\t);\r\n\t}\r\n}\r\n","import type { Axis } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\n\nimport { XYSeries, IXYSeriesPrivate, IXYSeriesSettings, IXYSeriesDataItem, IXYSeriesAxisRange } from \"./XYSeries\";\nimport { Graphics } from \"../../../core/render/Graphics\";\nimport { CurveFactory, line, area } from \"d3-shape\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\nimport { color } from \"../../../core/util/Color\";\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Rectangle } from \"../../../core/render/Rectangle\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IPointOptions {\n}\n\nexport interface ILineSeriesDataItem extends IXYSeriesDataItem {\n}\n\nexport interface ILineSeriesSettings extends IXYSeriesSettings {\n\n\t/**\n\t * If set to `true` the line will connect over \"gaps\" - categories or time\n\t * intervals with no data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Gaps} for more info\n\t * @default true\n\t */\n\tconnect?: boolean;\n\n\t/**\n\t * If there are more than `autoGapCount` base time intervals (e.g. days) with\n\t * no data, the line will break and will display gap.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Auto_gaps_with_dates} for more info\n\t * @default 1.1\n\t */\n\tautoGapCount?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tcurveFactory?: CurveFactory;\n\n\t/**\n\t * Allows simplifying the line with many points.\n\t *\n\t * If set, the series will skip points that are closer than X pixels to each\n\t * other.\n\t *\n\t * With many data points, this allows having smoother, less cluttered lines.\n\t *\n\t * @default 0\n\t * @since 5.2.7\n\t */\n\tminDistance?: number;\n\n\n}\n\nexport interface ILineSeriesPrivate extends IXYSeriesPrivate {\n}\n\n/**\n * Interface representing a [[LineSeries]] axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface ILineSeriesAxisRange extends IXYSeriesAxisRange {\n\n\t/**\n\t * A list template to use when applying line settings to the line segments covered\n\t * by an axis range.\n\t */\n\tstrokes?: ListTemplate<Graphics>;\n\n\t/**\n\t * A list template to use when applying fill settings to the fill segments covered\n\t * by an axis range.\n\t */\n\tfills?: ListTemplate<Graphics>;\n}\n\n/**\n * Used to plot line and/or area series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/} for more info\n * @important\n */\nexport class LineSeries extends XYSeries {\n\n\tdeclare public _settings: ILineSeriesSettings;\n\tdeclare public _privateSettings: ILineSeriesPrivate;\n\tdeclare public _dataItemSettings: ILineSeriesDataItem;\n\tdeclare public _axisRangeType: ILineSeriesAxisRange;\n\n\tpublic static className: string = \"LineSeries\";\n\tpublic static classNames: Array<string> = XYSeries.classNames.concat([LineSeries.className]);\n\n\tprotected _endIndex!: number;\n\n\tprotected _strokeGenerator = line();\n\tprotected _fillGenerator = area();\n\n\tprotected _legendStroke?: Graphics;\n\tprotected _legendFill?: Graphics;\n\n\tprotected _afterNew() {\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeStroke(strokes: ListTemplate<Graphics>): Graphics {\n\t\tconst stroke = this.mainContainer.children.push(strokes.make());\n\t\tstrokes.push(stroke);\n\t\treturn stroke;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all line segments in series.\n\t *\n\t * `strokes.template` can be used to set default settings for all line\n\t * segments, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly strokes: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"])\n\t\t}, [this.strokes.template]),\n\t);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeFill(fills: ListTemplate<Graphics>): Graphics {\n\t\tconst fill = this.mainContainer.children.push(fills.make());\n\t\tfills.push(fill);\n\t\treturn fill;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all segment fills in series.\n\t *\n\t * `fills.template` can be used to set default settings for all segment\n\t * fills, or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Graphics>\n\t */\n\tpublic readonly fills: ListTemplate<Graphics> = new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Graphics._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.strokes.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"])\n\t\t}, [this.fills.template]),\n\t);\n\n\t// custom set from data\n\tprotected _fillTemplate: Template<Graphics> | undefined;\n\tprotected _strokeTemplate: Template<Graphics> | undefined;\n\n\tprotected _previousPoint: Array<number> = [0, 0, 0, 0];\n\n\tprotected _dindex = 0;\n\tprotected _sindex = 0;\n\n\tpublic _updateChildren() {\n\n\t\tthis._strokeTemplate = undefined;\n\t\tthis._fillTemplate = undefined;\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tconst stroke = this.get(\"stroke\");\n\t\t\tthis.strokes.template.set(\"stroke\", stroke);\n\t\t\tconst legendStroke = this._legendStroke;\n\t\t\tif (legendStroke) {\n\t\t\t\tlegendStroke.states.lookup(\"default\")!.set(\"stroke\", stroke);\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tconst fill = this.get(\"fill\");\n\t\t\tthis.fills.template.set(\"fill\", fill);\n\t\t\tconst legendFill = this._legendFill;\n\t\t\tif (legendFill) {\n\t\t\t\tlegendFill.states.lookup(\"default\")!.set(\"fill\", fill);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"curveFactory\")) {\n\t\t\tconst curveFactory = this.get(\"curveFactory\")!;\n\t\t\tif (curveFactory) {\n\t\t\t\tthis._strokeGenerator.curve(curveFactory);\n\t\t\t\tthis._fillGenerator.curve(curveFactory);\n\t\t\t}\n\t\t}\n\n\t\tif (xAxis.inited && yAxis.inited) {\n\t\t\tif (this._axesDirty || this._valuesDirty || this._stackDirty || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._sizeDirty || this.isDirty(\"connect\") || this.isDirty(\"curveFactory\")) {\n\n\t\t\t\tthis.fills.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.strokes.each((fill) => {\n\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t})\n\n\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\tlet fills = axisRange.fills;\n\t\t\t\t\tif (fills) {\n\t\t\t\t\t\tfills.each((fill) => {\n\t\t\t\t\t\t\tfill.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tlet strokes = axisRange.strokes;\n\t\t\t\t\tif (strokes) {\n\t\t\t\t\t\tstrokes.each((stroke) => {\n\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", false);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\tlet startIndex = this.startIndex();\n\n\t\t\t\tlet strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\t\t\tlet fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\t\t\tlet strokeTemplateFound = true;\n\t\t\t\tlet fillTemplateFound = true;\n\n\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\tstrokeTemplateFound = false;\n\t\t\t\t}\n\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\tfillTemplateFound = false;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = startIndex - 1; i >= 0; i--) {\n\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\tlet dataContext = dataItem.dataContext as any;\n\t\t\t\t\tif (strokeTemplateField) {\n\t\t\t\t\t\tif (dataContext[strokeTemplateField]) {\n\t\t\t\t\t\t\tstrokeTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (fillTemplateField) {\n\t\t\t\t\t\tif (dataContext[fillTemplateField]) {\n\t\t\t\t\t\t\tfillTemplateFound = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tif (hasValues && strokeTemplateFound && fillTemplateFound) {\n\t\t\t\t\t\tstartIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tlet len = this.dataItems.length;\n\t\t\t\tlet endIndex = this.endIndex();\n\n\t\t\t\tif (endIndex < len) {\n\t\t\t\t\tendIndex++;\n\t\t\t\t\tfor (let i = endIndex; i < len; i++) {\n\t\t\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\t\t\tlet hasValues = true;\n\t\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\t\tif (!$type.isNumber(dataItem.get(field as any))) {\n\t\t\t\t\t\t\t\thasValues = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tif (hasValues) {\n\t\t\t\t\t\t\tendIndex = i + 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (startIndex > 0) {\n\t\t\t\t\tstartIndex--;\n\t\t\t\t}\n\n\t\t\t\tthis._endIndex = endIndex;\n\n\t\t\t\tthis._clearGraphics();\n\t\t\t\tthis._sindex = 0;\n\t\t\t\tthis._dindex = startIndex;\n\t\t\t\tif (this.dataItems.length == 1) {\n\t\t\t\t\tthis._startSegment(0);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// this is done to avoid recursion with a lot of segments \n\t\t\t\t\twhile (this._dindex < endIndex - 1) {\n\t\t\t\t\t\tthis._startSegment(this._dindex);\n\t\t\t\t\t\tthis._sindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._skipped = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n\n\tprotected _clearGraphics() {\n\t\tthis.strokes.clear();\n\t\tthis.fills.clear();\n\t}\n\n\tprotected _startSegment(dataItemIndex: number) {\n\t\tlet endIndex = this._endIndex;\n\t\tlet currentEndIndex = endIndex;\n\n\t\tconst autoGapCount = this.get(\"autoGapCount\")!;\n\t\tconst connect = this.get(\"connect\");\n\n\t\tconst fill = this.makeFill(this.fills);\n\n\t\tconst fillTemplate = this._fillTemplate;\n\t\tconst originalTemplate = this.fills.template;\n\t\tif (fillTemplate && fillTemplate != originalTemplate) {\n\t\t\tfill.template = fillTemplate;\n\t\t}\n\n\t\tfill.setPrivate(\"visible\", true);\n\n\t\tconst stroke = this.makeStroke(this.strokes);\n\n\t\tconst strokeTemplate = this._strokeTemplate;\n\t\tif (strokeTemplate && strokeTemplate != this.strokes.template) {\n\t\t\tstroke.template = strokeTemplate;\n\t\t}\n\n\t\tstroke.setPrivate(\"visible\", true);\n\n\t\tlet xAxis = this.get(\"xAxis\");\n\t\tlet yAxis = this.get(\"yAxis\");\n\t\tlet baseAxis = this.get(\"baseAxis\")!;\n\n\t\tlet vcx = this.get(\"vcx\", 1);\n\t\tlet vcy = this.get(\"vcy\", 1);\n\n\t\tlet xField = this._xField;\n\t\tlet yField = this._yField;\n\n\t\tlet xOpenField = this._xOpenField;\n\t\tlet yOpenField = this._yOpenField;\n\n\t\tconst xOpenFieldValue = this.get(\"openValueXField\");\n\t\tconst yOpenFieldValue = this.get(\"openValueYField\");\n\n\t\tif (!xOpenFieldValue) {\n\t\t\txOpenField = this._xField;\n\t\t}\n\n\t\tif (!yOpenFieldValue) {\n\t\t\tyOpenField = this._yField;\n\t\t}\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tconst basePosX = xAxis.basePosition();\n\t\tconst basePosY = yAxis.basePosition();\n\n\t\tlet baseField: string;\n\t\tif (baseAxis === yAxis) {\n\t\t\tbaseField = this._yField;\n\t\t}\n\t\telse {\n\t\t\tbaseField = this._xField;\n\t\t}\n\n\t\tconst segments: Array<Array<Array<number>>> = [];\n\t\tlet points: Array<Array<number>> = [];\n\t\tsegments.push(points);\n\n\t\tconst strokeTemplateField = this.strokes.template.get(\"templateField\");\n\t\tconst fillTemplateField = this.fills.template.get(\"templateField\");\n\n\t\tlet locationX = this.get(\"locationX\", 0.5);\n\t\tlet locationY = this.get(\"locationY\", 0.5);\n\n\t\tlet openLocationX = this.get(\"openLocationX\", locationX);\n\t\tlet openLocationY = this.get(\"openLocationY\", locationY);\n\n\t\tconst minDistance = this.get(\"minDistance\", 0);\n\n\t\tlet i: number;\n\n\t\tlet fillVisible = this.fills.template.get(\"visible\");\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tfillVisible = true;\n\t\t}\n\n\t\tlet getOpen = false;\n\t\tif (stacked || xOpenFieldValue || yOpenFieldValue) {\n\t\t\tgetOpen = true;\n\t\t}\n\n\t\tconst o = {\n\t\t\tpoints, segments, stacked, getOpen, basePosX, basePosY, fillVisible, xField, yField, xOpenField, yOpenField, vcx, vcy, baseAxis, xAxis, yAxis, locationX, locationY, openLocationX, openLocationY, minDistance\n\t\t}\n\n\n\t\tfor (i = dataItemIndex; i < currentEndIndex; i++) {\n\t\t\tthis._dindex = i;\n\t\t\tconst dataItem = this._dataItems[i];\n\n\t\t\tlet valueX = dataItem.get(xField as any);\n\t\t\tlet valueY = dataItem.get(yField as any);\n\n\t\t\tif (valueX == null || valueY == null) {\n\t\t\t\tif (!connect) {\n\t\t\t\t\tpoints = [];\n\t\t\t\t\tsegments.push(points);\n\t\t\t\t\to.points = points;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._getPoints(dataItem, o);\n\t\t\t}\n\n\t\t\tif (strokeTemplateField) {\n\t\t\t\tlet strokeTemplate = (dataItem.dataContext as any)[strokeTemplateField]\n\t\t\t\tif (strokeTemplate) {\n\t\t\t\t\tif (!(strokeTemplate instanceof Template)) {\n\t\t\t\t\t\tstrokeTemplate = Template.new(strokeTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._strokeTemplate = strokeTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstroke.template = strokeTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (fillTemplateField) {\n\t\t\t\tlet fillTemplate = (dataItem.dataContext as any)[fillTemplateField]\n\t\t\t\tif (fillTemplate) {\n\t\t\t\t\tif (!(fillTemplate instanceof Template)) {\n\t\t\t\t\t\tfillTemplate = Template.new(fillTemplate);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._fillTemplate = fillTemplate;\n\t\t\t\t\tif (i > dataItemIndex) {\n\t\t\t\t\t\tcurrentEndIndex = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfill.template = fillTemplate;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!connect) {\n\t\t\t\tlet nextItem = this.dataItems[i + 1];\n\t\t\t\tif (nextItem) {\n\t\t\t\t\tif (baseAxis.shouldGap(dataItem, nextItem, autoGapCount, baseField)) {\n\t\t\t\t\t\tpoints = [];\n\t\t\t\t\t\tsegments.push(points);\n\t\t\t\t\t\to.points = points;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\n\t\tif (i === endIndex) {\n\t\t\tthis._endLine(points, segments[0][0]);\n\t\t}\n\n\t\tif (stroke) {\n\t\t\tthis._drawStroke(stroke, segments);\n\t\t}\n\n\t\tif (fill) {\n\t\t\tthis._drawFill(fill, segments);\n\t\t}\n\n\t\tthis.axisRanges.each((axisRange) => {\n\t\t\tconst container = axisRange.container;\n\t\t\tconst fills = axisRange.fills!;\n\t\t\tconst fill = this.makeFill(fills);\n\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(fill);\n\t\t\t}\n\n\t\t\tfill.setPrivate(\"visible\", true);\n\t\t\tthis._drawFill(fill, segments);\n\n\t\t\tconst strokes = axisRange.strokes!;\n\t\t\tconst stroke = this.makeStroke(strokes);\n\t\t\tif (container) {\n\t\t\t\tcontainer.children.push(stroke);\n\t\t\t}\n\n\t\t\tstroke.setPrivate(\"visible\", true);\n\t\t\tthis._drawStroke(stroke, segments);\n\n\t\t\tfill.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t\tstroke.setRaw(\"userData\", [dataItemIndex, i]);\n\t\t})\n\t}\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number, minDistance: number }) {\n\t\tlet points = o.points;\n\n\t\tlet itemLocationX = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY = dataItem.get(\"locationY\", o.locationY);\n\n\t\tlet xPos = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX, o.vcx);\n\t\tlet yPos = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY, o.vcy);\n\n\t\tif (this._shouldInclude(xPos)) {\n\n\t\t\tconst iPoint = this.getPoint(xPos, yPos);\n\t\t\tconst point = [iPoint.x, iPoint.y];\n\n\t\t\tiPoint.x += this._x;\n\t\t\tiPoint.y += this._y;\n\n\t\t\tdataItem.set(\"point\", iPoint);\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xPos0: number = xPos;\n\t\t\t\tlet yPos0: number = yPos;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\tlet itemLocationX = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\tlet itemLocationY = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX, (stackToItemX.component as XYSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(xPos0)) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY, (stackToItemY.component as XYSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tif ($type.isNaN(yPos0)) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX, o.vcx);\n\t\t\t\t\t\t\tyPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint = this.getPoint(xPos0, yPos0);\n\n\t\t\t\tpoint[2] = closeIPoint.x;\n\t\t\t\tpoint[3] = closeIPoint.y;\n\t\t\t}\n\n\t\t\tif (o.minDistance > 0) {\n\t\t\t\tconst p0 = point[0];\n\t\t\t\tconst p1 = point[1];\n\t\t\t\tconst p2 = point[2];\n\t\t\t\tconst p3 = point[3];\n\n\t\t\t\tconst prev = this._previousPoint;\n\n\t\t\t\tconst pp0 = prev[0];\n\t\t\t\tconst pp1 = prev[1];\n\t\t\t\tconst pp2 = prev[2];\n\t\t\t\tconst pp3 = prev[3];\n\n\t\t\t\tif (Math.hypot(p0 - pp0, p1 - pp1) > o.minDistance || (p2 && p3 && Math.hypot(p2 - pp2, p3 - pp3) > o.minDistance)) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tthis._previousPoint = point;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpoints.push(point);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _endLine(_points: Array<Array<number>>, _firstPoint: Array<number>) {\n\n\t}\n\n\tprotected _drawStroke(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._strokeGenerator.context(display as any);\n\t\t\t\t\tthis._strokeGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _drawFill(graphics: Graphics, segments: number[][][]) {\n\t\tif (graphics.get(\"visible\") && !graphics.get(\"forceHidden\")) {\n\t\t\tgraphics.set(\"draw\", (display) => {\n\t\t\t\t$array.each(segments, (segment) => {\n\t\t\t\t\tthis._fillGenerator.context(display as any);\n\t\t\t\t\tthis._fillGenerator(segment as [number, number][]);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.fills = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.fills!.template.get(\"themeTags\", []), [\"line\", \"series\", \"fill\"]),\n\t\t\t}, [this.fills.template, axisRange.fills!.template]),\n\t\t);\n\n\t\taxisRange.strokes = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Graphics._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.strokes!.template.get(\"themeTags\", []), [\"line\", \"series\", \"stroke\"]),\n\t\t\t}, [this.strokes.template, axisRange.strokes!.template])\n\t\t);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\t\t\tconst marker = legendDataItem.get(\"marker\");\n\n\t\t\tconst markerRectangle = legendDataItem.get(\"markerRectangle\");\n\t\t\tif (markerRectangle) {\n\t\t\t\tmarkerRectangle.setPrivate(\"visible\", false);\n\t\t\t}\n\n\t\t\tmarker.set(\"background\", Rectangle.new(marker._root, { fillOpacity: 0, fill: color(0x000000) }))\n\n\t\t\tconst legendStroke = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"stroke\"], interactive: false\n\t\t\t}, [this.strokes.template]));\n\n\t\t\tthis._legendStroke = legendStroke;\n\n\t\t\tconst legendFill = marker.children.push(Graphics._new(marker._root, {\n\t\t\t\tthemeTags: [\"line\", \"series\", \"legend\", \"marker\", \"fill\"]\n\t\t\t}, [this.fills.template]));\n\n\t\t\tthis._legendFill = legendFill;\n\n\t\t\tconst disabledColor = this._root.interfaceColors.get(\"disabled\");\n\n\t\t\tlegendStroke.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\tlegendFill.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\n\t\t\tif (this.bullets.length > 0) {\n\t\t\t\tconst bulletFunction = this.bullets.getIndex(0);\n\t\t\t\tif (bulletFunction) {\n\t\t\t\t\tconst bullet = bulletFunction(marker._root, this, new DataItem(this, { legend: true }, {}));\n\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\tif (sprite instanceof Graphics) {\n\t\t\t\t\t\t\tsprite.states.create(\"disabled\", { fill: disabledColor, stroke: disabledColor });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\tsprite.set(\"tooltipText\", undefined);\n\t\t\t\t\t\t\tsprite.set(\"tooltipHTML\", undefined);\n\n\t\t\t\t\t\t\tmarker.children.push(sprite);\n\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\n\t\t\t\t\t\t\tmarker.events.on(\"boundschanged\", ()=>{\n\t\t\t\t\t\t\t\tsprite.setAll({ x: marker.width() / 2, y: marker.height() / 2 });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { Axis, IAxisPrivate, IAxisDataItem } from \"../axes/Axis\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\nimport type { Sprite } from \"../../../core/render/Sprite\";\nimport type { Bullet } from \"../../../core/render/Bullet\";\nimport type { XYChart } from \"../XYChart\";\n//import type { CategoryAxis } from \"../axes/CategoryAxis\";\nimport type { DateAxis } from \"../axes/DateAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\n\nimport { DataItem } from \"../../../core/render/Component\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../../core/render/Series\";\nimport { List } from \"../../../core/util/List\";\nimport { Container } from \"../../../core/render/Container\";\nimport { Graphics } from \"../../../core/render/Graphics\";\n\nimport type { IDisposer } from \"../../../core/util/Disposer\";\n\nimport * as $type from \"../../../core/util/Type\";\nimport * as $object from \"../../../core/util/Object\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\n\n/**\n * @ignore\n */\nfunction min(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right < left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * @ignore\n */\nfunction max(left: number | undefined, right: number | undefined): number | undefined {\n\tif (left == null) {\n\t\treturn right;\n\n\t} else if (right == null) {\n\t\treturn left;\n\n\t} else if (right > left) {\n\t\treturn right;\n\n\t} else {\n\t\treturn left;\n\t}\n}\n\n/**\n * Interface representing a series axis range.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/#Series_axis_ranges} for more info\n */\nexport interface IXYSeriesAxisRange {\n\n\t/**\n\t * Related axis data item.\n\t */\n\taxisDataItem: DataItem<IAxisDataItem>;\n\n\t/**\n\t * A [[Container]] element that range's elements are placed in.\n\t */\n\tcontainer?: Container;\n\n\t/**\n\t * Target series.\n\t */\n\tseries?: XYSeries;\n\n}\n\nexport interface IXYAxisPrivate extends IAxisPrivate {\n\tmin?: number;\n\tmax?: number;\n}\n\nexport interface IXYAxis extends Axis<AxisRenderer> {\n\t_privateSettings: IXYAxisPrivate;\n}\n\nexport interface IXYSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Kicks in when axis starts using different data set, e.g. data\n\t * of different granularit on [[DateAxis]].\n\t *\n\t * @since 5.1.1\n\t */\n\tdatasetchanged: {\n\t\tid: string\n\t}\n}\n\n/**\n * XY chart series data item.\n */\nexport interface IXYSeriesDataItem extends ISeriesDataItem {\n\tvalueX?: number;\n\tvalueXWorking?: number;\n\tvalueXChange?: number;\n\tvalueXChangePercent?: number;\n\tvalueXChangeSelection?: number;\n\tvalueXChangeSelectionPercent?: number;\n\tvalueXChangePrevious?: number;\n\tvalueXChangePreviousPercent?: number;\n\tvalueXWorkingOpen?: number;\n\tvalueXWorkingClose?: number;\n\n\tvalueY?: number;\n\tvalueYChange?: number;\n\tvalueYWorking?: number;\n\tvalueYChangePercent?: number;\n\tvalueYChangeSelection?: number;\n\tvalueYChangeSelectionPercent?: number;\n\tvalueYChangePrevious?: number;\n\tvalueYChangePreviousPercent?: number;\n\tvalueYWorkingOpen?: number;\n\tvalueYWorkingClose?: number;\n\n\topenValueX?: number;\n\topenValueXWorking?: number;\n\topenValueXChange?: number;\n\topenValueXChangePercent?: number;\n\topenValueXChangeSelection?: number;\n\topenValueXChangeSelectionPercent?: number;\n\topenValueXChangePrevious?: number;\n\topenValueXChangePreviousPercent?: number;\n\topenValueXWorkingOpen?: number;\n\topenValueXWorkingClose?: number;\n\topenValueY?: number;\n\topenValueYWorking?: number;\n\topenValueYChange?: number;\n\topenValueYChangePercent?: number;\n\topenValueYChangeSelection?: number;\n\topenValueYChangeSelectionPercent?: number;\n\topenValueYChangePrevious?: number;\n\topenValueYChangePreviousPercent?: number;\n\topenValueYWorkingOpen?: number;\n\topenValueYWorkingClose?: number;\n\n\tlowValueX?: number;\n\tlowValueXWorking?: number;\n\tlowValueXChange?: number;\n\tlowValueXChangePercent?: number;\n\tlowValueXChangeSelection?: number;\n\tlowValueXChangeSelectionPercent?: number;\n\tlowValueXChangePrevious?: number;\n\tlowValueXChangePreviousPercent?: number;\n\tlowValueXWorkingOpen?: number;\n\tlowValueXWorkingClose?: number;\n\n\thighValueX?: number;\n\thighValueXWorking?: number;\n\thighValueXChange?: number;\n\thighValueXChangePercent?: number;\n\thighValueXChangeSelection?: number;\n\thighValueXChangeSelectionPercent?: number;\n\thighValueXChangePrevious?: number;\n\thighValueXChangePreviousPercent?: number;\n\thighValueXWorkingOpen?: number;\n\thighValueXWorkingClose?: number;\n\n\tlowValueY?: number;\n\tlowValueYWorking?: number;\n\tlowValueYChange?: number;\n\tlowValueYChangePercent?: number;\n\tlowValueYChangeSelection?: number;\n\tlowValueYChangeSelectionPercent?: number;\n\tlowValueYChangePrevious?: number;\n\tlowValueYChangePreviousPercent?: number;\n\tlowValueYWorkingOpen?: number;\n\tlowValueYWorkingClose?: number;\n\n\thighValueY?: number;\n\thighValueYWorking?: number;\n\thighValueYChange?: number;\n\thighValueYChangePercent?: number;\n\thighValueYChangeSelection?: number;\n\thighValueYChangeSelectionPercent?: number;\n\thighValueYChangePrevious?: number;\n\thighValueYChangePreviousPercent?: number;\n\thighValueYWorkingOpen?: number;\n\thighValueYWorkingClose?: number;\n\n\tcategoryX?: string;\n\tcategoryY?: string;\n\n\topenCategoryX?: string;\n\topenCategoryY?: string;\n\n\tlocationX?: number;\n\tlocationY?: number;\n\n\topenLocationX?: number;\n\topenLocationY?: number;\n\n\tstackToItemX?: DataItem<IXYSeriesDataItem>;\n\tstackToItemY?: DataItem<IXYSeriesDataItem>;\n\n\tleft?: number;\n\tright?: number;\n\ttop?: number;\n\tbottom?: number;\n\n\tpoint?: IPoint;\n\n\toriginals?: Array<DataItem<IXYSeriesDataItem>>;\n}\n\nexport interface IXYSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * Minimal distance between data items in pixels.\n\t *\n\t * If data items are closer than this, bullets are turned off to avoid\n\t * overcrowding.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Bullets} for more info\n\t */\n\tminBulletDistance?: number;\n\n\t/**\n\t * X axis series uses.\n\t *\n\t * **IMPORTANT:** `xAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\txAxis: IXYAxis;\n\n\t/**\n\t * Y axis series uses.\n\t *\n\t * **IMPORTANT:** `yAxis` needs to be set when creating the series. Updating\n\t * this setting on previously created series object will not work.\n\t */\n\tyAxis: IXYAxis;\n\n\t/**\n\t * If set to `true` series will be stacked to other series that also have\n\t * this setting set to `true`.\n\t *\n\t * NOTE: for series stack properly, all stacked series must have same number\n\t * of data items with the same timestamp/category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Stacked_series} for more info\n\t */\n\tstacked?: boolean;\n\n\t/**\n\t * Whether to stack negative values from zero (`true`) or from whatever\n\t * previous series value is (`false`).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Negative_value_stacking} for more info\n\t */\n\tstackToNegative?: boolean;\n\n\t/**\n\t * Base axis for the series.\n\t *\n\t * A base axis will dictate direction series plot.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Base_axis} for more info\n\t */\n\tbaseAxis?: IXYAxis;\n\n\t/**\n\t * Input data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXField?: string;\n\n\t/**\n\t * Input data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYField?: string;\n\n\t/**\n\t * Exclude series values when calculating totals for category/interval.\n\t *\n\t * @default false\n\t */\n\texcludeFromTotal?: boolean;\n\n\t/**\n\t * Display data field for X value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueXShow?: \"valueXWorking\" | \"valueXChange\" | \"valueXChangePercent\" | \"valueXChangeSelection\" | \"valueXChangeSelectionPercent\" | \"valueXChangePrevious\" | \"valueXChangePreviousPercent\" | \"valueXTotal\" | \"valueXTotalPercent\" | \"valueXSum\";\n\n\t/**\n\t * Display data field for Y value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tvalueYShow?: \"valueYWorking\" | \"valueYChange\" | \"valueYChangePercent\" | \"valueYChangeSelection\" | \"valueYChangeSelectionPercent\" | \"valueYChangePrevious\" | \"valueYChangePreviousPercent\" | \"valueYTotal\" | \"valueYTotalPercent\" | \"valueYSum\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X values from several data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\tvalueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXField?: string;\n\n\t/**\n\t * Input data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYField?: string;\n\n\t/**\n\t * Display data field for X open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueXShow?: \"openValueXWorking\" | \"openValueXChange\" | \"openValueXChangePercent\" | \"openValueXChangeSelection\" | \"openValueXChangeSelectionPercent\" | \"openValueXChangePrevious\" | \"openValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenValueYShow?: \"openValueYWorking\" | \"openValueYChange\" | \"openValueYChangePercent\" | \"openValueYChangeSelection\" | \"openValueYChangeSelectionPercent\" | \"openValueYChangePrevious\" | \"openValueYChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for Y open value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Dynamic_data_item_grouping} for more info\n\t */\n\topenValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\n\n\t/**\n\t * Input data field for X low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueXField?: string;\n\n\t/**\n\t * Input data field for Y low value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\tlowValueYField?: string;\n\n\t/**\n\t * Input data field for X high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueXField?: string;\n\n\t/**\n\t * Input data field for Y high value.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n\t */\n\thighValueYField?: string;\n\n\t/**\n\t * Display data field for X low value.\n\t */\n\tlowValueXShow?: \"lowValueXWorking\" | \"lowValueXChange\" | \"lowValueXChangePercent\" | \"lowValueXChangeSelection\" | \"lowValueXChangeSelectionPercent\" | \"lowValueXChangePrevious\" | \"lowValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\tlowValueYShow?: \"lowValueYWorking\" | \"lowValueYChange\" | \"lowValueYChangePercent\" | \"lowValueYChangeSelection\" | \"lowValueYChangeSelectionPercent\" | \"lowValueYChangePrevious\" | \"lowValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X low values from several data items.\n\t */\n\tlowValueXGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating Y low values from several data items.\n\t */\n\tlowValueYGrouped?: \"open\" | \"close\" | \"low\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Display data field for X high value.\n\t */\n\thighValueXShow?: \"highValueXWorking\" | \"highValueXChange\" | \"highValueXChangePercent\" | \"highValueXChangeSelection\" | \"highValueXChangeSelectionPercent\" | \"highValueXChangePrevious\" | \"highValueXChangePreviousPercent\";\n\n\t/**\n\t * Display data field for Y low value.\n\t */\n\thighValueYShow?: \"highValueYWorking\" | \"highValueYChange\" | \"highValueYChangePercent\" | \"highValueYChangeSelection\" | \"highValueYChangeSelectionPercent\" | \"highValueYChangePrevious\" | \"highValueYChangePreviousPercent\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueXGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Indicates what aggregate value to use for collective data item, when\n\t * aggregating X high values from several data items.\n\t */\n\thighValueYGrouped?: \"open\" | \"close\" | \"high\" | \"high\" | \"average\" | \"sum\" | \"extreme\";\n\n\t/**\n\t * Horizontal location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationX?: number;\n\n\t/**\n\t * Vertical location of the low data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\tlowLocationY?: number;\n\n\t/**\n\t * Horizontal location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationX?: number;\n\n\t/**\n\t * Vertical location of the high data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\thighLocationY?: number;\n\n\n\t/**\n\t * Input data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryXField?: string;\n\n\t/**\n\t * Input data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\tcategoryYField?: string;\n\n\t/**\n\t * Display data field for X category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryXField?: string;\n\n\t/**\n\t * Display data field for Y category.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/#Data_fields} for more info\n\t */\n\topenCategoryYField?: string;\n\n\t/**\n\t * If set to `true` this series will be ignored when calculating scale of the\n\t * related axes.\n\t *\n\t * @default false\n\t */\n\tignoreMinMax?: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\tvcx?: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvcy?: number;\n\n\t/**\n\t * Horizontal location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationX?: number;\n\n\t/**\n\t * Vertical location of the data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/line-series/#Data_item_location} for more info\n\t * @default 0.5\n\t */\n\tlocationY?: number;\n\n\t/**\n\t * Horizontal location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationX?: number;\n\n\t/**\n\t * Vertical location of the open data point relative to its cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t *\n\t * @default 0.5\n\t */\n\topenLocationY?: number;\n\n\t/**\n\t * If set to `true` [[XYCursor]] will show closest data item from series\n\t * even if it is outside currently hovered date axis interval.\n\t *\n\t * This setting is relevant only if `baseAxis` is a date axis.\n\t */\n\tsnapTooltip?: boolean;\n\n\t/**\n\t * Text to use for series legend label when no particular category/interval\n\t * is selected.\n\t */\n\tlegendRangeLabelText?: string;\n\n\t/**\n\t * Text to use for series legend value label when no particular\n\t * category/interval is selected.\n\t */\n\tlegendRangeValueText?: string;\n\n\n\t/**\n\t * If set to `true`, series bullets will be masked by plot area.\n\t */\n\tmaskBullets?: boolean;\n\n\t/**\n\t * Whether series' tooltip should inherit its color from series or its first\n\t * bullet.\n\t *\n\t * @default \"series\"\n\t */\n\tseriesTooltipTarget?: \"series\" | \"bullet\";\n\n\t/**\n\t * Indicates horizontal position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionX?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\t/**\n\t * Indicates vertical position at which to show series' tooltip at.\n\t *\n\t * @default \"value\"\n\t * @since 5.0.16\n\t */\n\ttooltipPositionY?: \"open\" | \"value\" | \"low\" | \"high\";\n\n\n\t/**\n\t * If set to `true` data items for this series won't be grouped even if\n\t * the `groupData: true` is set on a related [[DateAxis]].\n\t * \n\t * @since 5.0.19\n\t */\n\tgroupDataDisabled?: boolean;\n\n\t/**\n\t * A [[DataItem]] that is being used for current tooltip, e.g. by a chart\n\t * cursor.\n\t *\n\t * @since 5.1.2\n\t */\n\ttooltipDataItem?: DataItem<IXYSeriesDataItem>\n\n\t/**\n\t * If set to `true`, when data is grouped, the `originals` setting of the\n\t * group data items will be populated by the original (source) data items\n\t * that fall into the group.\n\t *\n\t * Please note that if `groupDataCallback` is set, this setting is ignored\n\t * as originals will always be included, regardless of the value.\n\t *\n\t * @since 5.1.11\n\t * @default false\n\t */\n\tgroupDataWithOriginals?: boolean;\n\n\t/**\n\t * A custom function to call when grouping data items.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Custom_aggregation_functions} for more info\n\t * @since 5.1.11\n\t */\n\tgroupDataCallback?: (dataItem: DataItem<IXYSeriesDataItem>, interval: ITimeInterval) => void;\n\n}\n\nexport interface IXYSeriesPrivate extends ISeriesPrivate {\n\n\tminX?: number;\n\tmaxX?: number;\n\n\tminY?: number;\n\tmaxY?: number;\n\n\tselectionMinX?: number;\n\tselectionMaxX?: number;\n\n\tselectionMinY?: number;\n\tselectionMaxY?: number;\n\n\tvalueXAverage?: number;\n\tvalueXCount?: number;\n\tvalueXSum?: number;\n\tvalueXAbsoluteSum?: number;\n\tvalueXLow?: number;\n\tvalueXHigh?: number;\n\tvalueXOpen?: number;\n\tvalueXClose?: number;\n\n\tvalueYAverage?: number;\n\tvalueYCount?: number;\n\tvalueYSum?: number;\n\tvalueYAbsoluteSum?: number;\n\tvalueYLow?: number;\n\tvalueYHigh?: number;\n\tvalueYOpen?: number;\n\tvalueYClose?: number;\n\n\tvalueXAverageSelection?: number;\n\tvalueXCountSelection?: number;\n\tvalueXSumSelection?: number;\n\tvalueXAbsoluteSumSelection?: number;\n\tvalueXLowSelection?: number;\n\tvalueXHighSelection?: number;\n\tvalueXOpenSelection?: number;\n\tvalueXCloseSelection?: number;\n\n\tvalueYAverageSelection?: number;\n\tvalueYCountSelection?: number;\n\tvalueYSumSelection?: number;\n\tvalueYAbsoluteSumSelection?: number;\n\tvalueYLowSelection?: number;\n\tvalueYHighSelection?: number;\n\tvalueYOpenSelection?: number;\n\tvalueYCloseSelection?: number;\n\n\topenValueXAverage?: number;\n\topenValueXCount?: number;\n\topenValueXSum?: number;\n\topenValueXAbsoluteSum?: number;\n\topenValueXLow?: number;\n\topenValueXHigh?: number;\n\topenValueXOpen?: number;\n\topenValueXClose?: number;\n\n\topenValueYAverage?: number;\n\topenValueYCount?: number;\n\topenValueYSum?: number;\n\topenValueYAbsoluteSum?: number;\n\topenValueYLow?: number;\n\topenValueYHigh?: number;\n\topenValueYOpen?: number;\n\topenValueYClose?: number;\n\n\topenValueXAverageSelection?: number;\n\topenValueXCountSelection?: number;\n\topenValueXSumSelection?: number;\n\topenValueXAbsoluteSumSelection?: number;\n\topenValueXLowSelection?: number;\n\topenValueXHighSelection?: number;\n\topenValueXOpenSelection?: number;\n\topenValueXCloseSelection?: number;\n\n\topenValueYAverageSelection?: number;\n\topenValueYCountSelection?: number;\n\topenValueYSumSelection?: number;\n\topenValueYAbsoluteSumSelection?: number;\n\topenValueYLowSelection?: number;\n\topenValueYHighSelection?: number;\n\topenValueYOpenSelection?: number;\n\topenValueYCloseSelection?: number;\n\n\tlowValueXAverage?: number;\n\tlowValueXCount?: number;\n\tlowValueXSum?: number;\n\tlowValueXAbsoluteSum?: number;\n\tlowValueXLow?: number;\n\tlowValueXHigh?: number;\n\tlowValueXlow?: number;\n\tlowValueXClose?: number;\n\n\tlowValueYAverage?: number;\n\tlowValueYCount?: number;\n\tlowValueYSum?: number;\n\tlowValueYAbsoluteSum?: number;\n\tlowValueYLow?: number;\n\tlowValueYHigh?: number;\n\tlowValueYlow?: number;\n\tlowValueYClose?: number;\n\n\tlowValueXAverageSelection?: number;\n\tlowValueXCountSelection?: number;\n\tlowValueXSumSelection?: number;\n\tlowValueXAbsoluteSumSelection?: number;\n\tlowValueXLowSelection?: number;\n\tlowValueXHighSelection?: number;\n\tlowValueXlowSelection?: number;\n\tlowValueXCloseSelection?: number;\n\n\tlowValueYAverageSelection?: number;\n\tlowValueYCountSelection?: number;\n\tlowValueYSumSelection?: number;\n\tlowValueYAbsoluteSumSelection?: number;\n\tlowValueYLowSelection?: number;\n\tlowValueYHighSelection?: number;\n\tlowValueYlowSelection?: number;\n\tlowValueYCloseSelection?: number;\n\n\thighValueXAverage?: number;\n\thighValueXCount?: number;\n\thighValueXSum?: number;\n\thighValueXAbsoluteSum?: number;\n\thighValueXLow?: number;\n\thighValueXHigh?: number;\n\thighValueXhigh?: number;\n\thighValueXClose?: number;\n\n\thighValueYAverage?: number;\n\thighValueYCount?: number;\n\thighValueYSum?: number;\n\thighValueYAbsoluteSum?: number;\n\thighValueYLow?: number;\n\thighValueYHigh?: number;\n\thighValueYhigh?: number;\n\thighValueYClose?: number;\n\n\thighValueXAverageSelection?: number;\n\thighValueXCountSelection?: number;\n\thighValueXSumSelection?: number;\n\thighValueXAbsoluteSumSelection?: number;\n\thighValueXLowSelection?: number;\n\thighValueXHighSelection?: number;\n\thighValueXhighSelection?: number;\n\thighValueXCloseSelection?: number;\n\n\thighValueYAverageSelection?: number;\n\thighValueYCountSelection?: number;\n\thighValueYSumSelection?: number;\n\thighValueYAbsoluteSumSelection?: number;\n\thighValueYLowSelection?: number;\n\thighValueYHighSelection?: number;\n\thighValueYhighSelection?: number;\n\thighValueYCloseSelection?: number;\n\n\toutOfSelection?: boolean;\n}\n\n\n/**\n * A base class for all XY chart series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/} for more info\n */\nexport abstract class XYSeries extends Series {\n\tpublic static className: string = \"XYSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([XYSeries.className]);\n\n\tdeclare public _settings: IXYSeriesSettings;\n\tdeclare public _privateSettings: IXYSeriesPrivate;\n\tdeclare public _dataItemSettings: IXYSeriesDataItem;\n\tdeclare public _axisRangeType: IXYSeriesAxisRange;\n\tdeclare public _events: IXYSeriesEvents;\n\n\tprotected _xField!: string;\n\tprotected _yField!: string;\n\tprotected _xOpenField!: string;\n\tprotected _yOpenField!: string;\n\n\tprotected _xLowField!: string;\n\tprotected _xHighField!: string;\n\tprotected _yLowField!: string;\n\tprotected _yHighField!: string;\n\n\tprotected _axesDirty: boolean = false;\n\tpublic _stackDirty: boolean = false;\n\n\tprotected _selectionProcessed = false;\n\n\tdeclare public chart: XYChart | undefined;\n\n\tpublic _dataSets: { [index: string]: Array<DataItem<IXYSeriesDataItem>> } = {};\n\n\tpublic _mainContainerMask: Graphics | undefined;\n\n\tprotected _x: number = 0;\n\tprotected _y: number = 0;\n\n\t/**\n\t * A [[Container]] that us used to put series' elements in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly mainContainer: Container = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * A list of axis ranges that affect the series.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t */\n\tpublic readonly axisRanges: List<this[\"_axisRangeType\"]> = new List();\n\n\tprotected _skipped: boolean = false;\n\n\tprotected _couldStackTo: Array<XYSeries> = [];\n\n\tprotected _reallyStackedTo: { [index: number]: XYSeries } = {};\n\n\tpublic _stackedSeries: { [index: number]: XYSeries } = {};\n\n\tprotected _aLocationX0: number = 0;\n\tprotected _aLocationX1: number = 1;\n\tprotected _aLocationY0: number = 0;\n\tprotected _aLocationY1: number = 1;\n\n\tprotected _showBullets: boolean = true;\n\n\tprotected valueXFields = [\n\t\t\"valueX\",\n\t\t\"openValueX\",\n\t\t\"lowValueX\",\n\t\t\"highValueX\"\n\t];\n\n\tprotected valueYFields = [\n\t\t\"valueY\",\n\t\t\"openValueY\",\n\t\t\"lowValueY\",\n\t\t\"highValueY\"\n\t];\n\n\tpublic _valueXFields!: Array<string>;\n\tpublic _valueYFields!: Array<string>;\n\n\t// used for full min/max\n\tprotected _valueXShowFields!: Array<string>;\n\tprotected _valueYShowFields!: Array<string>;\n\n\t// used for selection (uses working)\n\tpublic __valueXShowFields!: Array<string>;\n\tpublic __valueYShowFields!: Array<string>;\n\n\tprotected _emptyDataItem = new DataItem(this, undefined, {});\n\n\tpublic _dataSetId?: string;\n\n\tprotected _tooltipFieldX?: string;\n\tprotected _tooltipFieldY?: string;\n\n\tpublic _posXDp?: IDisposer;\n\tpublic _posYDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"categoryX\", \"categoryY\", \"openCategoryX\", \"openCategoryY\");\n\t\tthis.valueFields.push(\"valueX\", \"valueY\", \"openValueX\", \"openValueY\", \"lowValueX\", \"lowValueY\", \"highValueX\", \"highValueY\");\n\n\t\tthis._setRawDefault(\"vcx\", 1);\n\t\tthis._setRawDefault(\"vcy\", 1);\n\t\t// this can't go to themes, as data might be parsed before theme\n\t\tthis._setRawDefault(\"valueXShow\", \"valueXWorking\");\n\t\tthis._setRawDefault(\"valueYShow\", \"valueYWorking\");\n\n\t\tthis._setRawDefault(\"openValueXShow\", \"openValueXWorking\");\n\t\tthis._setRawDefault(\"openValueYShow\", \"openValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXShow\", \"lowValueXWorking\");\n\t\tthis._setRawDefault(\"lowValueYShow\", \"lowValueYWorking\");\n\n\t\tthis._setRawDefault(\"highValueXShow\", \"highValueXWorking\");\n\t\tthis._setRawDefault(\"highValueYShow\", \"highValueYWorking\");\n\n\t\tthis._setRawDefault(\"lowValueXGrouped\", \"low\");\n\t\tthis._setRawDefault(\"lowValueYGrouped\", \"low\");\n\n\t\tthis._setRawDefault(\"highValueXGrouped\", \"high\");\n\t\tthis._setRawDefault(\"highValueYGrouped\", \"high\");\n\n\n\n\t\tsuper._afterNew();\n\n\t\tthis.set(\"maskContent\", true);\n\n\t\tthis._disposers.push(this.axisRanges.events.onAll((change) => {\n\t\t\tif (change.type === \"clear\") {\n\t\t\t\t$array.each(change.oldValues, (axisRange) => {\n\t\t\t\t\tthis._removeAxisRange(axisRange);\n\t\t\t\t});\n\t\t\t} else if (change.type === \"push\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"setIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"insertIndex\") {\n\t\t\t\tthis._processAxisRange(change.newValue);\n\t\t\t} else if (change.type === \"removeIndex\") {\n\t\t\t\tthis._removeAxisRange(change.oldValue);\n\t\t\t} else if (change.type === \"moveIndex\") {\n\t\t\t\tthis._processAxisRange(change.value);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unknown IStreamEvent type\");\n\t\t\t}\n\t\t}))\n\n\t\tthis.states.create(\"hidden\", <any>{ opacity: 1, visible: false });\n\n\t\tthis._makeFieldNames();\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst container = Container.new(this._root, {});\n\t\taxisRange.container = container;\n\t\tthis.children.push(container);\n\n\t\taxisRange.series = this;\n\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\taxisDataItem.setRaw(\"isRange\", true);\n\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\tif (axis) {\n\t\t\taxis._processAxisRange(axisDataItem, [\"range\", \"series\"]);\n\n\t\t\tconst bullet = axisDataItem.get(\"bullet\");\n\t\t\tif (bullet) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst axisFill = axisDataItem.get(\"axisFill\");\n\t\t\tif (axisFill) {\n\t\t\t\tcontainer.set(\"mask\", axisFill);\n\t\t\t}\n\t\t\taxis._seriesAxisRanges.push(axisDataItem);\n\t\t}\n\t}\n\n\tprotected _removeAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tconst axisDataItem = axisRange.axisDataItem;\n\t\tconst axis = <Axis<AxisRenderer>>axisDataItem.component;\n\t\taxis.disposeDataItem(axisDataItem);\n\n\t\t$array.remove(axis._seriesAxisRanges, axisDataItem);\n\n\t\tconst container = axisRange.container;\n\t\tif (container) {\n\t\t\tcontainer.dispose();\n\t\t}\n\t}\n\n\tprotected _updateFields() {\n\t\tsuper._updateFields();\n\n\t\tthis._valueXFields = [];\n\t\tthis._valueYFields = [];\n\t\tthis._valueXShowFields = [];\n\t\tthis._valueYShowFields = [];\n\n\t\tthis.__valueXShowFields = [];\n\t\tthis.__valueYShowFields = [];\n\n\t\tif (this.valueXFields) {\n\t\t\t$array.each(this.valueXFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueXFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueXShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueXShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueXShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.valueYFields) {\n\t\t\t$array.each(this.valueYFields as Array<keyof this[\"_settings\"]>, (key) => {\n\t\t\t\tconst field = this.get(<any>(key + \"Field\"));\n\n\t\t\t\tif (field) {\n\t\t\t\t\tthis._valueYFields.push(<any>key);\n\t\t\t\t\tlet field = this.get(<any>(key + \"Show\"));\n\t\t\t\t\tthis.__valueYShowFields.push(field);\n\n\t\t\t\t\tif (field.indexOf(\"Working\") != -1) {\n\t\t\t\t\t\tthis._valueYShowFields.push(field.split(\"Working\")[0]);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._valueYShowFields.push(field);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\n\t\t$array.removeFirst(this.get(\"xAxis\").series, this);\n\t\t$array.removeFirst(this.get(\"yAxis\").series, this);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _min<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = min(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\t// TODO use  SelectKeys<this[\"_privateSettings\"], number | undefined>\n\tprotected _max<Key extends keyof this[\"_privateSettings\"]>(key: Key, value: number | undefined) {\n\t\tlet newValue = max(this.getPrivate(key) as any, value);\n\t\tthis.setPrivate(key, newValue as any);\n\t}\n\n\tprotected _shouldMakeBullet(dataItem: DataItem<this[\"_dataItemSettings\"]>): boolean {\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tif (!xAxis.inited || !yAxis.inited) {\n\t\t\treturn false\n\t\t}\n\t\tconst minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\tif (minBulletDistance > 0) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\n\t\t\tlet count = endIndex - startIndex;\n\n\t\t\tif (xAxis == baseAxis) {\n\t\t\t\tif (xAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (yAxis == baseAxis) {\n\t\t\t\tif (yAxis.get(\"renderer\").axisLength() / count < minBulletDistance / 5) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(this._xField as any) != null && dataItem.get(this._yField as any) != null) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprotected _makeFieldNames() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst xName = xAxis.getPrivate(\"name\")!;\n\t\tconst xCapName = $utils.capitalizeFirst(xName);\n\n\t\tconst yName = yAxis.getPrivate(\"name\")!;\n\t\tconst yCapName = $utils.capitalizeFirst(yName);\n\n\t\tconst xLetter = xAxis.get(\"renderer\").getPrivate(\"letter\")!\n\t\tconst yLetter = yAxis.get(\"renderer\").getPrivate(\"letter\")!\n\n\t\tconst open = \"open\";\n\t\tconst low = \"low\";\n\t\tconst high = \"high\";\n\t\tconst show = \"Show\";\n\n\t\tif (xAxis.className === \"ValueAxis\") {\n\t\t\tthis._xField = this.get(<any>(xName + xLetter! + show));\n\t\t\tthis._xOpenField = this.get(<any>(open + xCapName + xLetter! + show));\n\t\t\tthis._xLowField = this.get(<any>(low + xCapName + xLetter! + show));\n\t\t\tthis._xHighField = this.get(<any>(high + xCapName + xLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._xField = <any>(xName + xLetter!);\n\t\t\tthis._xOpenField = <any>(open + xCapName + xLetter!);\n\t\t\tthis._xLowField = <any>(low + xCapName + xLetter!);\n\t\t\tthis._xHighField = <any>(high + xCapName + xLetter!);\n\t\t}\n\n\t\tif (yAxis.className === \"ValueAxis\") {\n\t\t\tthis._yField = this.get(<any>(yName + yLetter! + show));\n\t\t\tthis._yOpenField = this.get(<any>(open + yCapName + yLetter! + show));\n\t\t\tthis._yLowField = this.get(<any>(low + yCapName + yLetter! + show));\n\t\t\tthis._yHighField = this.get(<any>(high + yCapName + yLetter! + show));\n\t\t}\n\t\telse {\n\t\t\tthis._yField = <any>(yName + yLetter!);\n\t\t\tthis._yOpenField = <any>(open + yCapName + yLetter!);\n\t\t\tthis._yLowField = <any>(low + yCapName + yLetter!);\n\t\t\tthis._yHighField = <any>(high + yCapName + yLetter!);\n\t\t}\n\t}\n\n\tprotected _fixVC() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst hiddenState = this.states.lookup(\"hidden\");\n\t\tconst sequencedInterpolation = this.get(\"sequencedInterpolation\");\n\n\t\tif (hiddenState) {\n\t\t\tlet value = 0;\n\t\t\tif (sequencedInterpolation) {\n\t\t\t\tvalue = 0.999999999999; // makes animate, good for stacked\n\t\t\t}\n\n\t\t\tif (xAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t}\n\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\thiddenState.set(\"vcy\", value);\n\t\t\t\thiddenState.set(\"vcx\", value);\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _handleMaskBullets() {\n\t\tif (this.isDirty(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.set(\"maskContent\", this.get(\"maskBullets\"));\n\t\t}\n\t}\n\n\tpublic _fixPosition() {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tthis.set(\"x\", xAxis.x() - $utils.relativeToValue(xAxis.get(\"centerX\", 0), xAxis.width()) - xAxis.parent!.get(\"paddingLeft\", 0));\n\t\tthis.set(\"y\", yAxis.y() - $utils.relativeToValue(yAxis.get(\"centerY\", 0), yAxis.height()) - yAxis.parent!.get(\"paddingTop\", 0));\n\n\t\tthis.bulletsContainer.set(\"y\", this.y());\n\t\tthis.bulletsContainer.set(\"x\", this.x());\n\t}\n\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"valueYShow\") || this.isDirty(\"valueXShow\") || this.isDirty(\"openValueYShow\") || this.isDirty(\"openValueXShow\") || this.isDirty(\"lowValueYShow\") || this.isDirty(\"lowValueXShow\") || this.isDirty(\"highValueYShow\") || this.isDirty(\"highValueXShow\")) {\n\t\t\tthis._updateFields();\n\t\t\tthis._makeFieldNames();\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tif (this.isDirty(\"xAxis\") || this.isDirty(\"yAxis\")) {\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tthis.set(\"width\", this.get(\"xAxis\").width());\n\t\tthis.set(\"height\", this.get(\"yAxis\").height());\n\n\t\tthis._handleMaskBullets();\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\n\t\tconst tooltipPositionX = this.get(\"tooltipPositionX\");\n\t\tlet tooltipFieldX: string;\n\n\t\tswitch (tooltipPositionX) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldX = this._xOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldX = this._xLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldX = this._xHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldX = this._xField;\n\t\t}\n\t\tthis._tooltipFieldX = tooltipFieldX;\n\n\t\tconst tooltipPositionY = this.get(\"tooltipPositionY\");\n\t\tlet tooltipFieldY: string;\n\t\tswitch (tooltipPositionY) {\n\t\t\tcase \"open\":\n\t\t\t\ttooltipFieldY = this._yOpenField;\n\t\t\t\tbreak;\n\t\t\tcase \"low\":\n\t\t\t\ttooltipFieldY = this._yLowField;\n\t\t\t\tbreak;\n\t\t\tcase \"high\":\n\t\t\t\ttooltipFieldY = this._yHighField;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\ttooltipFieldY = this._yField;\n\t\t}\n\t\tthis._tooltipFieldY = tooltipFieldY;\n\n\t\tif (this.isDirty(\"baseAxis\")) {\n\t\t\tthis._fixVC();\n\t\t}\n\n\n\t\tthis._fixPosition();\n\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (this.isDirty(\"stacked\")) {\n\t\t\tif (stacked) {\n\t\t\t\tif (this._valuesDirty && !this._dataProcessed) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._stack();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._unstack();\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty && !this._dataProcessed) {\n\t\t\tthis._dataProcessed = true;\n\n\t\t\tif (stacked) {\n\t\t\t\tthis._stack();\n\t\t\t}\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t$array.each(this._valueXShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedXValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minX\", value);\n\t\t\t\t\t\tthis._max(\"maxX\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\t$array.each(this._valueYShowFields, (key) => {\n\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\tif (stacked) {\n\t\t\t\t\t\t\tvalue += this.getStackedYValue(dataItem, key);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._min(\"minY\", value);\n\t\t\t\t\t\tthis._max(\"maxY\", value);\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\txAxis.processSeriesDataItem(dataItem, this._valueXFields);\n\t\t\t\tyAxis.processSeriesDataItem(dataItem, this._valueYFields);\n\t\t\t})\n\n\t\t\txAxis._seriesValuesDirty = true;\n\t\t\tyAxis._seriesValuesDirty = true;\n\n\t\t\tif (!this.get(\"ignoreMinMax\")) {\n\t\t\t\tif (this.isPrivateDirty(\"minX\") || this.isPrivateDirty(\"maxX\")) {\n\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t\tif (this.isPrivateDirty(\"minY\") || this.isPrivateDirty(\"maxY\")) {\n\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._markStakedDirtyStack();\n\n\t\t\t//this.updateLegendMarker(undefined); // causes legend marker to change color instantly when on\n\t\t\tif (!this.get(\"tooltipDataItem\")) {\n\t\t\t\tthis.updateLegendValue(undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"vcx\") || this.isDirty(\"vcy\")) {\n\t\t\tthis._markStakedDirtyStack();\n\t\t}\n\n\t\tif (!this._dataGrouped) {\n\t\t\txAxis._groupSeriesData(this);\n\t\t\tyAxis._groupSeriesData(this);\n\t\t\tthis._dataGrouped = true;\n\t\t}\n\n\t\tif (this._valuesDirty || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"endIndex\") || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty) {\n\t\t\tlet startIndex = this.startIndex();\n\t\t\tlet endIndex = this.endIndex();\n\t\t\tlet minBulletDistance = this.get(\"minBulletDistance\", 0);\n\t\t\tif (minBulletDistance > 0 && baseAxis) {\n\t\t\t\tif (baseAxis.get(\"renderer\").axisLength() / (endIndex - startIndex) > minBulletDistance) {\n\t\t\t\t\tthis._showBullets = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._showBullets = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ((this._psi != startIndex || this._pei != endIndex || this.isDirty(\"vcx\") || this.isDirty(\"vcy\") || this._stackDirty || this._valuesDirty) && !this._selectionProcessed) {\n\t\t\t\tthis._selectionProcessed = true;\n\n\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\t\t\t\tconst stacked = this.get(\"stacked\", false);\n\t\t\t\tconst outOfSelection = this.getPrivate(\"outOfSelection\");\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tyAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinY\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxY\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processYSelectionDataItem(this.dataItems[i], vcy, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\txAxis._calculateTotals();\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMinX\", undefined);\n\t\t\t\t\tthis.setPrivateRaw(\"selectionMaxX\", undefined);\n\t\t\t\t\tif (!outOfSelection) {\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tthis.processXSelectionDataItem(this.dataItems[i], vcx, stacked);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (baseAxis === xAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueYShow\") !== \"valueYWorking\") {\n\t\t\t\t\t\tconst selectionMinY = this.getPrivate(\"selectionMinY\");\n\t\t\t\t\t\tif (selectionMinY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minY\", selectionMinY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxY = this.getPrivate(\"selectionMaxY\");\n\t\t\t\t\t\tif (selectionMaxY != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxY\", selectionMaxY);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (baseAxis === yAxis || !baseAxis) {\n\t\t\t\t\tif (this.get(\"valueXShow\") !== \"valueXWorking\") {\n\t\t\t\t\t\tconst selectionMinX = this.getPrivate(\"selectionMinX\");\n\t\t\t\t\t\tif (selectionMinX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"minX\", selectionMinX);\n\t\t\t\t\t\t\tyAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst selectionMaxX = this.getPrivate(\"selectionMaxX\")\n\t\t\t\t\t\tif (selectionMaxX != null) {\n\t\t\t\t\t\t\tthis.setPrivateRaw(\"maxX\", selectionMaxX);\n\t\t\t\t\t\t\txAxis.markDirtyExtremes();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinX\") || this.isPrivateDirty(\"selectionMaxX\")) {\n\t\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\n\t\t\t\tif (this.isPrivateDirty(\"selectionMinY\") || this.isPrivateDirty(\"selectionMaxY\")) {\n\t\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t\t}\n\t\t\t\t// this.updateLegendValue(undefined); flickers while panning\n\t\t\t}\n\t\t}\n\t}\n\n\n\tprotected _makeRangeMask() {\n\t\tif (this.axisRanges.length > 0) {\n\t\t\tlet mainContainerMask = this._mainContainerMask;\n\t\t\tif (mainContainerMask == null) {\n\t\t\t\tmainContainerMask = this.children.push(Graphics.new(this._root, {}));\n\t\t\t\tthis._mainContainerMask = mainContainerMask;\n\n\t\t\t\tmainContainerMask.set(\"draw\", (display, target) => {\n\t\t\t\t\tconst parent = this.parent;\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tconst w = this._root.container.width();\n\t\t\t\t\t\tconst h = this._root.container.height();\n\t\t\t\t\t\tdisplay.moveTo(-w, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, h * 2);\n\t\t\t\t\t\tdisplay.lineTo(w * 2, -h);\n\t\t\t\t\t\tdisplay.lineTo(-w, -h);\n\n\n\t\t\t\t\t\tthis.axisRanges.each((axisRange) => {\n\t\t\t\t\t\t\tconst fill = axisRange.axisDataItem.get(\"axisFill\");\n\n\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\tif (fill) {\n\t\t\t\t\t\t\t\t\tlet draw = fill.get(\"draw\");\n\t\t\t\t\t\t\t\t\tif (draw) {\n\t\t\t\t\t\t\t\t\t\tdraw(display, target);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tthis.mainContainer._display.mask = mainContainerMask!._display;\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tmainContainerMask.markDirty();\n\t\t\tmainContainerMask._markDirtyKey(\"fill\");\n\t\t}\n\t\telse {\n\t\t\tthis.mainContainer._display.mask = null;\n\t\t}\n\t}\n\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\t// save for performance\n\t\tthis._x = this.x();\n\t\tthis._y = this.y();\n\t\tthis._makeRangeMask();\n\t}\n\n\tprotected _stack() {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst seriesIndex = chart.series.indexOf(this);\n\n\t\t\tthis._couldStackTo = [];\n\n\t\t\tif (seriesIndex > 0) {\n\t\t\t\tlet series: XYSeries;\n\n\t\t\t\tfor (let i = seriesIndex - 1; i >= 0; i--) {\n\t\t\t\t\tseries = chart.series.getIndex(i)!;\n\t\t\t\t\tif (series.get(\"xAxis\") === this.get(\"xAxis\") && series.get(\"yAxis\") === this.get(\"yAxis\") && series.className === this.className) {\n\t\t\t\t\t\tthis._couldStackTo.push(series);\n\t\t\t\t\t\tif (!series.get(\"stacked\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._stackDataItems();\n\t\t}\n\t}\n\n\tpublic _unstack() {\n\n\t\t$object.each(this._reallyStackedTo, (_key, value) => {\n\t\t\tdelete (value._stackedSeries[this.uid]);\n\t\t})\n\n\t\tthis._reallyStackedTo = {};\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tdataItem.setRaw(\"stackToItemY\", undefined);\n\t\t\tdataItem.setRaw(\"stackToItemX\", undefined);\n\t\t})\n\t}\n\n\tprotected _stackDataItems() {\n\t\t// this works only with the same number of data @todo: search by date/category?\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\tlet field: \"valueX\" | \"valueY\";\n\t\tlet stackToItemKey: \"stackToItemX\" | \"stackToItemY\";\n\t\tif (baseAxis === xAxis) {\n\t\t\tfield = \"valueY\";\n\t\t\tstackToItemKey = \"stackToItemY\";\n\t\t}\n\t\telse if (baseAxis === yAxis) {\n\t\t\tfield = \"valueX\";\n\t\t\tstackToItemKey = \"stackToItemX\";\n\t\t}\n\n\t\tlet len = this._couldStackTo.length;\n\t\tlet index = 0;\n\t\tconst stackToNegative = this.get(\"stackToNegative\");\n\n\t\tthis._reallyStackedTo = {};\n\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tfor (let s = 0; s < len; s++) {\n\t\t\t\tlet stackToSeries = this._couldStackTo[s];\n\t\t\t\tlet stackToItem = stackToSeries.dataItems[index];\n\t\t\t\tlet value = dataItem.get(field);\n\n\t\t\t\tif (stackToItem) {\n\t\t\t\t\tlet stackValue = stackToItem.get(field);\n\t\t\t\t\tif (stackToNegative) {\n\t\t\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\t\t\tif ($type.isNumber(stackValue)) {\n\t\t\t\t\t\t\t\tif (value >= 0 && stackValue >= 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (value < 0 && stackValue < 0) {\n\t\t\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif ($type.isNumber(value) && $type.isNumber(stackValue)) {\n\t\t\t\t\t\t\tdataItem.setRaw(stackToItemKey, stackToItem);\n\t\t\t\t\t\t\tthis._reallyStackedTo[stackToSeries.uid] = stackToSeries;\n\t\t\t\t\t\t\tstackToSeries._stackedSeries[this.uid] = this;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tindex++;\n\t\t})\n\t}\n\n\tprotected processXSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcx: number, stacked: boolean) {\n\t\t$array.each(this.__valueXShowFields, (key) => {\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedXValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinX\", value);\n\t\t\t\tthis._max(\"selectionMaxX\", value * vcx);\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected processYSelectionDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, vcy: number, stacked: boolean) {\n\t\t$array.each(this.__valueYShowFields, (key) => {\n\n\t\t\tlet value = dataItem.get(<any>key);\n\t\t\tif (value != null) {\n\t\t\t\tif (stacked) {\n\t\t\t\t\tvalue += this.getStackedYValueWorking(dataItem, key);\n\t\t\t\t}\n\n\t\t\t\tthis._min(\"selectionMinY\", value);\n\t\t\t\tthis._max(\"selectionMaxY\", value * vcy);\n\t\t\t}\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcy\", 1) + this.getStackedYValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValueWorking(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\tconst stackedToSeries = stackToItem.component as XYSeries;\n\t\t\treturn stackToItem.get(key as any, 0) * stackedToSeries.get(\"vcx\", 1) + this.getStackedXValueWorking(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedYValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemY\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedYValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getStackedXValue(dataItem: DataItem<IXYSeriesDataItem>, key: string): number {\n\t\tconst stackToItem = dataItem.get(\"stackToItemX\");\n\n\t\tif (stackToItem) {\n\t\t\treturn stackToItem.get(key as any, 0) + this.getStackedXValue(stackToItem, key);\n\t\t}\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic createLegendMarker(_dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis.updateLegendMarker();\n\t}\n\n\tpublic _markDirtyAxes() {\n\t\tthis._axesDirty = true;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _markDataSetDirty() {\n\t\tthis._afterDataChange();\n\t\tthis._valuesDirty = true;\n\t\tthis._dataProcessed = false;\n\t\tthis._aggregatesCalculated = false;\n\t\tthis.markDirty();\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._axesDirty = false;\n\t\tthis._selectionProcessed = false;\n\t\tthis._stackDirty = false;\n\t\tthis._dataProcessed = false;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tlet dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\n\t\t\tlet locationX = bullet.get(\"locationX\", dataItem.get(\"locationX\", 0.5));\n\t\t\tlet locationY = bullet.get(\"locationY\", dataItem.get(\"locationY\", 0.5));\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tconst positionX = xAxis.getDataItemPositionX(dataItem, this._xField, locationX, this.get(\"vcx\", 1));\n\t\t\tconst positionY = yAxis.getDataItemPositionY(dataItem, this._yField, locationY, this.get(\"vcy\", 1))\n\n\t\t\tlet point = this.getPoint(positionX, positionY);\n\n\t\t\tlet left = dataItem.get(\"left\", point.x);\n\t\t\tlet right = dataItem.get(\"right\", point.x);\n\t\t\tlet top = dataItem.get(\"top\", point.y);\n\t\t\tlet bottom = dataItem.get(\"bottom\", point.y);\n\n\t\t\tif (this._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tif (!bullet.getPrivate(\"hidden\")) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\n\t\t\t\tlet w = right - left;\n\t\t\t\tlet h = bottom - top;\n\n\t\t\t\tif (sprite.isType(\"Label\")) {\n\t\t\t\t\tsprite.setPrivate(\"maxWidth\", Math.abs(w));\n\t\t\t\t\tsprite.setPrivate(\"maxHeight\", Math.abs(h));\n\t\t\t\t}\n\n\t\t\t\tlet x = left + w * locationX;\n\t\t\t\tlet y = bottom - h * locationY;\n\n\t\t\t\tsprite.set(\"x\", x);\n\t\t\t\tsprite.set(\"y\", y);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _shouldShowBullet(_positionX: number, _positionY: number): boolean {\n\t\treturn this._showBullets;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic setDataSet(id: string) {\n\t\tif (this._dataSets[id]) {\n\t\t\tthis._handleDataSetChange();\n\t\t\tthis._dataItems = this._dataSets[id];\n\t\t\tthis._markDataSetDirty();\n\t\t\tthis._dataSetId = id;\n\n\t\t\tconst type = \"datasetchanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this, id: id });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic resetGrouping() {\n\t\t$object.each(this._dataSets, (_key, dataSet) => {\n\t\t\tif (dataSet != this._mainDataItems) {\n\t\t\t\t$array.each(dataSet, (dataItem) => {\n\t\t\t\t\tthis.disposeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t\tthis._dataSets = {};\n\t\tthis._dataItems = this.mainDataItems;\n\t}\n\n\tprotected _handleDataSetChange() {\n\t\tif (this.bullets.length > 0) {\n\t\t\t$array.each(this._dataItems, (dataItem) => {\n\t\t\t\tlet bullets = dataItem.bullets;\n\t\t\t\tif (bullets) {\n\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\tif (bullet) {\n\t\t\t\t\t\t\tlet sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis._selectionProcessed = false; // for totals to be calculated\n\t}\n\n\t/**\n\t * Shows hidden series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async show(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Array<Promise<any>> = [];\n\t\tpromises.push(super.show(duration).then(() => {\n\t\t\tthis._isShowing = false;\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\t\t\tlet baseAxis = this.get(\"baseAxis\");\n\t\t\tif (yAxis !== baseAxis) {\n\t\t\t\tyAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t\tif (xAxis !== baseAxis) {\n\t\t\t\txAxis.markDirtySelectionExtremes();\n\t\t\t}\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.show(duration));\n\t\tpromises.push(this._sequencedShowHide(true, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series.\n\t *\n\t * @param   duration  Duration of animation in milliseconds\n\t * @return            Animation promise\n\t */\n\tpublic async hide(duration?: number): Promise<void> {\n\t\tthis._fixVC();\n\t\tlet promises: Promise<any>[] = [];\n\t\tpromises.push(super.hide(duration).then(() => {\n\t\t\tthis._isHiding = false;\n\t\t}));\n\t\tpromises.push(this.bulletsContainer.hide(duration));\n\t\tpromises.push(this._sequencedShowHide(false, duration));\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\t$array.each(this._valueFields, (key) => {\n\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: dataItem.get(key as any), duration: duration!, easing: easing }).waitForStop());\n\t\t})\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(\"stateAnimationDuration\", this.get(\"stateAnimationDuration\", 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(\"stateAnimationEasing\", this.get(\"stateAnimationEasing\"));\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst baseAxis = this.get(\"baseAxis\");\n\t\tconst stacked = this.get(\"stacked\");\n\n\t\tif (baseAxis === xAxis || !baseAxis) {\n\n\t\t\t$array.each(this._valueYFields, (key) => {\n\t\t\t\tlet min = yAxis.getPrivate(\"min\");\n\t\t\t\tlet baseValue = yAxis.baseValue();\n\n\t\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\t\tbaseValue = min;\n\t\t\t\t}\n\t\t\t\tif (stacked) {\n\t\t\t\t\tbaseValue = 0;\n\t\t\t\t}\n\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tif (baseAxis === yAxis || !baseAxis) {\n\n\t\t\tlet min = xAxis.getPrivate(\"min\");\n\t\t\tlet baseValue = xAxis.baseValue();\n\t\t\tif ($type.isNumber(min) && min > baseValue) {\n\t\t\t\tbaseValue = min;\n\t\t\t}\n\t\t\tif (stacked) {\n\t\t\t\tbaseValue = 0;\n\t\t\t}\n\n\t\t\t$array.each(this._valueXFields, (key) => {\n\t\t\t\tlet value = dataItem.get(key as any);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tpromises.push(dataItem.animate({ key: key + \"Working\" as any, to: baseValue, duration: duration!, easing: easing }).waitForStop());\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _markDirtyStack() {\n\t\tthis._stackDirty = true;\n\t\tthis.markDirty();\n\t\tthis._markStakedDirtyStack();\n\t}\n\n\tprotected _markStakedDirtyStack() {\n\t\tconst stackedSeries = this._stackedSeries;\n\t\tif (stackedSeries) {\n\n\t\t\t$object.each(stackedSeries, (_key, value) => {\n\t\t\t\tif (!value._stackDirty) {\n\t\t\t\t\tvalue._markDirtyStack();\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._skipped) {\n\t\t\tthis._markDirtyAxes();\n\t\t\tthis._skipped = false;\n\t\t}\n\t}\n\n\t/**\n\t * Shows a tooltip for specific data item.\n\t *\n\t * @param  dataItem  Data item\n\t */\n\tpublic showDataItemTooltip(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tthis.updateLegendMarker(dataItem);\n\t\tthis.updateLegendValue(dataItem);\n\n\t\tconst tooltip = this.get(\"tooltip\");\n\n\t\tif (tooltip) {\n\t\t\tif (!this.isHidden()) {\n\t\t\t\ttooltip._setDataItem(dataItem);\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlet locationX = this.get(\"locationX\", 0);\n\t\t\t\t\tlet locationY = this.get(\"locationY\", 1);\n\n\t\t\t\t\tlet itemLocationX = dataItem.get(\"locationX\", locationX);\n\t\t\t\t\tlet itemLocationY = dataItem.get(\"locationY\", locationY);\n\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\n\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\n\n\t\t\t\t\tconst vcx = this.get(\"vcx\", 1);\n\t\t\t\t\tconst vcy = this.get(\"vcy\", 1);\n\n\t\t\t\t\tconst xPos = xAxis.getDataItemPositionX(dataItem, this._tooltipFieldX!, this._aLocationX0 + (this._aLocationX1 - this._aLocationX0) * itemLocationX, vcx);\n\t\t\t\t\tconst yPos = yAxis.getDataItemPositionY(dataItem, this._tooltipFieldY!, this._aLocationY0 + (this._aLocationY1 - this._aLocationY0) * itemLocationY, vcy);\n\n\t\t\t\t\tconst point = this.getPoint(xPos, yPos);\n\n\t\t\t\t\tlet show = true;\n\t\t\t\t\t$array.each(this._valueFields, (field) => {\n\t\t\t\t\t\tif (dataItem.get(field as any) == null) {\n\t\t\t\t\t\t\tshow = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tif (show) {\n\t\t\t\t\t\tconst chart = this.chart;\n\t\t\t\t\t\tif (chart && chart.inPlot(point)) {\n\t\t\t\t\t\t\ttooltip.label.text.markDirtyText();\n\t\t\t\t\t\t\ttooltip.set(\"tooltipTarget\", this._getTooltipTarget(dataItem));\n\t\t\t\t\t\t\ttooltip.set(\"pointTo\", this._display.toGlobal({ x: point.x, y: point.y }));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttooltip._setDataItem(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.hideTooltip();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic hideTooltip(): Promise<void> | undefined {\n\t\tconst tooltip = this.get(\"tooltip\");\n\t\tif (tooltip) {\n\t\t\ttooltip.set(\"tooltipTarget\", this);\n\t\t}\n\t\treturn super.hideTooltip();\n\t}\n\n\tprotected _getTooltipTarget(dataItem: DataItem<this[\"_dataItemSettings\"]>): Sprite {\n\t\tif (this.get(\"seriesTooltipTarget\") == \"bullet\") {\n\t\t\tconst bullets = dataItem.bullets;\n\t\t\tif (bullets && bullets.length > 0) {\n\t\t\t\tconst bullet = bullets[0];\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\treturn sprite;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLegendValue(dataItem: DataItem<this[\"_dataItemSettings\"]> | undefined) {\n\t\tconst legendDataItem = this.get(\"legendDataItem\");\n\n\t\tif (legendDataItem) {\n\n\t\t\tconst label = legendDataItem.get(\"label\");\n\t\t\tif (label) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tlabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\")));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeLabelText\", this.get(\"legendLabelText\", label.get(\"text\", this.get(\"name\", \"\"))));\n\t\t\t\t}\n\n\t\t\t\tlabel.set(\"text\", txt);\n\t\t\t}\n\n\t\t\tconst valueLabel = legendDataItem.get(\"valueLabel\");\n\t\t\tif (valueLabel) {\n\t\t\t\tlet txt = \"\";\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tvalueLabel._setDataItem(dataItem);\n\t\t\t\t\ttxt = this.get(\"legendValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvalueLabel._setDataItem(this._emptyDataItem);\n\t\t\t\t\ttxt = this.get(\"legendRangeValueText\", valueLabel.get(\"text\", \"\"));\n\t\t\t\t}\n\n\t\t\t\tvalueLabel.set(\"text\", txt);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getItemReaderLabel(): string {\n\t\tlet text = \"X: {\" + this._xField;\n\t\tif (this.get(\"xAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}; Y: {\" + this._yField;\n\t\tif (this.get(\"yAxis\").isType<DateAxis<any>>(\"DateAxis\")) {\n\t\t\ttext += \".formatDate()\";\n\t\t}\n\t\ttext += \"}\";\n\t\treturn text;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tlet x = this.get(\"xAxis\").get(\"renderer\").positionToCoordinate(positionX);\n\t\tlet y = this.get(\"yAxis\").get(\"renderer\").positionToCoordinate(positionY);\n\n\t\t// if coordinate is super big, canvas fails to draw line, capping to some big number (won't make any visual difference)\n\t\tlet max = 999999999;\n\t\tif (y < -max) {\n\t\t\ty = -max;\n\t\t}\n\t\tif (y > max) {\n\t\t\ty = max;\n\t\t}\n\n\t\tif (x < -max) {\n\t\t\tx = -max;\n\t\t}\n\t\tif (x > max) {\n\t\t\tx = max;\n\t\t}\n\n\t\treturn { x: x, y: y };\n\t}\n\n\tprotected _shouldInclude(_position: number): boolean {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic handleCursorHide() {\n\t\tthis.hideTooltip();\n\t\tthis.updateLegendValue(undefined);\n\t\tthis.updateLegendMarker(undefined);\n\t}\n\n\tprotected _afterDataChange() {\n\t\tsuper._afterDataChange();\n\t\tthis.get(\"xAxis\")._markDirtyKey(\"start\");\n\t\tthis.get(\"yAxis\")._markDirtyKey(\"start\");\n\t\tthis.resetExtremes();\n\t}\n\n\n\t/**\n\t * Resets cached axis scale values.\n\t */\n\tpublic resetExtremes() {\n\t\tthis.setPrivate(\"selectionMinX\", undefined);\n\t\tthis.setPrivate(\"selectionMaxX\", undefined);\n\t\tthis.setPrivate(\"selectionMinY\", undefined);\n\t\tthis.setPrivate(\"selectionMaxY\", undefined);\n\n\t\tthis.setPrivate(\"minX\", undefined);\n\t\tthis.setPrivate(\"minY\", undefined);\n\t\tthis.setPrivate(\"maxX\", undefined);\n\t\tthis.setPrivate(\"maxY\", undefined);\n\t}\n\n\t/**\n\t * Creates and returns an axis range object.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/} for more info\n\t * @param   axisDataItem  Axis data item\n\t * @return                Axis range\n\t */\n\tpublic createAxisRange(axisDataItem: DataItem<IAxisDataItem>): this[\"_axisRangeType\"] {\n\t\treturn this.axisRanges.push({\n\t\t\taxisDataItem: axisDataItem\n\t\t})\n\t}\n\n\t/**\n\t * A list of series's main (ungrouped) data items.\n\t *\n\t * @return  Data items\n\t */\n\tpublic get mainDataItems(): Array<DataItem<this[\"_dataItemSettings\"]>> {\n\t\treturn this._mainDataItems;\n\t}\n}\n","import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis.className == \"ValueAxis\") {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\tf++;\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t);\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import * as m from \"./../../dist/es2015/xy.js\";\nexport const am5xy = m;","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"names":["XYChart","this","chartContainer","children","push","new","_root","width","layout","verticalLayout","height","horizontalLayout","yAxesAndPlotContainer","maskContent","plotsContainer","plotContainer","isMeasured","topPlotContainer","themeTags","icon","x","y","_afterNew","_defaultThemes","super","_disposers","xAxes","yAxes","root","zoomOutButton","events","on","zoomOut","hide","states","lookup","set","seriesContainer","_processAxis","bottomAxesContainer","leftAxesContainer","topGridContainer","bulletsContainer","fill","fromHex","fillOpacity","event","_handlePlotDown","_handlePlotUp","_handlePlotMove","_maskGrid","_setUpTouch","_beforeChanged","isDirty","get","_display","cancelTouch","gridContainer","_removeSeries","series","_unstack","_posXDp","dispose","_posYDp","undefined","xAxis","markDirtyExtremes","yAxis","cursor","snapToSeries","handleWheel","wheelX","wheelY","wheelEvent","originalEvent","preventDefault","plotPoint","toLocal","point","wheelStep","shiftY","deltaY","shiftX","deltaX","wheelZoomPositionX","wheelZoomPositionY","each","axis","start","end","position","fixPosition","newStart","newEnd","getPrivate","Infinity","_handleWheelAnimation","zoom","delta","_getWheelSign","se","_fixWheel","_handleSetWheel","_wheelDp","Math","abs","sign","diff","button","local","pointerId","_downPoints","length","getIndex","_downStartX","_downEndX","_downStartY","_downEndY","_downPoint","clientX","clientY","panX","panY","_panStart","_panEnd","eventType","isEnabled","dispatch","type","target","animation","_dispatchWheelAnimation","downPoint","_isPanning","_movePoints","_handlePinch","documentPointToRoot","scrollbarX","disableType","panStart","panEnd","enableType","scrollbarY","i","downPoints","movePoints","k","movePoint","w","h","downPoint0","downPoint1","movePoint0","movePoint1","downStartX","downEndX","downPos0","downPos1","movePos0","movePos1","d","max","s","e","sa","ea","downStartY","downEndY","_handleCursorPosition","cursorPoint","snapToSeriesBy","dataItems","isHidden","isHiding","startIndex","endIndex","dataItem","tooltipDataItem","closestItem","minDistance","distance","hypot","tooltip","_setDataItem","component","showDataItemTooltip","handleMove","toGlobal","_updateCursor","updateCursor","_addCursor","_prepareChildren","_colorize","previous","_prevSettings","_disposeProperty","_setChart","_pushPropertyDisposer","_handleCursorSelectEnd","parent","topAxesContainer","_handleScrollbar","grip","setPrivate","getTooltipText","rightAxesContainer","_handleZoomOut","_processSeries","addDisposer","_fixPosition","isType","_markDirtyKey","_markDirtyAxes","colorSet","color","next","_setSoft","behavior","downPositionX","downPositionY","positionX","min","positionY","position0","toAxisPosition","position1","axes","priority","axisStart","axisEnd","zoomAnimation","updateScrollbar","setPrivateRaw","container","onAll","change","oldValues","_removeAxis","newValue","processChart","setIndex","index","insertIndex","oldValue","Error","moveValue","value","newIndex","isDisposed","axisParent","removeValue","gridParent","topGridParent","_updateChartLayout","left","right","processAxis","_handleAxisSelection","force","indexOf","setRaw","updateGrips","visible","show","inPlot","otherCharts","_otherCharts","global","chart","chartPlotContainer","documentPoint","rootPointToDocument","chartRoot","arrangeTooltips","hh","plotT","plotB","tooltips","closest","closestPoint","sum","_movePoint","maxTooltipDistance","maxTooltipDistanceBy","tooltipSeries","hidden","_tooltipToLocal","tooltipContainer","count","sort","a","b","prevY","centerY","top","bottom","_fy","reverse","prevBottom","bounds","classNames","concat","className","XYChartDefaultTheme","setupDefaultRules","ic","interfaceColors","language","r","rule","bind","setAll","colors","paddingLeft","paddingRight","paddingTop","paddingBottom","pinchZoomX","pinchZoomY","legendLabelText","saturation","cornerRadiusTR","cornerRadiusTL","cornerRadiusBR","cornerRadiusBL","focusable","create","strokeOpacity","inside","minGridDistance","opacity","minPosition","maxPosition","fontSize","text","populateText","centerX","layer","exportable","moveThreshold","strokeDasharray","ariaLabel","translate","minZoomCount","maxZoomCount","maxZoomFactor","maxDeviation","snapTooltip","tooltipLocation","zoomX","zoomY","fixAxisSize","location","multiLocation","crisp","opposite","inversed","cellStartLocation","cellEndLocation","cursorOverStyle","startLocation","endLocation","fillRule","axisFill","gridIntervals","timeUnit","dateFormats","periodChangeDateFormats","tooltipDateFormats","markUnitChange","strictMinMax","groupData","groupCount","groupIntervals","endValue","intervalDuration","baseInterval","gridInterval","Date","locale","firstDayOfWeek","utc","timezone","getTime","val","round","baseValue","logarithmic","autoZoom","step","baseUnit","maskBullets","stackToNegative","locationX","locationY","openValueXGrouped","openValueYGrouped","valueXGrouped","valueYGrouped","seriesTooltipTarget","adjustBulletPosition","clustered","strokeWidth","role","connect","autoGapCount","draw","display","sprite","moveTo","lineTo","tension","lowValueXGrouped","lowValueYGrouped","highValueXGrouped","highValueYGrouped","interactive","draggable","rotation","XYCursor","_settings","_drawLines","setTimeout","lineX","_handleXLine","lineY","_handleYLine","ev","_handleLineFocus","_handleLineBlur","document","_handleLineMove","keyCode","dir","increment","focused","getCellWidthPosition","_line","alwaysShow","_tooltipX","_updateXLine","_tooltipY","_updateYLine","_handleSyncWith","syncWith","_updateChildren","_getPoint","_toX","animate","key","to","duration","easing","_toY","_handleMove","_handleCursorDown","_handleCursorUp","native","selection","_inPlot","rootPoint","_getPosition","charAt","lastPoint","_lastPoint","skipEvent","xyPos","userPositionX","userPositionY","xy","handleCursorShow","_updateLines","_updateSelection","_onHide","handleCursorHide","_onShow","_dispose","Axis","background","labelsContainer","axisHeader","axisRanges","disposeDataItem","_processAxisRange","renderer","ghostLabel","makeLabel","adapters","disable","tooltipText","tooltipHTML","_updateFinals","_start","_end","sAnimation","_sAnimation","eAnimation","_eAnimation","maxZoomFactorReal","minZoomFactor","playing","once","_markDirty","stop","_series","_createAssets","_rangesDirty","_prepareDataItem","above","grid","_dataItem","_index","markDirtySelectionExtremes","_calculateTotals","_updateAxisRanges","_bullets","axisRange","_seriesAxisRanges","_inversed","_axisLength","axisLength","_updateLC","rendererTags","addTag","toLowerCase","_applyThemes","label","_updateTooltipBounds","updateTooltipBounds","_updateBounds","axisHeadersContainer","onPrivate","markDirtySize","hideDataItem","_toggleFHDataItem","showDataItem","forceHidden","fh","tick","bullet","_toggleDataItem","v","tags","makeGrid","makeTick","makeAxisFill","_processBullet","axisBullet","_afterChanged","_updatePositions","labels","ticks","axisFills","_updateGhost","localBounds","gWidth","ceil","_getText","updateLabel","_cursorPosition","_snapToSeries","updateTooltip","getSeriesItem","updateLegendMarker","updateLegendValue","roundAxisPosition","_updateTooltipText","positionTooltip","_location","processSeriesDataItem","_fields","_clearDirty","_sizeDirty","coordinateToPosition","coordinate","toGlobalPosition","shouldGap","_nextItem","_autoGapCount","_fieldName","createAxisRange","axisDataItem","_groupSeriesData","AxisBullet","uid","AxisLabel","AxisLabelRadial","AxisRenderer","_new","template","make","gridCount","thumb","_handleThumbDown","_handleThumbUp","_handleThumbMove","_changed","pan","_thumbDownPoint","_downStart","_downEnd","_event","downStart","downEnd","extra","_getPan","_point1","_point2","positionToCoordinate","_tooltip","_updateSize","markDirty","_clear","toggleVisibility","_positionTooltip","AxisRendererX","gridTemplate","graphics","axisChildren","removeTag","_markDirtyRedraw","point1","point2","_ls","_lc","innerWidth","positionToPoint","updateTick","endPosition","updateGrid","updateBullet","bulletPosition","previousBullet","previousSprite","updateFill","x0","x1","fillDrawMethod","num","pointerOrientation","oldBounds","AxisRendererY","innerHeight","y0","y1","AxisTick","DateAxis","_setBaseInterval","interval","_baseDuration","_fixZoomFactor","baseMainDuration","_groupData","groupInterval","_handleRangeChange","_dataGrouped","mainDataSetId","setDataSet","resetGrouping","_seriesDataGrouped","intervals","baseDuration","_dataSets","fields","baseAxis","_valueYFields","_valueXFields","_mainDataItems","groupCallback","groupOriginals","firstDay","newDataItem","previousTime","dataSetId","groupFieldValues","workingFields","field","firstDate","prevNewDataItem","dataContext","time","roundedTime","_makeDataItem","groupKey","currentValue","average","_dataSetId","_groupingCalculated","getGroupInterval","getIntervalMax","_intervalMax","getIntervalMin","_intervalMin","selectionMin","selectionMax","modifiedDifference","current","newId","fieldName","endIndex2","firstDataItem","lastDataItem","lastDate","outOfSelection","_adjustMinMax","_strictMode","_intervalDuration","_saveMinMax","id","_getM","_prepareAxisItems","nextGridUnit","format","previousValue","formats","_dataItems","processDataItem","date","dateFormatter","j","inited","positionToValue","_getDelta","_deltaMinMax","_fixMin","startTime","endTime","_fixMax","_updateDates","_date","open","close","getDataItemPositionX","cellLocation","axisLocation","openValue","closeValue","_baseValue","valueToPosition","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","NaN","adjustPosition","snap","result","diValue","first","second","nextItem","value1","zoomToDates","zoomToValues","positionToDate","dateToPosition","GaplessDateAxis","valueFields","dates","_dates","found","_updateAllDates","len","itemValue","valueToIndex","findex","floor","_seriesValuesDirty","maxCount","Number","MAX_SAFE_INTEGER","frequency","_frequency","realDuration","selectedItems","startDate","previousPosition","minDifference","realValue","Grid","isPrivateDirty","ValueAxis","_dirtyExtremes","_dirtySelectionExtremes","syncWithAxis","_syncDp","someDirty","_valuesDirty","_getMinMax","_getSelectionMinMax","_formatText","numberFormat","formatter","getNumberFormatter","differencePower","minLog","_minLogAdjusted","log","LOG10E","pow","stepPower","decCount","fillEndPosition","hasTag","minMaxStep","stepDecimalPlaces","E","treatZeroAs","valueToFinalPosition","getX","getY","_cellLocation","getStackedXValueWorking","getStackedYValueWorking","basePosition","cellEndValue","fixSmallStep","vc","fieldWorking","total","minDefined","maxDefined","extraMin","extraMax","selectionStrictMinMax","seriesMin","seriesMax","minX","maxX","minY","maxY","isShowing","range","_minReal","_maxReal","minMaxStep2","selectionMinReal","selectionMaxReal","_syncAxes","LN10","minDiff","initialMin","initialMax","minAdapted","fold","maxAdapted","strictMinMaxSelection","strict","animatePrivate","exponent","power","_min","_max","strictMode","difference","stepDivisor","maxPrecision","ceiledStep","MAX_VALUE","minCount","_adjustPosition","extraDecimals","decimals","oldDiff","syncMin","syncMax","syncStep","currentCount","synced","c","omin","omax","ostep","_checkSync","BaseColumnSeries","_makeGraphics","listTemplate","makeColumn","_makeFieldNames","categoryAxis","valueAxis","_xOpenField","_xField","_yOpenField","_yField","_createGraphics","_ph","_pw","columnsTemplate","columns","clusterCount","stacked","xRenderer","yRenderer","cellLocationX0","cellLocationX1","cellLocationY0","cellLocationY1","_aLocationX0","_aLocationX1","_aLocationY0","_aLocationY1","_axesDirty","_stackDirty","_toggleColumn","_updateGraphics","_skipped","legendDataItem","markerRectangle","ds","setting","graphicsArray","rangeGraphics","previousDataItem","xField","yField","valueX","valueY","xOpenField","yOpenField","openLocationX","openLocationY","xStart","xEnd","yStart","yEnd","l","t","vcy","vcx","fitW","fitH","offset","stackToItemY","stackToItemX","_updateSeriesGraphics","_applyGraphicsStates","maxWidth","maxHeight","ptl","getPoint","pbr","tooltipPoint","_x","_y","_handleDataSetChange","dropFromOpen","riseFromOpen","dropFromPrevious","riseFromPrevious","previousClose","apply","list","promises","Promise","all","bullets","column","_getTooltipTarget","Candlestick","_draw","CandlestickSeries","mainContainer","getRaw","lx0","lx1","ly0","ly1","hx0","hx1","hy0","hy1","orientation","_xLowField","_xHighField","_yLowField","_yHighField","_updateCandleGraphics","pl0","pl1","ph0","ph1","ColumnSeries","LineSeries","strokes","fills","_fillGenerator","p","makeStroke","stroke","makeFill","_strokeTemplate","_fillTemplate","legendStroke","_legendStroke","legendFill","_legendFill","curveFactory","_strokeGenerator","curve","strokeTemplateField","fillTemplateField","strokeTemplateFound","fillTemplateFound","hasValues","_valueFields","_endIndex","_clearGraphics","_sindex","_dindex","_startSegment","clear","dataItemIndex","currentEndIndex","fillTemplate","originalTemplate","strokeTemplate","xOpenFieldValue","yOpenFieldValue","basePosX","basePosY","baseField","segments","points","fillVisible","getOpen","o","_getPoints","_endLine","_drawStroke","_drawFill","itemLocationX","itemLocationY","xPos","yPos","_shouldInclude","iPoint","xPos0","yPos0","closeIPoint","p0","p1","p2","p3","prev","_previousPoint","pp0","pp1","pp2","pp3","_points","_firstPoint","segment","context","createLegendMarker","marker","disabledColor","bulletFunction","legend","XYSeries","_setRawDefault","_removeAxisRange","_updateFields","_valueXShowFields","_valueYShowFields","__valueXShowFields","__valueYShowFields","valueXFields","split","valueYFields","_shouldMakeBullet","minBulletDistance","xName","xCapName","yName","yCapName","xLetter","yLetter","low","high","_fixVC","hiddenState","sequencedInterpolation","_handleMaskBullets","tooltipFieldX","tooltipFieldY","_tooltipFieldX","_tooltipFieldY","_dataProcessed","_stack","getStackedXValue","getStackedYValue","_markStakedDirtyStack","_showBullets","_psi","_pei","_selectionProcessed","processYSelectionDataItem","processXSelectionDataItem","selectionMinY","selectionMaxY","selectionMinX","selectionMaxX","_makeRangeMask","mainContainerMask","_mainContainerMask","mask","seriesIndex","_couldStackTo","_stackDataItems","_reallyStackedTo","_key","_stackedSeries","stackToItemKey","stackToSeries","stackToItem","stackValue","stackedToSeries","_markDataSetDirty","_afterDataChange","_aggregatesCalculated","_positionBullet","_shouldShowBullet","_positionX","_positionY","dataSet","mainDataItems","then","_isShowing","_sequencedShowHide","_isHiding","waitForStop","_markDirtyStack","stackedSeries","hideTooltip","markDirtyText","txt","_emptyDataItem","valueLabel","_getItemReaderLabel","_position","resetExtremes","XYChartScrollbar","Scrollbar","interactiveChildren","Graphics","_addOrientationClass","startGrip","endGrip","remove","_updateThumb","overlay","CategoryAxis","_itemMap","startCategory","endCategory","openKey","otherAxis","startDataItem","endDataItem","hasValue","f","fillIndex","categoryLocation","endCategoryLocation","categoryToIndex","indexToPosition","fillEndIndex","_axisLocation","category","dataItemToPosition","axisPositionToIndex","seriesDataItem","zoomToIndexes","zoomToCategories","CategoryDateAxis","previousIndex","previousUnitValue","changed","skip","unitValue","added","pop","shouldAdd","item","DurationAxis","durationFormatter","getDurationFormatter","divisors","realDivisor","divisor","reducedCount","getFormat","OHLC","lY","hY","lX","hX","OHLCSeries","List","Template","SmoothedYLineSeries","_setDefault","SmoothedXLineSeries","SmoothedXYLineSeries","Step","_context","_t","stepAfter","prototype","areaStart","areaEnd","lineStart","_point","lineEnd","closePath","StepLineSeries","itemLocationX0","itemLocationY0","itemLocationX1","itemLocationY1","xPos1","yPos1","iPoint0","point0","iPoint1","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","closeIPoint0","closeIPoint1","am5xy","that","bezierCurveTo","_x1","_k","_x2","_x0","_y1","_y2","_y0","Cardinal","custom","cardinal"],"sourceRoot":""}